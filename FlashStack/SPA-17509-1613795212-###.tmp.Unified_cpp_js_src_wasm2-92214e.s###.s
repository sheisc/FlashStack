	.text
	.file	"Unified_cpp_js_src_wasm2.cpp"
	.section	.text._ZN2js4wasm6ModuleD2Ev,"ax",@progbits
	.hidden	_ZN2js4wasm6ModuleD2Ev  # -- Begin function _ZN2js4wasm6ModuleD2Ev
	.globl	_ZN2js4wasm6ModuleD2Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm6ModuleD2Ev,@function
_ZN2js4wasm6ModuleD2Ev:                 # @_ZN2js4wasm6ModuleD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	leaq	_ZTVN2js4wasm6ModuleE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	176(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB0_2
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%rdi), %rax
	callq	*24(%rax)
.LBB0_2:
###SPA## trampoline_fmt_64
	movq	168(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB0_7
###SPA### trampoline_fmt_64
# %bb.3:
	lock		subq	$1, (%rbx)
	jne	.LBB0_7
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB0_6
###SPA### trampoline_fmt_64
# %bb.5:
	callq	free@PLT
.LBB0_6:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB0_7:
###SPA## trampoline_fmt_64
	movq	160(%r14), %r15
	movq	$0, 160(%r14)
	testq	%r15, %r15
	je	.LBB0_15
###SPA### trampoline_fmt_64
# %bb.8:
	leaq	4144(%r15), %rbx
	movq	$-4144, %r12            # imm = 0xEFD0
	.p2align	4, 0x90
.LBB0_9:                                # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	-24(%rbx), %rdi
	cmpq	%rdi, %rbx
	je	.LBB0_11
###SPA### trampoline_fmt_64
# %bb.10:                               #   in Loop: Header=BB0_9 Depth=1
	callq	free@PLT
.LBB0_11:                               #   in Loop: Header=BB0_9 Depth=1
###SPA## trampoline_fmt_64
	addq	$-56, %rbx
	addq	$56, %r12
	jne	.LBB0_9
###SPA### trampoline_fmt_64
# %bb.12:
	movq	8(%r15), %rdi
	cmpq	$8, %rdi
	je	.LBB0_14
###SPA### trampoline_fmt_64
# %bb.13:
	callq	free@PLT
.LBB0_14:
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	callq	free@PLT
.LBB0_15:
###SPA## trampoline_fmt_64
	movq	152(%r14), %rbx
	movq	$0, 152(%r14)
	testq	%rbx, %rbx
	je	.LBB0_19
###SPA### trampoline_fmt_64
# %bb.16:
	movq	(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB0_18
###SPA### trampoline_fmt_64
# %bb.17:
	callq	free@PLT
.LBB0_18:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB0_19:
###SPA## trampoline_fmt_64
	movq	120(%r14), %rbx
	movq	128(%r14), %r12
	testq	%r12, %r12
	jle	.LBB0_30
###SPA### trampoline_fmt_64
# %bb.20:
	shlq	$5, %r12
	addq	%rbx, %r12
	.p2align	4, 0x90
.LBB0_21:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%rbx), %r15
	testq	%r15, %r15
	je	.LBB0_26
###SPA### trampoline_fmt_64
# %bb.22:                               #   in Loop: Header=BB0_21 Depth=1
	lock		subq	$1, (%r15)
	jne	.LBB0_26
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB0_21 Depth=1
	movq	8(%r15), %rdi
	cmpq	$1, %rdi
	je	.LBB0_25
###SPA### trampoline_fmt_64
# %bb.24:                               #   in Loop: Header=BB0_21 Depth=1
	callq	free@PLT
.LBB0_25:                               #   in Loop: Header=BB0_21 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	callq	free@PLT
.LBB0_26:                               #   in Loop: Header=BB0_21 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB0_28
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB0_21 Depth=1
	callq	free@PLT
.LBB0_28:                               #   in Loop: Header=BB0_21 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbx
	cmpq	%r12, %rbx
	jb	.LBB0_21
###SPA### trampoline_fmt_64
# %bb.29:
	movq	120(%r14), %rbx
.LBB0_30:
###SPA## trampoline_fmt_64
	cmpq	$32, %rbx
	je	.LBB0_32
###SPA### trampoline_fmt_64
# %bb.31:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB0_32:
###SPA## trampoline_fmt_64
	movq	96(%r14), %rbx
	movq	104(%r14), %rax
	testq	%rax, %rax
	jle	.LBB0_41
###SPA### trampoline_fmt_64
# %bb.33:
	leaq	(%rbx,%rax,8), %r12
	.p2align	4, 0x90
.LBB0_34:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r15
	testq	%r15, %r15
	je	.LBB0_39
###SPA### trampoline_fmt_64
# %bb.35:                               #   in Loop: Header=BB0_34 Depth=1
	lock		subq	$1, (%r15)
	jne	.LBB0_39
###SPA### trampoline_fmt_64
# %bb.36:                               #   in Loop: Header=BB0_34 Depth=1
	movq	64(%r15), %rdi
	leaq	88(%r15), %rax
	cmpq	%rax, %rdi
	je	.LBB0_38
###SPA### trampoline_fmt_64
# %bb.37:                               #   in Loop: Header=BB0_34 Depth=1
	callq	free@PLT
.LBB0_38:                               #   in Loop: Header=BB0_34 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	callq	free@PLT
.LBB0_39:                               #   in Loop: Header=BB0_34 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r12, %rbx
	jb	.LBB0_34
###SPA### trampoline_fmt_64
# %bb.40:
	movq	96(%r14), %rbx
.LBB0_41:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB0_43
###SPA### trampoline_fmt_64
# %bb.42:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB0_43:
###SPA## trampoline_fmt_64
	movq	72(%r14), %rbx
	movq	80(%r14), %rax
	testq	%rax, %rax
	jle	.LBB0_52
###SPA### trampoline_fmt_64
# %bb.44:
	leaq	(%rbx,%rax,8), %r12
	.p2align	4, 0x90
.LBB0_45:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r15
	testq	%r15, %r15
	je	.LBB0_50
###SPA### trampoline_fmt_64
# %bb.46:                               #   in Loop: Header=BB0_45 Depth=1
	lock		subq	$1, (%r15)
	jne	.LBB0_50
###SPA### trampoline_fmt_64
# %bb.47:                               #   in Loop: Header=BB0_45 Depth=1
	movq	48(%r15), %rdi
	cmpq	$1, %rdi
	je	.LBB0_49
###SPA### trampoline_fmt_64
# %bb.48:                               #   in Loop: Header=BB0_45 Depth=1
	callq	free@PLT
.LBB0_49:                               #   in Loop: Header=BB0_45 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	callq	free@PLT
.LBB0_50:                               #   in Loop: Header=BB0_45 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r12, %rbx
	jb	.LBB0_45
###SPA### trampoline_fmt_64
# %bb.51:
	movq	72(%r14), %rbx
.LBB0_52:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB0_54
###SPA### trampoline_fmt_64
# %bb.53:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB0_54:
###SPA## trampoline_fmt_64
	movq	48(%r14), %rbx
	movq	56(%r14), %r15
	testq	%r15, %r15
	jle	.LBB0_60
###SPA### trampoline_fmt_64
# %bb.55:
	shlq	$4, %r15
	addq	%rbx, %r15
	.p2align	4, 0x90
.LBB0_56:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB0_58
###SPA### trampoline_fmt_64
# %bb.57:                               #   in Loop: Header=BB0_56 Depth=1
	callq	free@PLT
.LBB0_58:                               #   in Loop: Header=BB0_56 Depth=1
###SPA## trampoline_fmt_64
	addq	$16, %rbx
	cmpq	%r15, %rbx
	jb	.LBB0_56
###SPA### trampoline_fmt_64
# %bb.59:
	movq	48(%r14), %rbx
.LBB0_60:
###SPA## trampoline_fmt_64
	cmpq	$16, %rbx
	je	.LBB0_62
###SPA### trampoline_fmt_64
# %bb.61:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB0_62:
###SPA## trampoline_fmt_64
	movq	24(%r14), %rbx
	movq	32(%r14), %rax
	testq	%rax, %rax
	jle	.LBB0_70
###SPA### trampoline_fmt_64
# %bb.63:
	leaq	(%rax,%rax,2), %rax
	leaq	(%rbx,%rax,8), %r15
	.p2align	4, 0x90
.LBB0_64:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	movq	$0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB0_66
###SPA### trampoline_fmt_64
# %bb.65:                               #   in Loop: Header=BB0_64 Depth=1
	callq	free@PLT
.LBB0_66:                               #   in Loop: Header=BB0_64 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB0_68
###SPA### trampoline_fmt_64
# %bb.67:                               #   in Loop: Header=BB0_64 Depth=1
	callq	free@PLT
.LBB0_68:                               #   in Loop: Header=BB0_64 Depth=1
###SPA## trampoline_fmt_64
	addq	$24, %rbx
	cmpq	%r15, %rbx
	jb	.LBB0_64
###SPA### trampoline_fmt_64
# %bb.69:
	movq	24(%r14), %rbx
.LBB0_70:
###SPA## trampoline_fmt_64
	cmpq	$24, %rbx
	je	.LBB0_72
###SPA### trampoline_fmt_64
# %bb.71:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB0_72:
###SPA## trampoline_fmt_64
	movq	16(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB0_74
###SPA### trampoline_fmt_64
# %bb.73:
	lock		subq	$1, (%rbx)
	jne	.LBB0_74
###SPA### trampoline_fmt_64
# %bb.75:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm4CodeD2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB0_74:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end0:
	.size	_ZN2js4wasm6ModuleD2Ev, .Lfunc_end0-_ZN2js4wasm6ModuleD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6ModuleD0Ev,"ax",@progbits
	.hidden	_ZN2js4wasm6ModuleD0Ev  # -- Begin function _ZN2js4wasm6ModuleD0Ev
	.globl	_ZN2js4wasm6ModuleD0Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm6ModuleD0Ev,@function
_ZN2js4wasm6ModuleD0Ev:                 # @_ZN2js4wasm6ModuleD0Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZN2js4wasm6ModuleD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv@PLT              # TAILCALL
.Lfunc_end1:
	.size	_ZN2js4wasm6ModuleD0Ev, .Lfunc_end1-_ZN2js4wasm6ModuleD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE,"ax",@progbits
	.hidden	_ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE # -- Begin function _ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE
	.globl	_ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE,@function
_ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE: # @_ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$40, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB2_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rax, %rbx
	leaq	_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE+16(%rip), %rax
	movq	%rax, (%rbx)
	movq	%r13, 8(%rbx)
	lock		addq	$1, (%r13)
	movq	%r12, 16(%rbx)
	lock		addq	$1, (%r12)
	movq	%r14, 24(%rbx)
	lock		addq	$1, 8(%r14)
	movl	$0, 32(%rbx)
	testq	%r15, %r15
	je	.LBB2_2
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	movq	176(%r14), %rdi
	movq	%r15, 176(%r14)
	testq	%rdi, %rdi
	je	.LBB2_6
###SPA### trampoline_fmt_64
.LBB2_5:
###SPA## trampoline_fmt_64
	movq	(%rdi), %rax
	callq	*24(%rax)
.LBB2_6:
###SPA## trampoline_fmt_64
	movl	$1, %eax
	xchgl	%eax, 188(%r14)
	movq	%rbx, (%rsp)
	movq	%rsp, %rdi
	callq	_ZN2js32StartOffThreadWasmTier2GeneratorEN7mozilla9UniquePtrINS_4wasm18Tier2GeneratorTaskEN2JS12DeletePolicyIS3_EEEE
	movq	(%rsp), %rbx
	movq	$0, (%rsp)
	testq	%rbx, %rbx
	je	.LBB2_8
###SPA### trampoline_fmt_64
# %bb.7:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rbx, %rdi
	callq	free@PLT
.LBB2_8:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB2_10
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB2_2:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movq	176(%r14), %rdi
	movq	$0, 176(%r14)
	testq	%rdi, %rdi
	jne	.LBB2_5
###SPA### trampoline_fmt_64
	jmp	.LBB2_6
.LBB2_10:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end2:
	.size	_ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE, .Lfunc_end2-_ZN2js4wasm6Module10startTier2ERKNS0_11CompileArgsERKNS0_14ShareableBytesEPN2JS25OptimizedEncodingListenerE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE # -- Begin function _ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE
	.globl	_ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE,@function
_ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE: # @_ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 112(%rsp)
	movq	16(%rdi), %rdi
	movq	(%rdx), %rax
	movq	$0, (%rdx)
	movq	%rax, 32(%rsp)
	leaq	32(%rsp), %rsi
	movq	%r15, %rdx
	callq	_ZNK2js4wasm4Code8setTier2EN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS4_EEEERKNS0_8LinkDataE
	movl	%eax, %ebx
	movq	32(%rsp), %rbp
	movq	$0, 32(%rsp)
	testq	%rbp, %rbp
	je	.LBB3_2
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rbp, %rdi
	callq	_ZN2js4wasm8CodeTierD2Ev
	movq	%rbp, %rdi
	callq	free@PLT
.LBB3_2:
###SPA## trampoline_fmt_64
	testb	%bl, %bl
	je	.LBB3_18
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%r15, 24(%rsp)          # 8-byte Spill
	movq	16(%r14), %rdi
	xorl	%esi, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rbx
	movq	16(%r14), %rdi
	xorl	%esi, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	%rax, %rbp
	leaq	24(%rax), %rdi
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movq	16(%r14), %rdi
	movl	$1, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	%rax, %r13
	leaq	24(%rax), %rdi
	movq	%rdi, 8(%rsp)           # 8-byte Spill
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movl	$8, %eax
	movq	%rax, %xmm0
	pslldq	$8, %xmm0               # xmm0 = zero,zero,zero,zero,zero,zero,zero,zero,xmm0[0,1,2,3,4,5,6,7]
	movdqu	%xmm0, 64(%rsp)
	leaq	80(%rsp), %rax
	movq	%rax, 56(%rsp)
	cmpq	$0, 432(%rbx)
	je	.LBB3_12
###SPA### trampoline_fmt_64
# %bb.4:
	addq	$64, %rbp
	xorl	%r15d, %r15d
	movl	$184, %r12d
	.p2align	4, 0x90
.LBB3_5:                                # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	424(%rbx), %rax
	cmpb	$0, (%rax,%r12)
	jne	.LBB3_11
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB3_5 Depth=1
	movl	-8(%rax,%r12), %esi
	movq	%rbp, %rdi
	callq	_ZNK2js4wasm12LazyStubTier7hasStubEj
	testb	%al, %al
	je	.LBB3_11
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB3_5 Depth=1
	movq	64(%rsp), %rax
	cmpq	%rax, 72(%rsp)
	jne	.LBB3_10
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB3_5 Depth=1
	movl	$1, %esi
	leaq	56(%rsp), %rdi
	callq	_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB3_34
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB3_5 Depth=1
	movq	64(%rsp), %rax
.LBB3_10:                               #   in Loop: Header=BB3_5 Depth=1
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 64(%rsp)
	movq	56(%rsp), %rcx
	movl	%r15d, (%rcx,%rax,4)
	.p2align	4, 0x90
.LBB3_11:                               #   in Loop: Header=BB3_5 Depth=1
###SPA## trampoline_fmt_64
	addq	$1, %r15
	addq	$192, %r12
	cmpq	432(%rbx), %r15
	jb	.LBB3_5
###SPA### trampoline_fmt_64
.LBB3_12:
###SPA## trampoline_fmt_64
	movq	16(%r14), %rdi
	movl	$1, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movb	$0, 40(%rsp)
	movb	$0, 48(%rsp)
	addq	$64, %r13
	leaq	56(%rsp), %rsi
	leaq	40(%rsp), %rcx
	movq	%r13, %rdi
	movq	%rax, %rdx
	callq	_ZN2js4wasm12LazyStubTier11createTier2ERKN7mozilla6VectorIjLm8ENS_17SystemAllocPolicyEEERKNS0_8CodeTierEPNS2_5MaybeImEE
	testb	%al, %al
	movl	$1, %r12d
	je	.LBB3_14
###SPA### trampoline_fmt_64
# %bb.13:
	movq	16(%r14), %rdi
	callq	_ZNK2js4wasm4Code11commitTier2Ev
	movq	16(%r14), %rdx
	leaq	40(%rsp), %rsi
	movq	%r13, %rdi
	callq	_ZN2js4wasm12LazyStubTier13setJitEntriesERKN7mozilla5MaybeImEERKNS0_4CodeE
	xorl	%r12d, %r12d
.LBB3_14:
###SPA## trampoline_fmt_64
	movq	24(%rsp), %r15          # 8-byte Reload
	movq	16(%rsp), %rbx          # 8-byte Reload
	movq	8(%rsp), %rbp           # 8-byte Reload
	leaq	80(%rsp), %rax
	movq	56(%rsp), %rdi
	cmpq	%rax, %rdi
	je	.LBB3_16
###SPA### trampoline_fmt_64
# %bb.15:
	callq	free@PLT
.LBB3_16:
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movq	%rbx, %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	testl	%r12d, %r12d
	je	.LBB3_20
###SPA### trampoline_fmt_64
.LBB3_18:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	112(%rsp), %rcx
	jne	.LBB3_33
###SPA### trampoline_fmt_64
.LBB3_19:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB3_20:
	.cfi_def_cfa_offset 176
###SPA## trampoline_fmt_64
	movq	16(%r14), %rdi
	movl	$1, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	16(%rax), %rax
	movq	(%rax), %rbp
	movq	16(%r14), %rdi
	movl	$1, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rax
	movq	72(%rax), %rdx
	testq	%rdx, %rdx
	je	.LBB3_29
###SPA### trampoline_fmt_64
# %bb.21:
	movq	64(%rax), %rax
	leaq	(%rdx,%rdx,8), %rcx
	leaq	(%rcx,%rcx,2), %rcx
	addq	%rdx, %rcx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB3_22:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movzbl	24(%rax,%rdx), %ebx
	cmpb	$2, %bl
	je	.LBB3_26
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB3_22 Depth=1
	testb	%bl, %bl
	jne	.LBB3_28
###SPA### trampoline_fmt_64
# %bb.24:                               #   in Loop: Header=BB3_22 Depth=1
	movq	16(%r14), %rsi
	cmpl	$1, 104(%rsi)
	jne	.LBB3_28
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB3_22 Depth=1
	movzbl	21(%rax,%rdx), %edi
	addl	(%rax,%rdx), %edi
	addq	%rbp, %rdi
	movl	12(%rax,%rdx), %ebx
	movq	112(%rsi), %rsi
	jmp	.LBB3_27
	.p2align	4, 0x90
.LBB3_26:                               #   in Loop: Header=BB3_22 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%r14), %rsi
	movl	(%rax,%rdx), %edi
	movl	12(%rax,%rdx), %ebx
	addq	%rbp, %rdi
	movq	120(%rsi), %rsi
.LBB3_27:                               #   in Loop: Header=BB3_22 Depth=1
###SPA## trampoline_fmt_64
	movq	%rdi, (%rsi,%rbx,8)
.LBB3_28:                               #   in Loop: Header=BB3_22 Depth=1
###SPA## trampoline_fmt_64
	addq	$28, %rdx
	cmpq	%rdx, %rcx
	jne	.LBB3_22
###SPA### trampoline_fmt_64
.LBB3_29:
###SPA## trampoline_fmt_64
	movq	176(%r14), %rdx
	testq	%rdx, %rdx
	je	.LBB3_32
###SPA### trampoline_fmt_64
# %bb.30:
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE
	movq	176(%r14), %rdi
	movq	$0, 176(%r14)
	testq	%rdi, %rdi
	je	.LBB3_32
###SPA### trampoline_fmt_64
# %bb.31:
	movq	(%rdi), %rax
	callq	*24(%rax)
.LBB3_32:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	xchgl	%eax, 188(%r14)
	movb	$1, %al
	movq	%fs:40, %rcx
	cmpq	112(%rsp), %rcx
	je	.LBB3_19
###SPA### trampoline_fmt_64
.LBB3_33:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB3_34:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB3_14
.Lfunc_end3:
	.size	_ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE, .Lfunc_end3-_ZNK2js4wasm6Module11finishTier2ERKNS0_8LinkDataEN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS7_EEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE # -- Begin function _ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE
	.globl	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE,@function
_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE: # @_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$24, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB4_11
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rax, %r13
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r13)
	movq	$1, (%r13)
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE
	movq	8(%r13), %rcx
	movq	%rax, %rbp
	subq	%rcx, %rbp
	jbe	.LBB4_7
###SPA### trampoline_fmt_64
# %bb.2:
	movq	16(%rbx), %rax
	subq	%rcx, %rax
	cmpq	%rbp, %rax
	jae	.LBB4_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB4_8
###SPA### trampoline_fmt_64
.LBB4_4:
###SPA## trampoline_fmt_64
	addq	$8, %r13
	testq	%rbp, %rbp
	jle	.LBB4_6
###SPA### trampoline_fmt_64
# %bb.5:
	movq	(%rbx), %rdi
	addq	8(%rbx), %rdi
	xorl	%esi, %esi
	movq	%rbp, %rdx
	callq	memset@PLT
.LBB4_6:
###SPA## trampoline_fmt_64
	addq	(%r13), %rbp
	movq	%rbp, %rax
.LBB4_7:
###SPA## trampoline_fmt_64
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rdx
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%rax, %rcx
	callq	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm
	movq	%rbx, 8(%rsp)
	movq	(%r14), %rax
	leaq	8(%rsp), %rsi
	movq	%r14, %rdi
	callq	*32(%rax)
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
	testq	%rbx, %rbx
	je	.LBB4_11
###SPA### trampoline_fmt_64
.LBB4_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB4_10
###SPA### trampoline_fmt_64
# %bb.9:
	callq	free@PLT
.LBB4_10:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB4_11:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB4_13
###SPA### trampoline_fmt_64
# %bb.12:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB4_13:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end4:
	.size	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE, .Lfunc_end4-_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataERN2JS25OptimizedEncodingListenerE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv # -- Begin function _ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv
	.globl	_ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv,@function
_ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv: # @_ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%fs:40, %rax
	movq	%rax, 32(%rsp)
	movl	188(%rdi), %eax
	testl	%eax, %eax
	je	.LBB5_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdi, %r14
	movl	$1000000, %eax          # imm = 0xF4240
	movq	%rax, %xmm0
	pslldq	$8, %xmm0               # xmm0 = zero,zero,zero,zero,zero,zero,zero,zero,xmm0[0,1,2,3,4,5,6,7]
	movdqa	%xmm0, (%rsp)           # 16-byte Spill
	leaq	16(%rsp), %rbx
	.p2align	4, 0x90
.LBB5_2:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB5_3 Depth 2
###SPA## trampoline_fmt_64
	movdqa	(%rsp), %xmm0           # 16-byte Reload
	movdqa	%xmm0, 16(%rsp)
	.p2align	4, 0x90
.LBB5_3:                                #   Parent Loop BB5_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%rbx, %rsi
	callq	nanosleep@PLT
	cmpl	$-1, %eax
	jne	.LBB5_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB5_3 Depth=2
	callq	__errno_location@PLT
	cmpl	$4, (%rax)
	je	.LBB5_3
###SPA### trampoline_fmt_64
.LBB5_5:                                #   in Loop: Header=BB5_2 Depth=1
###SPA## trampoline_fmt_64
	movl	188(%r14), %eax
	testl	%eax, %eax
	jne	.LBB5_2
###SPA### trampoline_fmt_64
.LBB5_6:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	32(%rsp), %rax
	jne	.LBB5_8
###SPA### trampoline_fmt_64
# %bb.7:
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB5_8:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end5:
	.size	_ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv, .Lfunc_end5-_ZNK2js4wasm6Module27testingBlockOnTier2CompleteEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE # -- Begin function _ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE
	.globl	_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE,@function
_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE: # @_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %r13
	movq	%fs:40, %rax
	movq	%rax, 64(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 48(%rsp)
	movq	$1, 40(%rsp)
	leaq	40(%rsp), %rdi
	callq	_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE
	testb	%al, %al
	je	.LBB6_25
###SPA### trampoline_fmt_64
# %bb.1:
	movq	48(%rsp), %rax
	movq	%rax, 24(%rsp)          # 8-byte Spill
	movq	%r14, %rdi
	callq	_ZNK2js4wasm8LinkData14serializedSizeEv
	movq	%rax, 16(%rsp)          # 8-byte Spill
	cmpq	$0, 32(%r13)
	je	.LBB6_2
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$4, %r14d
	xorl	%ebp, %ebp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB6_4:                                # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%r13), %rdi
	addq	%rbp, %rdi
	callq	_ZNK2js4wasm6Import14serializedSizeEv
	addq	%rax, %r14
	addq	$1, %rbx
	addq	$24, %rbp
	cmpq	32(%r13), %rbx
	jb	.LBB6_4
###SPA### trampoline_fmt_64
# %bb.5:
	cmpq	$0, 56(%r13)
	je	.LBB6_6
###SPA### trampoline_fmt_64
.LBB6_7:
###SPA## trampoline_fmt_64
	movl	$4, %r15d
	xorl	%ebp, %ebp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB6_8:                                # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	48(%r13), %rdi
	addq	%rbp, %rdi
	callq	_ZNK2js4wasm6Export14serializedSizeEv
	addq	%rax, %r15
	addq	$1, %rbx
	addq	$16, %rbp
	cmpq	56(%r13), %rbx
	jb	.LBB6_8
###SPA### trampoline_fmt_64
# %bb.9:
	cmpq	$0, 80(%r13)
	je	.LBB6_10
###SPA### trampoline_fmt_64
.LBB6_11:
###SPA## trampoline_fmt_64
	movl	$4, %ebp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB6_12:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	72(%r13), %rax
	movq	(%rax,%rbx,8), %rdi
	callq	_ZNK2js4wasm11DataSegment14serializedSizeEv
	addq	%rax, %rbp
	addq	$1, %rbx
	cmpq	80(%r13), %rbx
	jb	.LBB6_12
###SPA### trampoline_fmt_64
# %bb.13:
	movq	%r15, (%rsp)            # 8-byte Spill
	cmpq	$0, 104(%r13)
	je	.LBB6_14
###SPA### trampoline_fmt_64
.LBB6_15:
###SPA## trampoline_fmt_64
	movl	$4, %r15d
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB6_16:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	96(%r13), %rax
	movq	(%rax,%rbx,8), %rdi
	callq	_ZNK2js4wasm11ElemSegment14serializedSizeEv
	addq	%rax, %r15
	addq	$1, %rbx
	cmpq	104(%r13), %rbx
	jb	.LBB6_16
###SPA### trampoline_fmt_64
# %bb.17:
	movq	%r14, 8(%rsp)           # 8-byte Spill
	cmpq	$0, 128(%r13)
	je	.LBB6_18
###SPA### trampoline_fmt_64
.LBB6_19:
###SPA## trampoline_fmt_64
	movl	$4, %r14d
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB6_20:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	120(%r13), %rdi
	addq	%r12, %rdi
	callq	_ZNK2js4wasm13CustomSection14serializedSizeEv
	addq	%rax, %r14
	addq	$1, %rbx
	addq	$32, %r12
	cmpq	128(%r13), %rbx
	jb	.LBB6_20
###SPA### trampoline_fmt_64
	jmp	.LBB6_21
.LBB6_2:
###SPA## trampoline_fmt_64
	movl	$4, %r14d
	cmpq	$0, 56(%r13)
	jne	.LBB6_7
###SPA### trampoline_fmt_64
.LBB6_6:
###SPA## trampoline_fmt_64
	movl	$4, %r15d
	cmpq	$0, 80(%r13)
	jne	.LBB6_11
###SPA### trampoline_fmt_64
.LBB6_10:
###SPA## trampoline_fmt_64
	movl	$4, %ebp
	movq	%r15, (%rsp)            # 8-byte Spill
	cmpq	$0, 104(%r13)
	jne	.LBB6_15
###SPA### trampoline_fmt_64
.LBB6_14:
###SPA## trampoline_fmt_64
	movl	$4, %r15d
	movq	%r14, 8(%rsp)           # 8-byte Spill
	cmpq	$0, 128(%r13)
	jne	.LBB6_19
###SPA### trampoline_fmt_64
.LBB6_18:
###SPA## trampoline_fmt_64
	movl	$4, %r14d
.LBB6_21:
###SPA## trampoline_fmt_64
	movq	16(%r13), %rdi
	callq	_ZNK2js4wasm4Code14serializedSizeEv
	movq	%rax, %r12
	movq	40(%rsp), %rdi
	cmpq	$1, %rdi
	je	.LBB6_23
###SPA### trampoline_fmt_64
# %bb.22:
	callq	free@PLT
.LBB6_23:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	jne	.LBB6_24
###SPA### trampoline_fmt_64
# %bb.26:
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	16(%rsp), %rcx          # 8-byte Reload
	addq	%rcx, %rax
	addq	$4, %rax
	addq	8(%rsp), %rax           # 8-byte Folded Reload
	addq	(%rsp), %rax            # 8-byte Folded Reload
	addq	%rbp, %rax
	addq	%r15, %rax
	addq	%r14, %rax
	addq	%r12, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB6_25:
	.cfi_def_cfa_offset 128
###SPA## trampoline_fmt_64
	leaq	.L.str(%rip), %rsi
	leaq	32(%rsp), %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.LBB6_24:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end6:
	.size	_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE, .Lfunc_end6-_ZNK2js4wasm6Module14serializedSizeERKNS0_8LinkDataE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE,"ax",@progbits
	.hidden	_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE # -- Begin function _ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE
	.globl	_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE
	.p2align	4, 0x90
	.type	_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE,@function
_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE: # @_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	_ZN2js10GetBuildIdE(%rip), %rax
	testq	%rax, %rax
	je	.LBB7_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rdi, %rbx
	movq	_ZN2js10GetBuildIdE(%rip), %rax
	callq	*%rax
	testb	%al, %al
	je	.LBB7_3
###SPA### trampoline_fmt_64
# %bb.4:
	callq	_ZN2js4wasm19ObservedCPUFeaturesEv
	movl	%eax, %ebp
	movq	8(%rbx), %rax
	leaq	12(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB7_8
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$12, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB7_6
###SPA### trampoline_fmt_64
# %bb.7:
	movq	8(%rbx), %rax
.LBB7_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$40, (%rcx,%rax)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	addq	(%rbx), %rax
	testl	%ebp, %ebp
	je	.LBB7_11
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB7_9:                                # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	andb	$15, %cl
	orb	$48, %cl
	movb	%cl, (%rax)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	shrl	$4, %ebp
	addq	(%rbx), %rax
	testl	%ebp, %ebp
	jne	.LBB7_9
###SPA### trampoline_fmt_64
.LBB7_11:
###SPA## trampoline_fmt_64
	movb	$41, (%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$109, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	movb	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip), %al
	testb	%al, %al
	je	.LBB7_12
###SPA### trampoline_fmt_64
.LBB7_14:
###SPA## trampoline_fmt_64
	cmpb	$0, _ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip)
	sete	%al
	addb	%al, %al
	addb	$43, %al
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	movb	%al, (%rcx,%rdx)
	addq	$1, 8(%rbx)
	movb	$1, %al
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB7_1:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB7_3:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB7_6:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB7_12:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	leaq	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB7_14
###SPA### trampoline_fmt_64
# %bb.13:
	leaq	sHugeMemoryEnabled(%rip), %rbp
	movq	%rbp, %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movb	$1, sHugeMemoryEnabled+41(%rip)
	movb	sHugeMemoryEnabled+40(%rip), %r14b
	movq	%rbp, %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movb	%r14b, _ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip)
	leaq	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB7_14
.Lfunc_end7:
	.size	_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE, .Lfunc_end7-_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm # -- Begin function _ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm
	.globl	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm,@function
_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm: # @_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 48(%rsp)
	movq	16(%rdi), %rdi
	movq	32(%rdi), %rax
	cmpb	$0, 216(%rax)
	jne	.LBB8_25
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rcx, %rbx
	movq	%rdx, %r12
	movq	%rsi, %r15
	movl	$1, %esi
	callq	_ZNK2js4wasm4Code7hasTierENS0_4TierE
	testb	%al, %al
	je	.LBB8_26
###SPA### trampoline_fmt_64
# %bb.2:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 32(%rsp)
	movq	$1, 24(%rsp)
	leaq	24(%rsp), %rdi
	callq	_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE
	testb	%al, %al
	je	.LBB8_27
###SPA### trampoline_fmt_64
# %bb.3:
	movq	32(%rsp), %r13
	movl	%r13d, (%r12)
	leaq	4(%r12), %rbp
	testq	%r13, %r13
	je	.LBB8_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	24(%rsp), %rsi
	movq	%rbp, %rdi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB8_5:
###SPA## trampoline_fmt_64
	movq	%rbx, 8(%rsp)           # 8-byte Spill
	addq	%r13, %rbp
	movq	%r15, %rdi
	movq	%rbp, %rsi
	callq	_ZNK2js4wasm8LinkData9serializeEPh
	movl	32(%r14), %ecx
	movl	%ecx, (%rax)
	addq	$4, %rax
	cmpq	$0, 32(%r14)
	je	.LBB8_8
###SPA### trampoline_fmt_64
# %bb.6:
	xorl	%ebp, %ebp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB8_7:                                # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%r14), %rdi
	addq	%rbp, %rdi
	movq	%rax, %rsi
	callq	_ZNK2js4wasm6Import9serializeEPh
	addq	$1, %rbx
	addq	$24, %rbp
	cmpq	32(%r14), %rbx
	jb	.LBB8_7
###SPA### trampoline_fmt_64
.LBB8_8:
###SPA## trampoline_fmt_64
	movl	56(%r14), %ecx
	movl	%ecx, (%rax)
	addq	$4, %rax
	cmpq	$0, 56(%r14)
	je	.LBB8_11
###SPA### trampoline_fmt_64
# %bb.9:
	xorl	%ebp, %ebp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB8_10:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	48(%r14), %rdi
	addq	%rbp, %rdi
	movq	%rax, %rsi
	callq	_ZNK2js4wasm6Export9serializeEPh
	addq	$1, %rbx
	addq	$16, %rbp
	cmpq	56(%r14), %rbx
	jb	.LBB8_10
###SPA### trampoline_fmt_64
.LBB8_11:
###SPA## trampoline_fmt_64
	movl	80(%r14), %ecx
	movl	%ecx, (%rax)
	addq	$4, %rax
	cmpq	$0, 80(%r14)
	je	.LBB8_14
###SPA### trampoline_fmt_64
# %bb.12:
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB8_13:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	72(%r14), %rcx
	movq	(%rcx,%rbx,8), %rdi
	movq	%rax, %rsi
	callq	_ZNK2js4wasm11DataSegment9serializeEPh
	addq	$1, %rbx
	cmpq	80(%r14), %rbx
	jb	.LBB8_13
###SPA### trampoline_fmt_64
.LBB8_14:
###SPA## trampoline_fmt_64
	movl	104(%r14), %ecx
	movl	%ecx, (%rax)
	addq	$4, %rax
	cmpq	$0, 104(%r14)
	je	.LBB8_17
###SPA### trampoline_fmt_64
# %bb.15:
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB8_16:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	96(%r14), %rcx
	movq	(%rcx,%rbx,8), %rdi
	movq	%rax, %rsi
	callq	_ZNK2js4wasm11ElemSegment9serializeEPh
	addq	$1, %rbx
	cmpq	104(%r14), %rbx
	jb	.LBB8_16
###SPA### trampoline_fmt_64
.LBB8_17:
###SPA## trampoline_fmt_64
	movl	128(%r14), %ecx
	movl	%ecx, (%rax)
	addq	$4, %rax
	cmpq	$0, 128(%r14)
	je	.LBB8_20
###SPA### trampoline_fmt_64
# %bb.18:
	xorl	%ebp, %ebp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB8_19:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	120(%r14), %rdi
	addq	%rbp, %rdi
	movq	%rax, %rsi
	callq	_ZNK2js4wasm13CustomSection9serializeEPh
	addq	$1, %rbx
	addq	$32, %rbp
	cmpq	128(%r14), %rbx
	jb	.LBB8_19
###SPA### trampoline_fmt_64
.LBB8_20:
###SPA## trampoline_fmt_64
	movq	16(%r14), %rdi
	movq	%rax, %rsi
	movq	%r15, %rdx
	callq	_ZNK2js4wasm4Code9serializeEPhRKNS0_8LinkDataE
	addq	8(%rsp), %r12           # 8-byte Folded Reload
	cmpq	%r12, %rax
	jne	.LBB8_28
###SPA### trampoline_fmt_64
# %bb.21:
	movq	24(%rsp), %rdi
	cmpq	$1, %rdi
	je	.LBB8_23
###SPA### trampoline_fmt_64
# %bb.22:
	callq	free@PLT
.LBB8_23:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	48(%rsp), %rax
	jne	.LBB8_24
###SPA### trampoline_fmt_64
# %bb.29:
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB8_25:
	.cfi_def_cfa_offset 112
###SPA## trampoline_fmt_64
	leaq	.L.str.1(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$208, 0
	callq	abort@PLT
.LBB8_26:
###SPA## trampoline_fmt_64
	leaq	.L.str.2(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$209, 0
	callq	abort@PLT
.LBB8_27:
###SPA## trampoline_fmt_64
	leaq	.L.str(%rip), %rsi
	leaq	16(%rsp), %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.LBB8_28:
###SPA## trampoline_fmt_64
	leaq	.L.str.3(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$228, 0
	callq	abort@PLT
.LBB8_24:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end8:
	.size	_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm, .Lfunc_end8-_ZNK2js4wasm6Module9serializeERKNS0_8LinkDataEPhm
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE
.LCPI9_0:
	.zero	16
	.section	.text._ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE,"ax",@progbits
	.hidden	_ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE
	.globl	_ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE,@function
_ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE: # @_ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$4424, %rsp             # imm = 0x1148
	.cfi_def_cfa_offset 4480
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r12
	movq	%rdx, %rbp
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 4416(%rsp)
	testq	%rcx, %rcx
	je	.LBB9_2
###SPA### trampoline_fmt_64
# %bb.1:
	lock		addq	$1, 8(%r12)
	movq	%r12, %r13
	jmp	.LBB9_4
.LBB9_2:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$280, %esi              # imm = 0x118
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB9_181
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rax, %r13
	movb	$0, 40(%rax)
	movb	$0, 48(%rax)
	movb	$0, 56(%rax)
	movb	$0, 60(%rax)
	movb	$0, 64(%rax)
	movb	$0, 68(%rax)
	movw	$0, 72(%rax)
	movb	$0, 74(%rax)
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 20(%rax)
	movdqu	%xmm0, 8(%rax)
	leaq	_ZTVN2js4wasm8MetadataE+16(%rip), %rax
	movq	%rax, (%r13)
	movdqu	%xmm0, 88(%r13)
	movq	$192, 80(%r13)
	movdqu	%xmm0, 112(%r13)
	movq	$48, 104(%r13)
	movdqu	%xmm0, 136(%r13)
	movq	$24, 128(%r13)
	movb	$0, 184(%r13)
	movdqu	%xmm0, 200(%r13)
	movdqu	%xmm0, 161(%r13)
	movdqu	%xmm0, 152(%r13)
	movq	$8, 192(%r13)
	movb	$0, 216(%r13)
	movdqu	%xmm0, 232(%r13)
	movq	$88, 224(%r13)
	movdqu	%xmm0, 256(%r13)
	movq	$88, 248(%r13)
	movq	$0, 272(%r13)
	lock		addq	$1, 8(%r13)
.LBB9_4:
###SPA## trampoline_fmt_64
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 208(%rsp)
	movq	$1, 200(%rsp)
	leaq	200(%rsp), %rdi
	callq	_ZN2js4wasm27GetOptimizedEncodingBuildIdEPN7mozilla6VectorIcLm0ENS_17SystemAllocPolicyEEE
	testb	%al, %al
	je	.LBB9_22
###SPA### trampoline_fmt_64
# %bb.5:
	movq	%rbp, 24(%rsp)          # 8-byte Spill
	movl	(%rbx), %ebp
	movq	%rbx, 32(%rsp)          # 8-byte Spill
	leaq	4(%rbx), %r15
	testq	%rbp, %rbp
	je	.LBB9_24
###SPA### trampoline_fmt_64
# %bb.6:
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%rbp, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB9_22
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rax, %rbx
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%rbp, %rdx
	callq	memcpy@PLT
	movq	%r12, 16(%rsp)          # 8-byte Spill
	movq	%r13, (%rsp)            # 8-byte Spill
	cmpq	%rbp, 208(%rsp)
	jne	.LBB9_25
###SPA### trampoline_fmt_64
.LBB9_8:
###SPA## trampoline_fmt_64
	testl	%ebp, %ebp
	je	.LBB9_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	200(%rsp), %rdi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	callq	memcmp@PLT
	testl	%eax, %eax
	jne	.LBB9_25
###SPA### trampoline_fmt_64
.LBB9_10:
###SPA## trampoline_fmt_64
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	addq	%rbp, %r15
	movabsq	$4294967296, %rax       # imm = 0x100000000
	movq	%rax, 240(%rsp)
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 256(%rsp)
	movq	$8, 248(%rsp)
	movl	$8, %eax
	movq	%rax, %xmm0
	pslldq	$8, %xmm0               # xmm0 = zero,zero,zero,zero,zero,zero,zero,zero,xmm0[0,1,2,3,4,5,6,7]
	movdqu	%xmm0, 280(%rsp)
	leaq	296(%rsp), %rax
	movq	%rax, 272(%rsp)
	movdqu	%xmm0, 336(%rsp)
	leaq	352(%rsp), %rax
	movq	%rax, 328(%rsp)
	movdqu	%xmm0, 392(%rsp)
	leaq	408(%rsp), %rax
	movq	%rax, 384(%rsp)
	movdqu	%xmm0, 448(%rsp)
	leaq	464(%rsp), %rax
	movq	%rax, 440(%rsp)
	movq	$0, 504(%rsp)
	movq	$8, 512(%rsp)
	leaq	520(%rsp), %rax
	movq	%rax, 496(%rsp)
	movdqu	%xmm0, 560(%rsp)
	leaq	576(%rsp), %rax
	movq	%rax, 552(%rsp)
	movdqu	%xmm0, 616(%rsp)
	leaq	632(%rsp), %rax
	movq	%rax, 608(%rsp)
	movdqu	%xmm0, 672(%rsp)
	leaq	688(%rsp), %rax
	movq	%rax, 664(%rsp)
	movdqu	%xmm0, 728(%rsp)
	leaq	744(%rsp), %rax
	movq	%rax, 720(%rsp)
	movdqu	%xmm0, 784(%rsp)
	leaq	800(%rsp), %rax
	movq	%rax, 776(%rsp)
	movdqu	%xmm0, 840(%rsp)
	leaq	856(%rsp), %rax
	movq	%rax, 832(%rsp)
	movdqu	%xmm0, 896(%rsp)
	leaq	912(%rsp), %rax
	movq	%rax, 888(%rsp)
	movdqu	%xmm0, 952(%rsp)
	leaq	968(%rsp), %rax
	movq	%rax, 944(%rsp)
	movdqu	%xmm0, 1008(%rsp)
	leaq	1024(%rsp), %rax
	movq	%rax, 1000(%rsp)
	movdqu	%xmm0, 1064(%rsp)
	leaq	1080(%rsp), %rax
	movq	%rax, 1056(%rsp)
	movdqu	%xmm0, 1120(%rsp)
	leaq	1136(%rsp), %rax
	movq	%rax, 1112(%rsp)
	movdqu	%xmm0, 1176(%rsp)
	leaq	1192(%rsp), %rax
	movq	%rax, 1168(%rsp)
	movdqu	%xmm0, 1232(%rsp)
	leaq	1248(%rsp), %rax
	movq	%rax, 1224(%rsp)
	movdqu	%xmm0, 1288(%rsp)
	leaq	1304(%rsp), %rax
	movq	%rax, 1280(%rsp)
	movdqu	%xmm0, 1344(%rsp)
	leaq	1360(%rsp), %rax
	movq	%rax, 1336(%rsp)
	movq	$0, 1400(%rsp)
	movq	$8, 1408(%rsp)
	leaq	1416(%rsp), %rax
	movq	%rax, 1392(%rsp)
	movdqu	%xmm0, 1456(%rsp)
	leaq	1472(%rsp), %rax
	movq	%rax, 1448(%rsp)
	movdqu	%xmm0, 1512(%rsp)
	leaq	1528(%rsp), %rax
	movq	%rax, 1504(%rsp)
	movdqu	%xmm0, 1568(%rsp)
	leaq	1584(%rsp), %rax
	movq	%rax, 1560(%rsp)
	movdqu	%xmm0, 1624(%rsp)
	leaq	1640(%rsp), %rax
	movq	%rax, 1616(%rsp)
	movdqu	%xmm0, 1680(%rsp)
	leaq	1696(%rsp), %rax
	movq	%rax, 1672(%rsp)
	movdqu	%xmm0, 1736(%rsp)
	leaq	1752(%rsp), %rax
	movq	%rax, 1728(%rsp)
	movdqu	%xmm0, 1792(%rsp)
	leaq	1808(%rsp), %rax
	movq	%rax, 1784(%rsp)
	movdqu	%xmm0, 1848(%rsp)
	leaq	1864(%rsp), %rax
	movq	%rax, 1840(%rsp)
	movdqu	%xmm0, 1904(%rsp)
	leaq	1920(%rsp), %rax
	movq	%rax, 1896(%rsp)
	movdqu	%xmm0, 1960(%rsp)
	leaq	1976(%rsp), %rax
	movq	%rax, 1952(%rsp)
	movdqu	%xmm0, 2016(%rsp)
	leaq	2032(%rsp), %rax
	movq	%rax, 2008(%rsp)
	movdqu	%xmm0, 2072(%rsp)
	leaq	2088(%rsp), %rax
	movq	%rax, 2064(%rsp)
	movdqu	%xmm0, 2128(%rsp)
	leaq	2144(%rsp), %rax
	movq	%rax, 2120(%rsp)
	movdqu	%xmm0, 2184(%rsp)
	leaq	2200(%rsp), %rax
	movq	%rax, 2176(%rsp)
	movdqu	%xmm0, 2240(%rsp)
	leaq	2256(%rsp), %rax
	movq	%rax, 2232(%rsp)
	movq	$0, 2296(%rsp)
	movq	$8, 2304(%rsp)
	leaq	2312(%rsp), %rax
	movq	%rax, 2288(%rsp)
	movdqu	%xmm0, 2352(%rsp)
	leaq	2368(%rsp), %rax
	movq	%rax, 2344(%rsp)
	movdqu	%xmm0, 2408(%rsp)
	leaq	2424(%rsp), %rax
	movq	%rax, 2400(%rsp)
	movdqu	%xmm0, 2464(%rsp)
	leaq	2480(%rsp), %rax
	movq	%rax, 2456(%rsp)
	movdqu	%xmm0, 2520(%rsp)
	leaq	2536(%rsp), %rax
	movq	%rax, 2512(%rsp)
	movdqu	%xmm0, 2576(%rsp)
	leaq	2592(%rsp), %rax
	movq	%rax, 2568(%rsp)
	movdqu	%xmm0, 2632(%rsp)
	leaq	2648(%rsp), %rax
	movq	%rax, 2624(%rsp)
	movdqu	%xmm0, 2688(%rsp)
	leaq	2704(%rsp), %rax
	movq	%rax, 2680(%rsp)
	movdqu	%xmm0, 2744(%rsp)
	leaq	2760(%rsp), %rax
	movq	%rax, 2736(%rsp)
	movdqu	%xmm0, 2800(%rsp)
	leaq	2816(%rsp), %rax
	movq	%rax, 2792(%rsp)
	movdqu	%xmm0, 2856(%rsp)
	leaq	2872(%rsp), %rax
	movq	%rax, 2848(%rsp)
	movdqu	%xmm0, 2912(%rsp)
	leaq	2928(%rsp), %rax
	movq	%rax, 2904(%rsp)
	movdqu	%xmm0, 2968(%rsp)
	leaq	2984(%rsp), %rax
	movq	%rax, 2960(%rsp)
	movdqu	%xmm0, 3024(%rsp)
	leaq	3040(%rsp), %rax
	movq	%rax, 3016(%rsp)
	movdqu	%xmm0, 3080(%rsp)
	leaq	3096(%rsp), %rax
	movq	%rax, 3072(%rsp)
	movdqu	%xmm0, 3136(%rsp)
	leaq	3152(%rsp), %rax
	movq	%rax, 3128(%rsp)
	movq	$0, 3192(%rsp)
	movq	$8, 3200(%rsp)
	leaq	3208(%rsp), %rax
	movq	%rax, 3184(%rsp)
	movdqu	%xmm0, 3248(%rsp)
	leaq	3264(%rsp), %rax
	movq	%rax, 3240(%rsp)
	movdqu	%xmm0, 3304(%rsp)
	leaq	3320(%rsp), %rax
	movq	%rax, 3296(%rsp)
	movdqu	%xmm0, 3360(%rsp)
	leaq	3376(%rsp), %rax
	movq	%rax, 3352(%rsp)
	movdqu	%xmm0, 3416(%rsp)
	leaq	3432(%rsp), %rax
	movq	%rax, 3408(%rsp)
	movdqu	%xmm0, 3472(%rsp)
	leaq	3488(%rsp), %rax
	movq	%rax, 3464(%rsp)
	movdqu	%xmm0, 3528(%rsp)
	leaq	3544(%rsp), %rax
	movq	%rax, 3520(%rsp)
	movdqu	%xmm0, 3584(%rsp)
	leaq	3600(%rsp), %rax
	movq	%rax, 3576(%rsp)
	movdqu	%xmm0, 3640(%rsp)
	leaq	3656(%rsp), %rax
	movq	%rax, 3632(%rsp)
	movdqu	%xmm0, 3696(%rsp)
	leaq	3712(%rsp), %rax
	movq	%rax, 3688(%rsp)
	movdqu	%xmm0, 3752(%rsp)
	leaq	3768(%rsp), %rax
	movq	%rax, 3744(%rsp)
	movdqu	%xmm0, 3808(%rsp)
	leaq	3824(%rsp), %rax
	movq	%rax, 3800(%rsp)
	movdqu	%xmm0, 3864(%rsp)
	leaq	3880(%rsp), %rax
	movq	%rax, 3856(%rsp)
	movdqu	%xmm0, 3920(%rsp)
	leaq	3936(%rsp), %rax
	movq	%rax, 3912(%rsp)
	movdqu	%xmm0, 3976(%rsp)
	leaq	3992(%rsp), %rax
	movq	%rax, 3968(%rsp)
	movdqu	%xmm0, 4032(%rsp)
	leaq	4048(%rsp), %rax
	movq	%rax, 4024(%rsp)
	movq	$0, 4088(%rsp)
	movq	$8, 4096(%rsp)
	leaq	4104(%rsp), %rax
	movq	%rax, 4080(%rsp)
	movdqu	%xmm0, 4144(%rsp)
	leaq	4160(%rsp), %rax
	movq	%rax, 4136(%rsp)
	movdqu	%xmm0, 4200(%rsp)
	leaq	4216(%rsp), %rax
	movq	%rax, 4192(%rsp)
	movdqu	%xmm0, 4256(%rsp)
	leaq	4272(%rsp), %rax
	movq	%rax, 4248(%rsp)
	movdqu	%xmm0, 4312(%rsp)
	leaq	4328(%rsp), %rax
	movq	%rax, 4304(%rsp)
	movdqu	%xmm0, 4368(%rsp)
	leaq	4384(%rsp), %r12
	movq	%r12, 4360(%rsp)
	leaq	240(%rsp), %rdi
	movq	%r15, %rsi
	callq	_ZN2js4wasm8LinkData11deserializeEPKh
	testq	%rax, %rax
	je	.LBB9_26
###SPA### trampoline_fmt_64
# %bb.11:
	movq	%rax, %r13
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 184(%rsp)
	movq	$24, 176(%rsp)
	movl	(%rax), %esi
	leaq	176(%rsp), %rdi
	callq	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm
	testb	%al, %al
	je	.LBB9_23
###SPA### trampoline_fmt_64
# %bb.12:
	addq	$4, %r13
	cmpq	$0, 184(%rsp)
	je	.LBB9_16
###SPA### trampoline_fmt_64
# %bb.13:
	xorl	%ebx, %ebx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB9_14:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	176(%rsp), %rdi
	addq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZN2js4wasm6Import11deserializeEPKh
	testq	%rax, %rax
	je	.LBB9_23
###SPA### trampoline_fmt_64
# %bb.15:                               #   in Loop: Header=BB9_14 Depth=1
	movq	%rax, %r13
	addq	$1, %rbp
	addq	$24, %rbx
	cmpq	184(%rsp), %rbp
	jb	.LBB9_14
###SPA### trampoline_fmt_64
.LBB9_16:
###SPA## trampoline_fmt_64
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 160(%rsp)
	movq	$16, 152(%rsp)
	movl	(%r13), %ebx
	addq	$4, %r13
	testq	%rbx, %rbx
	je	.LBB9_27
###SPA### trampoline_fmt_64
# %bb.17:
	leaq	152(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB9_64
###SPA### trampoline_fmt_64
# %bb.18:
	movq	160(%rsp), %rdi
	shlq	$4, %rdi
	addq	152(%rsp), %rdi
	movq	%rbx, %rax
	shlq	$4, %rax
	addq	%rdi, %rax
	movq	%rdi, %rcx
	notq	%rcx
	leaq	(%rcx,%rax), %rdx
	addq	$16, %rdx
	andq	$-16, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	addq	%rbx, 160(%rsp)
	je	.LBB9_28
###SPA### trampoline_fmt_64
# %bb.19:
	xorl	%ebx, %ebx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB9_20:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	152(%rsp), %rdi
	addq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZN2js4wasm6Export11deserializeEPKh
	testq	%rax, %rax
	je	.LBB9_64
###SPA### trampoline_fmt_64
# %bb.21:                               #   in Loop: Header=BB9_20 Depth=1
	movq	%rax, %r13
	addq	$1, %rbp
	addq	$16, %rbx
	cmpq	160(%rsp), %rbp
	jb	.LBB9_20
###SPA### trampoline_fmt_64
	jmp	.LBB9_28
.LBB9_22:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	200(%rsp), %rdi
	cmpq	$1, %rdi
	jne	.LBB9_175
###SPA### trampoline_fmt_64
	jmp	.LBB9_176
.LBB9_23:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	(%rsp), %r13            # 8-byte Reload
	movq	176(%rsp), %rbx
	movq	184(%rsp), %rax
	testq	%rax, %rax
	jg	.LBB9_157
###SPA### trampoline_fmt_64
	jmp	.LBB9_164
.LBB9_24:
###SPA## trampoline_fmt_64
	movl	$1, %ebx
	movq	%r12, 16(%rsp)          # 8-byte Spill
	movq	%r13, (%rsp)            # 8-byte Spill
	cmpq	%rbp, 208(%rsp)
	je	.LBB9_8
###SPA### trampoline_fmt_64
.LBB9_25:
###SPA## trampoline_fmt_64
	leaq	.L.str.4(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$255, 0
	callq	abort@PLT
.LBB9_26:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	(%rsp), %r13            # 8-byte Reload
	jmp	.LBB9_166
.LBB9_27:
###SPA## trampoline_fmt_64
	movq	%rbx, 160(%rsp)
.LBB9_28:
###SPA## trampoline_fmt_64
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 136(%rsp)
	movq	$8, 128(%rsp)
	movl	(%r13), %esi
	leaq	128(%rsp), %rdi
	callq	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	testb	%al, %al
	je	.LBB9_46
###SPA### trampoline_fmt_64
# %bb.29:
	addq	$4, %r13
	cmpq	$0, 136(%rsp)
	je	.LBB9_47
###SPA### trampoline_fmt_64
# %bb.30:
	xorl	%r15d, %r15d
	movq	%r14, 8(%rsp)           # 8-byte Spill
	.p2align	4, 0x90
.LBB9_31:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	128(%rsp), %r14
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$72, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB9_40
###SPA### trampoline_fmt_64
# %bb.32:                               #   in Loop: Header=BB9_31 Depth=1
	movq	%rax, %rbx
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 48(%rax)
	movdqu	%xmm0, 32(%rax)
	movdqu	%xmm0, 16(%rax)
	movdqu	%xmm0, (%rax)
	movq	$0, 64(%rax)
	movq	$1, 48(%rax)
	lock		addq	$1, (%rax)
	movq	(%r14,%r15,8), %rbp
	movq	%rax, (%r14,%r15,8)
	testq	%rbp, %rbp
	je	.LBB9_37
###SPA### trampoline_fmt_64
# %bb.33:                               #   in Loop: Header=BB9_31 Depth=1
	lock		subq	$1, (%rbp)
	movq	8(%rsp), %r14           # 8-byte Reload
	jne	.LBB9_38
###SPA### trampoline_fmt_64
# %bb.34:                               #   in Loop: Header=BB9_31 Depth=1
	movq	48(%rbp), %rdi
	cmpq	$1, %rdi
	je	.LBB9_36
###SPA### trampoline_fmt_64
# %bb.35:                               #   in Loop: Header=BB9_31 Depth=1
	callq	free@PLT
.LBB9_36:                               #   in Loop: Header=BB9_31 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	callq	free@PLT
	jmp	.LBB9_38
.LBB9_40:                               #   in Loop: Header=BB9_31 Depth=1
###SPA## trampoline_fmt_64
	movq	(%r14,%r15,8), %rbx
	movq	$0, (%r14,%r15,8)
	testq	%rbx, %rbx
	je	.LBB9_45
###SPA### trampoline_fmt_64
# %bb.41:                               #   in Loop: Header=BB9_31 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB9_45
###SPA### trampoline_fmt_64
# %bb.42:                               #   in Loop: Header=BB9_31 Depth=1
	movq	48(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB9_44
###SPA### trampoline_fmt_64
# %bb.43:                               #   in Loop: Header=BB9_31 Depth=1
	callq	free@PLT
.LBB9_44:                               #   in Loop: Header=BB9_31 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_45:                               #   in Loop: Header=BB9_31 Depth=1
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
.LBB9_37:                               #   in Loop: Header=BB9_31 Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rsp), %r14           # 8-byte Reload
.LBB9_38:                               #   in Loop: Header=BB9_31 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZN2js4wasm11DataSegment11deserializeEPKh
	testq	%rax, %rax
	je	.LBB9_46
###SPA### trampoline_fmt_64
# %bb.39:                               #   in Loop: Header=BB9_31 Depth=1
	movq	%rax, %r13
	addq	$1, %r15
	cmpq	136(%rsp), %r15
	jb	.LBB9_31
###SPA### trampoline_fmt_64
.LBB9_47:
###SPA## trampoline_fmt_64
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 112(%rsp)
	movq	$8, 104(%rsp)
	movl	(%r13), %esi
	leaq	104(%rsp), %rdi
	callq	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	testb	%al, %al
	je	.LBB9_65
###SPA### trampoline_fmt_64
# %bb.48:
	addq	$4, %r13
	cmpq	$0, 112(%rsp)
	je	.LBB9_66
###SPA### trampoline_fmt_64
# %bb.49:
	xorl	%ebp, %ebp
	movl	$8, %eax
	movq	%rax, %xmm0
	pslldq	$8, %xmm0               # xmm0 = zero,zero,zero,zero,zero,zero,zero,zero,xmm0[0,1,2,3,4,5,6,7]
	movdqa	%xmm0, 48(%rsp)         # 16-byte Spill
.LBB9_50:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	104(%rsp), %rbx
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$120, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB9_58
###SPA### trampoline_fmt_64
# %bb.51:                               #   in Loop: Header=BB9_50 Depth=1
	movq	%rax, %r15
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 16(%rax)
	movdqu	%xmm0, 48(%rax)
	movdqu	%xmm0, 80(%rax)
	movdqu	%xmm0, 64(%rax)
	movdqu	%xmm0, 96(%rax)
	movdqu	%xmm0, 32(%rax)
	movdqu	%xmm0, (%rax)
	movq	$0, 112(%rax)
	movl	$255, 16(%rax)
	movb	$0, 24(%rax)
	movb	$0, 56(%rax)
	movdqa	48(%rsp), %xmm0         # 16-byte Reload
	movdqu	%xmm0, 72(%rax)
	addq	$88, %rax
	movq	%rax, 64(%r15)
	lock		addq	$1, (%r15)
	movq	%rbx, %rax
	movq	(%rbx,%rbp,8), %rbx
	movq	%r15, (%rax,%rbp,8)
	testq	%rbx, %rbx
	je	.LBB9_56
###SPA### trampoline_fmt_64
# %bb.52:                               #   in Loop: Header=BB9_50 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB9_56
###SPA### trampoline_fmt_64
# %bb.53:                               #   in Loop: Header=BB9_50 Depth=1
	movq	64(%rbx), %rdi
	leaq	88(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB9_55
###SPA### trampoline_fmt_64
# %bb.54:                               #   in Loop: Header=BB9_50 Depth=1
	callq	free@PLT
.LBB9_55:                               #   in Loop: Header=BB9_50 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_56:                               #   in Loop: Header=BB9_50 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	_ZN2js4wasm11ElemSegment11deserializeEPKh
	testq	%rax, %rax
	je	.LBB9_65
###SPA### trampoline_fmt_64
# %bb.57:                               #   in Loop: Header=BB9_50 Depth=1
	movq	%rax, %r13
	addq	$1, %rbp
	cmpq	112(%rsp), %rbp
	jb	.LBB9_50
###SPA### trampoline_fmt_64
	jmp	.LBB9_66
.LBB9_58:                               #   in Loop: Header=BB9_50 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rax
	movq	(%rbx,%rbp,8), %rbx
	movq	$0, (%rax,%rbp,8)
	testq	%rbx, %rbx
	je	.LBB9_63
###SPA### trampoline_fmt_64
# %bb.59:                               #   in Loop: Header=BB9_50 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB9_63
###SPA### trampoline_fmt_64
# %bb.60:                               #   in Loop: Header=BB9_50 Depth=1
	movq	64(%rbx), %rdi
	leaq	88(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB9_62
###SPA### trampoline_fmt_64
# %bb.61:                               #   in Loop: Header=BB9_50 Depth=1
	callq	free@PLT
.LBB9_62:                               #   in Loop: Header=BB9_50 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_63:                               #   in Loop: Header=BB9_50 Depth=1
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
	jmp	.LBB9_56
.LBB9_46:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	(%rsp), %r13            # 8-byte Reload
	movq	128(%rsp), %rbx
	movq	136(%rsp), %rax
	testq	%rax, %rax
	jg	.LBB9_138
###SPA### trampoline_fmt_64
	jmp	.LBB9_146
.LBB9_64:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	(%rsp), %r13            # 8-byte Reload
	movq	152(%rsp), %rbx
	movq	160(%rsp), %rbp
	testq	%rbp, %rbp
	jg	.LBB9_149
###SPA### trampoline_fmt_64
	jmp	.LBB9_154
.LBB9_65:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	(%rsp), %r13            # 8-byte Reload
	movq	104(%rsp), %rbx
	movq	112(%rsp), %rax
	testq	%rax, %rax
	jg	.LBB9_127
###SPA### trampoline_fmt_64
	jmp	.LBB9_135
.LBB9_66:
###SPA## trampoline_fmt_64
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 88(%rsp)
	movq	$32, 80(%rsp)
	movl	(%r13), %ebx
	addq	$4, %r13
	testq	%rbx, %rbx
	je	.LBB9_78
###SPA### trampoline_fmt_64
# %bb.67:
	leaq	80(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB9_86
###SPA### trampoline_fmt_64
# %bb.68:
	movq	80(%rsp), %rdx
	movq	88(%rsp), %rsi
	shlq	$5, %rsi
	leaq	(%rdx,%rsi), %rax
	movq	%rbx, %rcx
	shlq	$5, %rcx
	addq	%rax, %rcx
	leaq	(%rdx,%rsi), %rdi
	addq	$32, %rdi
	cmpq	%rdi, %rcx
	cmovaq	%rcx, %rdi
	subq	%rsi, %rdi
	notq	%rdx
	addq	%rdi, %rdx
	movl	%edx, %esi
	shrl	$5, %esi
	addl	$1, %esi
	andq	$7, %rsi
	je	.LBB9_71
###SPA### trampoline_fmt_64
# %bb.69:
	negq	%rsi
	pxor	%xmm0, %xmm0
.LBB9_70:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movdqu	%xmm0, 8(%rax)
	movq	$1, (%rax)
	movq	$0, 24(%rax)
	addq	$32, %rax
	addq	$1, %rsi
	jne	.LBB9_70
###SPA### trampoline_fmt_64
.LBB9_71:
###SPA## trampoline_fmt_64
	cmpq	$224, %rdx
	jb	.LBB9_74
###SPA### trampoline_fmt_64
# %bb.72:
	pxor	%xmm0, %xmm0
.LBB9_73:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movdqu	%xmm0, 8(%rax)
	movq	$1, (%rax)
	movq	$0, 24(%rax)
	movdqu	%xmm0, 40(%rax)
	movq	$1, 32(%rax)
	movq	$0, 56(%rax)
	movdqu	%xmm0, 72(%rax)
	movq	$1, 64(%rax)
	movq	$0, 88(%rax)
	movdqu	%xmm0, 104(%rax)
	movq	$1, 96(%rax)
	movq	$0, 120(%rax)
	movdqu	%xmm0, 136(%rax)
	movq	$1, 128(%rax)
	movq	$0, 152(%rax)
	movdqu	%xmm0, 168(%rax)
	movq	$1, 160(%rax)
	movq	$0, 184(%rax)
	movdqu	%xmm0, 200(%rax)
	movq	$1, 192(%rax)
	movq	$0, 216(%rax)
	movdqu	%xmm0, 232(%rax)
	movq	$1, 224(%rax)
	movq	$0, 248(%rax)
	addq	$256, %rax              # imm = 0x100
	cmpq	%rcx, %rax
	jb	.LBB9_73
###SPA### trampoline_fmt_64
.LBB9_74:
###SPA## trampoline_fmt_64
	addq	%rbx, 88(%rsp)
	je	.LBB9_79
###SPA### trampoline_fmt_64
# %bb.75:
	xorl	%ebx, %ebx
	xorl	%ebp, %ebp
.LBB9_76:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	80(%rsp), %rdi
	addq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZN2js4wasm13CustomSection11deserializeEPKh
	testq	%rax, %rax
	je	.LBB9_86
###SPA### trampoline_fmt_64
# %bb.77:                               #   in Loop: Header=BB9_76 Depth=1
	movq	%rax, %r13
	addq	$1, %rbp
	addq	$32, %rbx
	cmpq	88(%rsp), %rbp
	jb	.LBB9_76
###SPA### trampoline_fmt_64
	jmp	.LBB9_79
.LBB9_78:
###SPA## trampoline_fmt_64
	movq	%rbx, 88(%rsp)
.LBB9_79:
###SPA## trampoline_fmt_64
	movq	$0, 72(%rsp)
	leaq	240(%rsp), %rsi
	leaq	72(%rsp), %rcx
	movq	%r13, %rdi
	movq	(%rsp), %r13            # 8-byte Reload
	movq	%r13, %rdx
	callq	_ZN2js4wasm4Code11deserializeEPKhRKNS0_8LinkDataERNS0_8MetadataEP6RefPtrIKS1_E
	testq	%rax, %rax
	je	.LBB9_85
###SPA### trampoline_fmt_64
# %bb.80:
	movq	32(%rsp), %rcx          # 8-byte Reload
	addq	24(%rsp), %rcx          # 8-byte Folded Reload
	cmpq	%rcx, %rax
	jne	.LBB9_185
###SPA### trampoline_fmt_64
# %bb.81:
	cmpq	$0, 16(%rsp)            # 8-byte Folded Reload
	setne	%al
	movq	72(%rsp), %rcx
	movq	32(%rcx), %rcx
	cmpl	$1, 16(%rcx)
	sete	%cl
	cmpb	%cl, %al
	jne	.LBB9_186
###SPA### trampoline_fmt_64
# %bb.82:
	cmpb	$0, 68(%r13)
	je	.LBB9_87
###SPA### trampoline_fmt_64
# %bb.83:
	movl	64(%r13), %eax
	movq	80(%rsp), %rcx
	shlq	$5, %rax
	movq	24(%rcx,%rax), %rax
	testq	%rax, %rax
	je	.LBB9_90
###SPA### trampoline_fmt_64
# %bb.84:
	lock		addq	$1, (%rax)
	movq	168(%r13), %rbx
	movq	%rax, 168(%r13)
	testq	%rbx, %rbx
	jne	.LBB9_91
###SPA### trampoline_fmt_64
	jmp	.LBB9_95
.LBB9_85:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	72(%rsp), %rbx
	testq	%rbx, %rbx
	jne	.LBB9_111
###SPA### trampoline_fmt_64
	jmp	.LBB9_113
.LBB9_86:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	(%rsp), %r13            # 8-byte Reload
	movq	80(%rsp), %rbp
	movq	88(%rsp), %r15
	testq	%r15, %r15
	jg	.LBB9_114
###SPA### trampoline_fmt_64
	jmp	.LBB9_124
.LBB9_87:
###SPA## trampoline_fmt_64
	cmpb	$0, 184(%r13)
	jne	.LBB9_187
###SPA### trampoline_fmt_64
# %bb.88:
	cmpq	$0, 200(%r13)
	je	.LBB9_95
###SPA### trampoline_fmt_64
# %bb.89:
	leaq	.L.str.7(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$307, 0                 # imm = 0x133
	callq	abort@PLT
.LBB9_90:
###SPA## trampoline_fmt_64
	movq	168(%r13), %rbx
	movq	$0, 168(%r13)
	testq	%rbx, %rbx
	je	.LBB9_95
###SPA### trampoline_fmt_64
.LBB9_91:
###SPA## trampoline_fmt_64
	lock		subq	$1, (%rbx)
	jne	.LBB9_95
###SPA### trampoline_fmt_64
# %bb.92:
	movq	8(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB9_94
###SPA### trampoline_fmt_64
# %bb.93:
	callq	free@PLT
.LBB9_94:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_95:
###SPA## trampoline_fmt_64
	movq	72(%rsp), %rbx
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$200, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB9_184
###SPA### trampoline_fmt_64
# %bb.96:
	movq	%rax, %r15
	movq	$0, 232(%rsp)
	movq	$0, 224(%rsp)
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	232(%rsp), %rax
	leaq	240(%rsp), %rbp
	leaq	88(%rsp), %r10
	leaq	184(%rsp), %rdx
	leaq	160(%rsp), %rcx
	leaq	136(%rsp), %r8
	leaq	112(%rsp), %r9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb
	addq	$48, %rsp
	.cfi_adjust_cfa_offset -48
	movq	224(%rsp), %r13
	movq	$0, 224(%rsp)
	testq	%r13, %r13
	je	.LBB9_104
###SPA### trampoline_fmt_64
# %bb.97:
	leaq	4144(%r13), %rbp
	movq	$-4144, %rbx            # imm = 0xEFD0
.LBB9_98:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	-24(%rbp), %rdi
	cmpq	%rdi, %rbp
	je	.LBB9_100
###SPA### trampoline_fmt_64
# %bb.99:                               #   in Loop: Header=BB9_98 Depth=1
	callq	free@PLT
.LBB9_100:                              #   in Loop: Header=BB9_98 Depth=1
###SPA## trampoline_fmt_64
	addq	$-56, %rbp
	addq	$56, %rbx
	jne	.LBB9_98
###SPA### trampoline_fmt_64
# %bb.101:
	movq	8(%r13), %rdi
	cmpq	$8, %rdi
	je	.LBB9_103
###SPA### trampoline_fmt_64
# %bb.102:
	callq	free@PLT
.LBB9_103:
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
	callq	free@PLT
.LBB9_104:
###SPA## trampoline_fmt_64
	movq	232(%rsp), %rbx
	movq	$0, 232(%rsp)
	testq	%rbx, %rbx
	je	.LBB9_108
###SPA### trampoline_fmt_64
# %bb.105:
	movq	(%rbx), %rdi
	cmpq	$1, %rdi
	movq	(%rsp), %r13            # 8-byte Reload
	je	.LBB9_107
###SPA### trampoline_fmt_64
# %bb.106:
	callq	free@PLT
.LBB9_107:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
	movq	%r15, (%r14)
	testq	%r15, %r15
	je	.LBB9_110
###SPA### trampoline_fmt_64
.LBB9_109:
###SPA## trampoline_fmt_64
	lock		addq	$1, 8(%r15)
.LBB9_110:
###SPA## trampoline_fmt_64
	movq	72(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB9_113
###SPA### trampoline_fmt_64
.LBB9_111:
###SPA## trampoline_fmt_64
	lock		subq	$1, (%rbx)
	jne	.LBB9_113
###SPA### trampoline_fmt_64
# %bb.112:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm4CodeD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_113:
###SPA## trampoline_fmt_64
	movq	80(%rsp), %rbp
	movq	88(%rsp), %r15
	testq	%r15, %r15
	jle	.LBB9_124
###SPA### trampoline_fmt_64
.LBB9_114:
###SPA## trampoline_fmt_64
	shlq	$5, %r15
	addq	%rbp, %r15
.LBB9_115:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB9_120
###SPA### trampoline_fmt_64
# %bb.116:                              #   in Loop: Header=BB9_115 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB9_120
###SPA### trampoline_fmt_64
# %bb.117:                              #   in Loop: Header=BB9_115 Depth=1
	movq	8(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB9_119
###SPA### trampoline_fmt_64
# %bb.118:                              #   in Loop: Header=BB9_115 Depth=1
	callq	free@PLT
.LBB9_119:                              #   in Loop: Header=BB9_115 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_120:                              #   in Loop: Header=BB9_115 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rdi
	cmpq	$1, %rdi
	je	.LBB9_122
###SPA### trampoline_fmt_64
# %bb.121:                              #   in Loop: Header=BB9_115 Depth=1
	callq	free@PLT
.LBB9_122:                              #   in Loop: Header=BB9_115 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbp
	cmpq	%r15, %rbp
	jb	.LBB9_115
###SPA### trampoline_fmt_64
# %bb.123:
	movq	80(%rsp), %rbp
.LBB9_124:
###SPA## trampoline_fmt_64
	cmpq	$32, %rbp
	je	.LBB9_126
###SPA### trampoline_fmt_64
# %bb.125:
	movq	%rbp, %rdi
	callq	free@PLT
.LBB9_126:
###SPA## trampoline_fmt_64
	movq	104(%rsp), %rbx
	movq	112(%rsp), %rax
	testq	%rax, %rax
	jle	.LBB9_135
###SPA### trampoline_fmt_64
.LBB9_127:
###SPA## trampoline_fmt_64
	leaq	(%rbx,%rax,8), %r15
	.p2align	4, 0x90
.LBB9_128:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rbp
	testq	%rbp, %rbp
	je	.LBB9_133
###SPA### trampoline_fmt_64
# %bb.129:                              #   in Loop: Header=BB9_128 Depth=1
	lock		subq	$1, (%rbp)
	jne	.LBB9_133
###SPA### trampoline_fmt_64
# %bb.130:                              #   in Loop: Header=BB9_128 Depth=1
	movq	64(%rbp), %rdi
	leaq	88(%rbp), %rax
	cmpq	%rax, %rdi
	je	.LBB9_132
###SPA### trampoline_fmt_64
# %bb.131:                              #   in Loop: Header=BB9_128 Depth=1
	callq	free@PLT
.LBB9_132:                              #   in Loop: Header=BB9_128 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	callq	free@PLT
.LBB9_133:                              #   in Loop: Header=BB9_128 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r15, %rbx
	jb	.LBB9_128
###SPA### trampoline_fmt_64
# %bb.134:
	movq	104(%rsp), %rbx
.LBB9_135:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB9_137
###SPA### trampoline_fmt_64
# %bb.136:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_137:
###SPA## trampoline_fmt_64
	movq	128(%rsp), %rbx
	movq	136(%rsp), %rax
	testq	%rax, %rax
	jle	.LBB9_146
###SPA### trampoline_fmt_64
.LBB9_138:
###SPA## trampoline_fmt_64
	leaq	(%rbx,%rax,8), %r15
	.p2align	4, 0x90
.LBB9_139:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rbp
	testq	%rbp, %rbp
	je	.LBB9_144
###SPA### trampoline_fmt_64
# %bb.140:                              #   in Loop: Header=BB9_139 Depth=1
	lock		subq	$1, (%rbp)
	jne	.LBB9_144
###SPA### trampoline_fmt_64
# %bb.141:                              #   in Loop: Header=BB9_139 Depth=1
	movq	48(%rbp), %rdi
	cmpq	$1, %rdi
	je	.LBB9_143
###SPA### trampoline_fmt_64
# %bb.142:                              #   in Loop: Header=BB9_139 Depth=1
	callq	free@PLT
.LBB9_143:                              #   in Loop: Header=BB9_139 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	callq	free@PLT
.LBB9_144:                              #   in Loop: Header=BB9_139 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r15, %rbx
	jb	.LBB9_139
###SPA### trampoline_fmt_64
# %bb.145:
	movq	128(%rsp), %rbx
.LBB9_146:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB9_148
###SPA### trampoline_fmt_64
# %bb.147:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_148:
###SPA## trampoline_fmt_64
	movq	152(%rsp), %rbx
	movq	160(%rsp), %rbp
	testq	%rbp, %rbp
	jle	.LBB9_154
###SPA### trampoline_fmt_64
.LBB9_149:
###SPA## trampoline_fmt_64
	shlq	$4, %rbp
	addq	%rbx, %rbp
	.p2align	4, 0x90
.LBB9_150:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB9_152
###SPA### trampoline_fmt_64
# %bb.151:                              #   in Loop: Header=BB9_150 Depth=1
	callq	free@PLT
.LBB9_152:                              #   in Loop: Header=BB9_150 Depth=1
###SPA## trampoline_fmt_64
	addq	$16, %rbx
	cmpq	%rbp, %rbx
	jb	.LBB9_150
###SPA### trampoline_fmt_64
# %bb.153:
	movq	152(%rsp), %rbx
.LBB9_154:
###SPA## trampoline_fmt_64
	cmpq	$16, %rbx
	je	.LBB9_156
###SPA### trampoline_fmt_64
# %bb.155:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_156:
###SPA## trampoline_fmt_64
	movq	176(%rsp), %rbx
	movq	184(%rsp), %rax
	testq	%rax, %rax
	jle	.LBB9_164
###SPA### trampoline_fmt_64
.LBB9_157:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rax,2), %rax
	leaq	(%rbx,%rax,8), %rbp
	.p2align	4, 0x90
.LBB9_158:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	movq	$0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB9_160
###SPA### trampoline_fmt_64
# %bb.159:                              #   in Loop: Header=BB9_158 Depth=1
	callq	free@PLT
.LBB9_160:                              #   in Loop: Header=BB9_158 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB9_162
###SPA### trampoline_fmt_64
# %bb.161:                              #   in Loop: Header=BB9_158 Depth=1
	callq	free@PLT
.LBB9_162:                              #   in Loop: Header=BB9_158 Depth=1
###SPA## trampoline_fmt_64
	addq	$24, %rbx
	cmpq	%rbp, %rbx
	jb	.LBB9_158
###SPA### trampoline_fmt_64
# %bb.163:
	movq	176(%rsp), %rbx
.LBB9_164:
###SPA## trampoline_fmt_64
	cmpq	$24, %rbx
	je	.LBB9_166
###SPA### trampoline_fmt_64
# %bb.165:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB9_166:
###SPA## trampoline_fmt_64
	movq	$-4144, %rbx            # imm = 0xEFD0
	.p2align	4, 0x90
.LBB9_167:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	-24(%r12), %rdi
	cmpq	%rdi, %r12
	je	.LBB9_169
###SPA### trampoline_fmt_64
# %bb.168:                              #   in Loop: Header=BB9_167 Depth=1
	callq	free@PLT
.LBB9_169:                              #   in Loop: Header=BB9_167 Depth=1
###SPA## trampoline_fmt_64
	addq	$-56, %r12
	addq	$56, %rbx
	jne	.LBB9_167
###SPA### trampoline_fmt_64
# %bb.170:
	movq	248(%rsp), %rdi
	cmpq	$8, %rdi
	je	.LBB9_172
###SPA### trampoline_fmt_64
# %bb.171:
	callq	free@PLT
.LBB9_172:
###SPA## trampoline_fmt_64
	movq	40(%rsp), %rdi          # 8-byte Reload
	cmpq	$1, %rdi
	je	.LBB9_174
###SPA### trampoline_fmt_64
# %bb.173:
	callq	free@PLT
.LBB9_174:
###SPA## trampoline_fmt_64
	movq	200(%rsp), %rdi
	cmpq	$1, %rdi
	je	.LBB9_176
###SPA### trampoline_fmt_64
.LBB9_175:
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB9_176:
###SPA## trampoline_fmt_64
	testq	%r13, %r13
	je	.LBB9_179
###SPA### trampoline_fmt_64
# %bb.177:
	lock		subq	$1, 8(%r13)
	jne	.LBB9_179
###SPA### trampoline_fmt_64
# %bb.178:
	addq	$8, %r13
	movq	-8(%r13), %rax
	addq	$-8, %r13
	movq	%r13, %rdi
	callq	*(%rax)
	movq	%r13, %rdi
	callq	free@PLT
.LBB9_179:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	4416(%rsp), %rax
	jne	.LBB9_182
###SPA### trampoline_fmt_64
.LBB9_180:
###SPA## trampoline_fmt_64
	movq	%r14, %rax
	addq	$4424, %rsp             # imm = 0x1148
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB9_108:
	.cfi_def_cfa_offset 4480
###SPA## trampoline_fmt_64
	movq	(%rsp), %r13            # 8-byte Reload
	movq	%r15, (%r14)
	testq	%r15, %r15
	jne	.LBB9_109
###SPA### trampoline_fmt_64
	jmp	.LBB9_110
.LBB9_181:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	%fs:40, %rax
	cmpq	4416(%rsp), %rax
	je	.LBB9_180
###SPA### trampoline_fmt_64
.LBB9_182:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB9_184:
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
	movq	(%rsp), %r13            # 8-byte Reload
	movq	%r15, (%r14)
	testq	%r15, %r15
	jne	.LBB9_109
###SPA### trampoline_fmt_64
	jmp	.LBB9_110
.LBB9_185:
###SPA## trampoline_fmt_64
	leaq	.L.str.3(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$299, 0                 # imm = 0x12B
	callq	abort@PLT
.LBB9_186:
###SPA## trampoline_fmt_64
	leaq	.L.str.5(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$300, 0                 # imm = 0x12C
	callq	abort@PLT
.LBB9_187:
###SPA## trampoline_fmt_64
	leaq	.L.str.6(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$306, 0                 # imm = 0x132
	callq	abort@PLT
.Lfunc_end9:
	.size	_ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE, .Lfunc_end9-_ZN2js4wasm6Module11deserializeEPKhmPNS0_8MetadataE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module12createObjectEP9JSContext,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module12createObjectEP9JSContext # -- Begin function _ZNK2js4wasm6Module12createObjectEP9JSContext
	.globl	_ZNK2js4wasm6Module12createObjectEP9JSContext
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module12createObjectEP9JSContext,@function
_ZNK2js4wasm6Module12createObjectEP9JSContext: # @_ZNK2js4wasm6Module12createObjectEP9JSContext
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 32(%rsp)
	movq	152(%rsi), %rsi
	movq	88(%rsi), %rax
	movq	8(%rax), %rcx
	movq	16(%rax), %rax
	movzbl	19(%rcx), %ecx
	andl	$31, %ecx
	movl	$77, %edx
	subl	%ecx, %edx
	movabsq	$-1829587348619264, %rdi # imm = 0xFFF9800000000000
	cmpq	%rdi, (%rax,%rdx,8)
	jne	.LBB10_4
###SPA### trampoline_fmt_64
# %bb.1:
	addq	$88, %rsi
	movl	$72, %edx
	movl	$1, %ecx
	movq	%rbx, %rdi
	callq	_ZN2js12GlobalObject18resolveConstructorEP9JSContextN2JS6HandleIPS0_EE10JSProtoKeyNS0_17IfClassIsDisabledE
	testb	%al, %al
	je	.LBB10_2
###SPA### trampoline_fmt_64
# %bb.3:
	movq	152(%rbx), %rax
	movq	88(%rax), %rax
	movq	8(%rax), %rcx
	movq	16(%rax), %rax
	movzbl	19(%rcx), %ecx
	andl	$31, %ecx
.LBB10_4:
###SPA## trampoline_fmt_64
	movl	$160, %edx
	subl	%ecx, %edx
	movabsq	$-562949953421312, %rcx # imm = 0xFFFE000000000000
	xorq	(%rax,%rdx,8), %rcx
	leaq	24(%rsp), %rdx
	movq	%rcx, 24(%rsp)
	leaq	24(%rbx), %rax
	movq	%rax, 8(%rsp)
	movq	24(%rbx), %rax
	movq	%rax, 16(%rsp)
	leaq	8(%rsp), %rax
	movq	%rax, 24(%rbx)
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js16WasmModuleObject6createEP9JSContextRKNS_4wasm6ModuleEN2JS6HandleIP8JSObjectEE
	movq	8(%rsp), %rcx
	movq	16(%rsp), %rdx
	movq	%rdx, (%rcx)
	movq	%fs:40, %rcx
	cmpq	32(%rsp), %rcx
	jne	.LBB10_7
###SPA### trampoline_fmt_64
.LBB10_6:
###SPA## trampoline_fmt_64
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB10_2:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	32(%rsp), %rcx
	je	.LBB10_6
###SPA### trampoline_fmt_64
.LBB10_7:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end10:
	.size	_ZNK2js4wasm6Module12createObjectEP9JSContext, .Lfunc_end10-_ZNK2js4wasm6Module12createObjectEP9JSContext
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext # -- Begin function _ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext
	.globl	_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext,@function
_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext: # @_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	%rdi, %rax
	leaq	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue(%rip), %rdx
	movq	%rsi, %rdi
	movq	%rax, %rsi
	jmp	_ZN2js16WasmModuleObject6createEP9JSContextRKNS_4wasm6ModuleEN2JS6HandleIP8JSObjectEE # TAILCALL
.Lfunc_end11:
	.size	_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext, .Lfunc_end11-_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm19IsHugeMemoryEnabledEv,"ax",@progbits
	.hidden	_ZN2js4wasm19IsHugeMemoryEnabledEv # -- Begin function _ZN2js4wasm19IsHugeMemoryEnabledEv
	.globl	_ZN2js4wasm19IsHugeMemoryEnabledEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm19IsHugeMemoryEnabledEv,@function
_ZN2js4wasm19IsHugeMemoryEnabledEv:     # @_ZN2js4wasm19IsHugeMemoryEnabledEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movb	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip), %al
	testb	%al, %al
	je	.LBB12_1
###SPA### trampoline_fmt_64
.LBB12_3:
###SPA## trampoline_fmt_64
	movb	_ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip), %al
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB12_1:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	leaq	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB12_3
###SPA### trampoline_fmt_64
# %bb.2:
	leaq	sHugeMemoryEnabled(%rip), %r14
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movb	$1, sHugeMemoryEnabled+41(%rip)
	movb	sHugeMemoryEnabled+40(%rip), %bl
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movb	%bl, _ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip)
	leaq	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB12_3
.Lfunc_end12:
	.size	_ZN2js4wasm19IsHugeMemoryEnabledEv, .Lfunc_end12-_ZN2js4wasm19IsHugeMemoryEnabledEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_ # -- Begin function _ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_
	.globl	_ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_,@function
_ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_: # @_ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %r14
	movq	%rsi, %r13
	movq	%rdi, %rbp
	movq	16(%rdi), %rdi
	callq	_ZNK2js4wasm4Code22addSizeOfMiscIfNotSeenEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKS1_NSB_ISH_vEESD_EEPmSL_
	movq	%rbp, %rdi
	callq	*%r13
	movq	24(%rbp), %rdi
	cmpq	$24, %rdi
	movq	%rax, 32(%rsp)          # 8-byte Spill
	je	.LBB13_1
###SPA### trampoline_fmt_64
# %bb.2:
	callq	*%r13
	movq	%rax, %r15
	movq	24(%rbp), %rbx
	movq	32(%rbp), %rax
	testq	%rax, %rax
	movq	%rbp, 8(%rsp)           # 8-byte Spill
	jne	.LBB13_4
###SPA### trampoline_fmt_64
	jmp	.LBB13_6
.LBB13_1:
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
	movl	$24, %ebx
	movq	32(%rbp), %rax
	testq	%rax, %rax
	movq	%rbp, 8(%rsp)           # 8-byte Spill
	je	.LBB13_6
###SPA### trampoline_fmt_64
.LBB13_4:
###SPA## trampoline_fmt_64
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rbp
	.p2align	4, 0x90
.LBB13_5:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZNK2js4wasm6Import19sizeOfExcludingThisEPFmPKvE
	addq	%rax, %r15
	addq	$24, %rbx
	addq	$-24, %rbp
	jne	.LBB13_5
###SPA### trampoline_fmt_64
.LBB13_6:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rbp           # 8-byte Reload
	movq	48(%rbp), %rdi
	cmpq	$16, %rdi
	je	.LBB13_7
###SPA### trampoline_fmt_64
# %bb.8:
	callq	*%r13
	movq	%rax, %r12
	movq	48(%rbp), %rbx
	movq	56(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.LBB13_10
###SPA### trampoline_fmt_64
	jmp	.LBB13_12
.LBB13_7:
###SPA## trampoline_fmt_64
	xorl	%r12d, %r12d
	movl	$16, %ebx
	movq	56(%rbp), %rbp
	testq	%rbp, %rbp
	je	.LBB13_12
###SPA### trampoline_fmt_64
.LBB13_10:
###SPA## trampoline_fmt_64
	shlq	$4, %rbp
	.p2align	4, 0x90
.LBB13_11:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZNK2js4wasm6Export19sizeOfExcludingThisEPFmPKvE
	addq	%rax, %r12
	addq	$16, %rbx
	addq	$-16, %rbp
	jne	.LBB13_11
###SPA### trampoline_fmt_64
.LBB13_12:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rbx           # 8-byte Reload
	movq	72(%rbx), %rdi
	cmpq	$8, %rdi
	movq	%r13, (%rsp)            # 8-byte Spill
	movq	%r14, 24(%rsp)          # 8-byte Spill
	je	.LBB13_13
###SPA### trampoline_fmt_64
# %bb.14:
	callq	*%r13
	movq	%rax, %r13
	movq	72(%rbx), %rbp
	movq	80(%rbx), %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	testq	%rcx, %rcx
	jne	.LBB13_16
###SPA### trampoline_fmt_64
	jmp	.LBB13_18
.LBB13_13:
###SPA## trampoline_fmt_64
	xorl	%r13d, %r13d
	movl	$8, %ebp
	movq	80(%rbx), %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	testq	%rcx, %rcx
	je	.LBB13_18
###SPA### trampoline_fmt_64
.LBB13_16:
###SPA## trampoline_fmt_64
	shlq	$3, 16(%rsp)            # 8-byte Folded Spill
	xorl	%ebx, %ebx
	movq	(%rsp), %r14            # 8-byte Reload
	.p2align	4, 0x90
.LBB13_17:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp,%rbx), %rdi
	movq	%r14, %rsi
	callq	_ZNK2js4wasm11DataSegment19sizeOfExcludingThisEPFmPKvE
	addq	%rax, %r13
	addq	$8, %rbx
	cmpq	%rbx, 16(%rsp)          # 8-byte Folded Reload
	jne	.LBB13_17
###SPA### trampoline_fmt_64
.LBB13_18:
###SPA## trampoline_fmt_64
	addq	32(%rsp), %r15          # 8-byte Folded Reload
	movq	8(%rsp), %rbx           # 8-byte Reload
	movq	96(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB13_19
###SPA### trampoline_fmt_64
# %bb.20:
	callq	*(%rsp)                 # 8-byte Folded Reload
	movq	%rax, %r14
	movq	96(%rbx), %rax
	jmp	.LBB13_21
.LBB13_19:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
	movl	$8, %eax
.LBB13_21:
###SPA## trampoline_fmt_64
	addq	%r12, %r15
	movq	104(%rbx), %r12
	testq	%r12, %r12
	movq	%r15, 16(%rsp)          # 8-byte Spill
	je	.LBB13_24
###SPA### trampoline_fmt_64
# %bb.22:
	shlq	$3, %r12
	xorl	%ebx, %ebx
	movq	(%rsp), %rbp            # 8-byte Reload
	.p2align	4, 0x90
.LBB13_23:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rbx), %rdi
	movq	%rbp, %rsi
	movq	%rax, %r15
	callq	_ZNK2js4wasm11ElemSegment19sizeOfExcludingThisEPFmPKvE
	addq	%rax, %r14
	movq	%r15, %rax
	addq	$8, %rbx
	cmpq	%rbx, %r12
	jne	.LBB13_23
###SPA### trampoline_fmt_64
.LBB13_24:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %r15          # 8-byte Reload
	addq	%r13, %r15
	movq	8(%rsp), %rbp           # 8-byte Reload
	movq	120(%rbp), %rdi
	cmpq	$32, %rdi
	je	.LBB13_25
###SPA### trampoline_fmt_64
# %bb.26:
	movq	(%rsp), %r13            # 8-byte Reload
	callq	*%r13
	movq	%rax, %r12
	movq	120(%rbp), %rbx
	addq	%r14, %r15
	movq	128(%rbp), %rbp
	testq	%rbp, %rbp
	je	.LBB13_28
###SPA### trampoline_fmt_64
.LBB13_29:
###SPA## trampoline_fmt_64
	shlq	$5, %rbp
	movq	24(%rsp), %r14          # 8-byte Reload
	.p2align	4, 0x90
.LBB13_30:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZNK2js4wasm13CustomSection19sizeOfExcludingThisEPFmPKvE
	addq	%rax, %r12
	addq	$32, %rbx
	addq	$-32, %rbp
	jne	.LBB13_30
###SPA### trampoline_fmt_64
	jmp	.LBB13_31
.LBB13_25:
###SPA## trampoline_fmt_64
	xorl	%r12d, %r12d
	movl	$32, %ebx
	movq	(%rsp), %r13            # 8-byte Reload
	addq	%r14, %r15
	movq	128(%rbp), %rbp
	testq	%rbp, %rbp
	jne	.LBB13_29
###SPA### trampoline_fmt_64
.LBB13_28:
###SPA## trampoline_fmt_64
	movq	24(%rsp), %r14          # 8-byte Reload
.LBB13_31:
###SPA## trampoline_fmt_64
	addq	%r12, %r15
	addq	(%r14), %r15
	movq	%r15, (%r14)
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	152(%rax), %rax
	testq	%rax, %rax
	je	.LBB13_36
###SPA### trampoline_fmt_64
# %bb.32:
	movq	(%rax), %rdi
	cmpq	$1, %rdi
	je	.LBB13_33
###SPA### trampoline_fmt_64
# %bb.34:
	callq	*%r13
	movq	(%r14), %r15
	jmp	.LBB13_35
.LBB13_33:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
.LBB13_35:
###SPA## trampoline_fmt_64
	addq	%rax, %r15
	movq	%r15, (%r14)
.LBB13_36:
###SPA## trampoline_fmt_64
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end13:
	.size	_ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_, .Lfunc_end13-_ZNK2js4wasm6Module13addSizeOfMiscEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKNS0_4CodeENSB_ISI_vEESD_EEPmSM_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv,"ax",@progbits
	.hidden	_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv # -- Begin function _ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv
	.globl	_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv,@function
_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv: # @_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	cmpq	$0, 32(%rdi)
	je	.LBB14_1
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$4, %r14d
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB14_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%r15), %rdi
	addq	%r12, %rdi
	callq	_ZNK2js4wasm6Import14serializedSizeEv
	addq	%rax, %r14
	addq	$1, %rbx
	addq	$24, %r12
	cmpq	32(%r15), %rbx
	jb	.LBB14_3
###SPA### trampoline_fmt_64
# %bb.4:
	addq	$200, %r14
	cmpq	$0, 56(%r15)
	je	.LBB14_6
###SPA### trampoline_fmt_64
.LBB14_7:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB14_8:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	48(%r15), %rdi
	addq	%r13, %rdi
	callq	_ZNK2js4wasm6Export14serializedSizeEv
	addq	%rax, %r12
	addq	$1, %rbx
	addq	$16, %r13
	cmpq	56(%r15), %rbx
	jb	.LBB14_8
###SPA### trampoline_fmt_64
# %bb.9:
	addq	%r12, %r14
	cmpq	$0, 80(%r15)
	je	.LBB14_10
###SPA### trampoline_fmt_64
.LBB14_11:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB14_12:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	72(%r15), %rax
	movq	(%rax,%rbx,8), %rdi
	callq	_ZNK2js4wasm11DataSegment14serializedSizeEv
	addq	%rax, %r12
	addq	$1, %rbx
	cmpq	80(%r15), %rbx
	jb	.LBB14_12
###SPA### trampoline_fmt_64
# %bb.13:
	addq	%r12, %r14
	cmpq	$0, 104(%r15)
	je	.LBB14_14
###SPA### trampoline_fmt_64
.LBB14_15:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB14_16:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	96(%r15), %rax
	movq	(%rax,%rbx,8), %rdi
	callq	_ZNK2js4wasm11ElemSegment14serializedSizeEv
	addq	%rax, %r12
	addq	$1, %rbx
	cmpq	104(%r15), %rbx
	jb	.LBB14_16
###SPA### trampoline_fmt_64
# %bb.17:
	addq	%r12, %r14
	cmpq	$0, 128(%r15)
	je	.LBB14_18
###SPA### trampoline_fmt_64
.LBB14_19:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB14_20:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	120(%r15), %rdi
	addq	%r13, %rdi
	callq	_ZNK2js4wasm13CustomSection14serializedSizeEv
	addq	%rax, %r12
	addq	$1, %rbx
	addq	$32, %r13
	cmpq	128(%r15), %rbx
	jb	.LBB14_20
###SPA### trampoline_fmt_64
	jmp	.LBB14_21
.LBB14_1:
###SPA## trampoline_fmt_64
	movl	$204, %r14d
	cmpq	$0, 56(%r15)
	jne	.LBB14_7
###SPA### trampoline_fmt_64
.LBB14_6:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
	addq	%r12, %r14
	cmpq	$0, 80(%r15)
	jne	.LBB14_11
###SPA### trampoline_fmt_64
.LBB14_10:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
	addq	%r12, %r14
	cmpq	$0, 104(%r15)
	jne	.LBB14_15
###SPA### trampoline_fmt_64
.LBB14_14:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
	addq	%r12, %r14
	cmpq	$0, 128(%r15)
	jne	.LBB14_19
###SPA### trampoline_fmt_64
.LBB14_18:
###SPA## trampoline_fmt_64
	movl	$4, %r12d
.LBB14_21:
###SPA## trampoline_fmt_64
	addq	%r12, %r14
	movq	%r14, 192(%r15)
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end14:
	.size	_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv, .Lfunc_end14-_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE # -- Begin function _ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE
	.globl	_ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE,@function
_ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE: # @_ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$168, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 8(%rsp)           # 8-byte Spill
	movl	%edx, %r13d
	movq	%rsi, %rbx
	movq	%rdi, %r12
	movq	%fs:40, %rax
	movq	%rax, 160(%rsp)
	movq	_ZN2js16FunctionClassPtrE(%rip), %rcx
	leaq	_ZN2js11PlainObject6class_E(%rip), %rax
	cmpq	%rax, %rcx
	je	.LBB15_3
###SPA### trampoline_fmt_64
# %bb.1:
	movl	_ZN2js11PlainObject6class_E+8(%rip), %eax
	movzbl	%ah, %ecx
	andl	$1, %eax
	addq	%rcx, %rax
	movb	$16, %cl
	cmpl	$16, %eax
	ja	.LBB15_4
###SPA### trampoline_fmt_64
# %bb.2:
	leaq	_ZN2js2gc16slotsToThingKindE(%rip), %rcx
	movb	(%rax,%rcx), %cl
	jmp	.LBB15_4
.LBB15_3:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB15_4:
###SPA## trampoline_fmt_64
	movzbl	%cl, %ecx
	leaq	_ZN2js11PlainObject6class_E(%rip), %rsi
	leaq	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue(%rip), %rdx
	xorl	%ebp, %ebp
	xorl	%r8d, %r8d
	movq	%rbx, %rdi
	callq	_ZN2js23NewObjectWithClassProtoEP9JSContextPK7JSClassN2JS6HandleIP8JSObjectEENS_2gc9AllocKindENS_13NewObjectKindE
	movq	%rax, 152(%rsp)
	leaq	24(%rbx), %r14
	movq	%r14, 136(%rsp)
	movq	24(%rbx), %rcx
	movq	%rcx, 144(%rsp)
	leaq	136(%rsp), %rcx
	movq	%rcx, 24(%rbx)
	testq	%rax, %rax
	je	.LBB15_42
###SPA### trampoline_fmt_64
# %bb.5:
	movl	188(%r12), %eax
	testl	%eax, %eax
	je	.LBB15_11
###SPA### trampoline_fmt_64
# %bb.6:
	movl	$1000000, %eax          # imm = 0xF4240
	movq	%rax, %xmm0
	pslldq	$8, %xmm0               # xmm0 = zero,zero,zero,zero,zero,zero,zero,zero,xmm0[0,1,2,3,4,5,6,7]
	movdqa	%xmm0, 16(%rsp)         # 16-byte Spill
	leaq	112(%rsp), %rbp
	.p2align	4, 0x90
.LBB15_7:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_8 Depth 2
###SPA## trampoline_fmt_64
	movdqa	16(%rsp), %xmm0         # 16-byte Reload
	movdqa	%xmm0, 112(%rsp)
	.p2align	4, 0x90
.LBB15_8:                               #   Parent Loop BB15_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	movq	%rbp, %rsi
	callq	nanosleep@PLT
	cmpl	$-1, %eax
	jne	.LBB15_10
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB15_8 Depth=2
	callq	__errno_location@PLT
	cmpl	$4, (%rax)
	je	.LBB15_8
###SPA### trampoline_fmt_64
.LBB15_10:                              #   in Loop: Header=BB15_7 Depth=1
###SPA## trampoline_fmt_64
	movl	188(%r12), %eax
	testl	%eax, %eax
	jne	.LBB15_7
###SPA### trampoline_fmt_64
.LBB15_11:
###SPA## trampoline_fmt_64
	movq	16(%r12), %rdi
	movl	%r13d, %esi
	callq	_ZNK2js4wasm4Code7hasTierENS0_4TierE
	testb	%al, %al
	je	.LBB15_33
###SPA### trampoline_fmt_64
# %bb.12:
	movq	16(%r12), %rdi
	movl	%r13d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	16(%rax), %rbp
	movl	16(%rbp), %esi
	movq	%rbx, %rdi
	callq	_Z16JS_NewUint8ArrayP9JSContextj
	movq	%rax, 128(%rsp)
	movq	%r14, 112(%rsp)
	movq	24(%rbx), %rcx
	movq	%rcx, 120(%rsp)
	leaq	112(%rsp), %rdx
	movq	%rdx, 24(%rbx)
	testq	%rax, %rax
	je	.LBB15_34
###SPA### trampoline_fmt_64
# %bb.13:
	movabsq	$-562949953421312, %r15 # imm = 0xFFFE000000000000
	movq	56(%rax), %rdi
	movq	(%rbp), %rsi
	movl	16(%rbp), %edx
	callq	memcpy@PLT
	movq	128(%rsp), %rax
	orq	%r15, %rax
	leaq	104(%rsp), %rcx
	movq	%rax, 104(%rsp)
	leaq	96(%rbx), %rax
	movq	%rax, 88(%rsp)
	movq	96(%rbx), %rax
	movq	%rax, 96(%rsp)
	leaq	88(%rsp), %rax
	movq	%rax, 96(%rbx)
	leaq	.L.str.8(%rip), %rdx
	movl	$1, %r8d
	movq	%rbx, %rdi
	leaq	152(%rsp), %rsi
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_35
###SPA### trampoline_fmt_64
# %bb.14:
	leaq	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue(%rip), %rsi
	movq	%rbx, %rdi
	callq	_ZN2js18NewDenseEmptyArrayEP9JSContextN2JS6HandleIP8JSObjectEE
	movq	%rax, 80(%rsp)
	movq	%r14, 64(%rsp)
	movq	24(%rbx), %rcx
	movq	%rcx, 72(%rsp)
	leaq	64(%rsp), %rcx
	movq	%rcx, 24(%rbx)
	testq	%rax, %rax
	je	.LBB15_38
###SPA### trampoline_fmt_64
# %bb.15:
	movq	16(%r12), %rdi
	movl	%r13d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rcx
	movq	72(%rcx), %rax
	testq	%rax, %rax
	leaq	_ZN2js11PlainObject6class_E(%rip), %r15
	je	.LBB15_31
###SPA### trampoline_fmt_64
# %bb.16:
	movq	64(%rcx), %rbp
	leaq	56(%rsp), %r12
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rcx
	addq	%rax, %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	xorl	%r13d, %r13d
.LBB15_17:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpq	%r15, _ZN2js16FunctionClassPtrE(%rip)
	je	.LBB15_20
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB15_17 Depth=1
	movl	_ZN2js11PlainObject6class_E+8(%rip), %eax
	movzbl	%ah, %ecx
	andl	$1, %eax
	addq	%rcx, %rax
	movb	$16, %cl
	cmpl	$16, %eax
	ja	.LBB15_21
###SPA### trampoline_fmt_64
# %bb.19:                               #   in Loop: Header=BB15_17 Depth=1
	leaq	_ZN2js2gc16slotsToThingKindE(%rip), %rcx
	movzbl	(%rax,%rcx), %ecx
	jmp	.LBB15_21
.LBB15_20:                              #   in Loop: Header=BB15_17 Depth=1
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB15_21:                              #   in Loop: Header=BB15_17 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%cl, %ecx
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	leaq	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue(%rip), %rdx
	callq	_ZN2js29NewObjectWithGivenTaggedProtoEP9JSContextPK7JSClassN2JS6HandleINS_11TaggedProtoEEENS_2gc9AllocKindENS_13NewObjectKindEj
	movq	%rax, 56(%rsp)
	movq	%r14, 40(%rsp)
	movq	24(%rbx), %rcx
	movq	%rcx, 48(%rsp)
	leaq	40(%rsp), %rcx
	movq	%rcx, 24(%rbx)
	testq	%rax, %rax
	je	.LBB15_37
###SPA### trampoline_fmt_64
# %bb.22:                               #   in Loop: Header=BB15_17 Depth=1
	movl	(%rbp,%r13), %eax
	xorps	%xmm0, %xmm0
	cvtsi2sdq	%rax, %xmm0
	movq	%rax, %rcx
	movabsq	$-2111062325329920, %rdx # imm = 0xFFF8800000000000
	orq	%rdx, %rcx
	testl	%eax, %eax
	movq	%xmm0, %rax
	cmovnsq	%rcx, %rax
	movq	%rax, 104(%rsp)
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r12, %rsi
	leaq	.L.str.9(%rip), %rdx
	leaq	104(%rsp), %rcx
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_37
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB15_17 Depth=1
	movl	8(%rbp,%r13), %eax
	xorps	%xmm0, %xmm0
	cvtsi2sdq	%rax, %xmm0
	movq	%rax, %rcx
	movabsq	$-2111062325329920, %rdx # imm = 0xFFF8800000000000
	orq	%rdx, %rcx
	testl	%eax, %eax
	movq	%xmm0, %rax
	cmovnsq	%rcx, %rax
	movq	%rax, 104(%rsp)
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r12, %rsi
	leaq	.L.str.10(%rip), %rdx
	leaq	104(%rsp), %rcx
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_37
###SPA### trampoline_fmt_64
# %bb.24:                               #   in Loop: Header=BB15_17 Depth=1
	movzbl	24(%rbp,%r13), %eax
	movabsq	$-2111062325329920, %rcx # imm = 0xFFF8800000000000
	orq	%rcx, %rax
	movq	%rax, 104(%rsp)
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r12, %rsi
	leaq	.L.str.11(%rip), %rdx
	leaq	104(%rsp), %rcx
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_37
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB15_17 Depth=1
	cmpb	$0, 24(%rbp,%r13)
	jne	.LBB15_29
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB15_17 Depth=1
	movl	12(%rbp,%r13), %eax
	xorps	%xmm0, %xmm0
	cvtsi2sdq	%rax, %xmm0
	movq	%rax, %rcx
	movabsq	$-2111062325329920, %rdx # imm = 0xFFF8800000000000
	orq	%rdx, %rcx
	testl	%eax, %eax
	movq	%xmm0, %rax
	cmovnsq	%rcx, %rax
	movq	%rax, 104(%rsp)
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r12, %rsi
	leaq	.L.str.12(%rip), %rdx
	leaq	104(%rsp), %rcx
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_37
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB15_17 Depth=1
	movzbl	20(%rbp,%r13), %eax
	addl	(%rbp,%r13), %eax
	xorps	%xmm0, %xmm0
	cvtsi2sdq	%rax, %xmm0
	movq	%rax, %rcx
	movabsq	$-2111062325329920, %rdx # imm = 0xFFF8800000000000
	orq	%rdx, %rcx
	testl	%eax, %eax
	movq	%xmm0, %rax
	cmovnsq	%rcx, %rax
	movq	%rax, 104(%rsp)
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r12, %rsi
	leaq	.L.str.13(%rip), %rdx
	leaq	104(%rsp), %rcx
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_37
###SPA### trampoline_fmt_64
# %bb.28:                               #   in Loop: Header=BB15_17 Depth=1
	movl	8(%rbp,%r13), %eax
	xorps	%xmm0, %xmm0
	cvtsi2sdq	%rax, %xmm0
	movq	%rax, %rcx
	movabsq	$-2111062325329920, %rdx # imm = 0xFFF8800000000000
	orq	%rdx, %rcx
	testl	%eax, %eax
	movq	%xmm0, %rax
	cmovnsq	%rcx, %rax
	movq	%rax, 104(%rsp)
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r12, %rsi
	leaq	.L.str.14(%rip), %rdx
	leaq	104(%rsp), %rcx
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_37
###SPA### trampoline_fmt_64
.LBB15_29:                              #   in Loop: Header=BB15_17 Depth=1
###SPA## trampoline_fmt_64
	movq	56(%rsp), %rax
	movabsq	$-562949953421312, %rcx # imm = 0xFFFE000000000000
	orq	%rcx, %rax
	movq	%rax, 32(%rsp)
	movq	%rbx, %rdi
	leaq	80(%rsp), %rsi
	leaq	32(%rsp), %rdx
	callq	_ZN2js16NewbornArrayPushEP9JSContextN2JS6HandleIP8JSObjectEERKNS2_5ValueE
	testb	%al, %al
	je	.LBB15_37
###SPA### trampoline_fmt_64
# %bb.30:                               #   in Loop: Header=BB15_17 Depth=1
	movq	40(%rsp), %rax
	movq	48(%rsp), %rcx
	movq	%rcx, (%rax)
	addq	$28, %r13
	cmpq	%r13, 16(%rsp)          # 8-byte Folded Reload
	jne	.LBB15_17
###SPA### trampoline_fmt_64
.LBB15_31:
###SPA## trampoline_fmt_64
	movq	80(%rsp), %rax
	movabsq	$-562949953421312, %rbp # imm = 0xFFFE000000000000
	orq	%rbp, %rax
	movq	%rax, 104(%rsp)
	leaq	.L.str.15(%rip), %rdx
	movl	$1, %r8d
	movq	%rbx, %rdi
	leaq	152(%rsp), %rsi
	leaq	104(%rsp), %rcx
	callq	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	testb	%al, %al
	je	.LBB15_38
###SPA### trampoline_fmt_64
# %bb.32:
	orq	152(%rsp), %rbp
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	%rbp, (%rax)
	movb	$1, %bpl
	jmp	.LBB15_39
.LBB15_33:
###SPA## trampoline_fmt_64
	movabsq	$-1688849860263936, %rax # imm = 0xFFFA000000000000
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	%rax, (%rcx)
	movb	$1, %bpl
	jmp	.LBB15_42
.LBB15_34:
###SPA## trampoline_fmt_64
	xorl	%ebp, %ebp
	jmp	.LBB15_41
.LBB15_35:
###SPA## trampoline_fmt_64
	xorl	%ebp, %ebp
	jmp	.LBB15_40
.LBB15_37:
###SPA## trampoline_fmt_64
	movq	40(%rsp), %rax
	movq	48(%rsp), %rcx
	movq	%rcx, (%rax)
.LBB15_38:
###SPA## trampoline_fmt_64
	xorl	%ebp, %ebp
.LBB15_39:
###SPA## trampoline_fmt_64
	movq	64(%rsp), %rax
	movq	72(%rsp), %rcx
	movq	%rcx, (%rax)
.LBB15_40:
###SPA## trampoline_fmt_64
	movq	88(%rsp), %rax
	movq	96(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	112(%rsp), %r14
	movq	120(%rsp), %rcx
.LBB15_41:
###SPA## trampoline_fmt_64
	movq	%rcx, (%r14)
.LBB15_42:
###SPA## trampoline_fmt_64
	movq	136(%rsp), %rax
	movq	144(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	%fs:40, %rax
	cmpq	160(%rsp), %rax
	jne	.LBB15_44
###SPA### trampoline_fmt_64
# %bb.43:
	movl	%ebp, %eax
	addq	$168, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB15_44:
	.cfi_def_cfa_offset 224
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end15:
	.size	_ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE, .Lfunc_end15-_ZNK2js4wasm6Module11extractCodeEP9JSContextNS0_4TierEN2JS13MutableHandleINS5_5ValueEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE # -- Begin function _ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE
	.globl	_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE,@function
_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE: # @_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r15
	movq	%rcx, (%rsp)            # 8-byte Spill
	movq	%rsi, 32(%rsp)          # 8-byte Spill
	movq	%rdi, %rbx
	movq	(%rdx), %rdi
	callq	_ZNK2js18WasmInstanceObject8instanceEv
	movq	%rbx, 8(%rsp)           # 8-byte Spill
	movq	104(%rbx), %r14
	testq	%r14, %r14
	je	.LBB16_10
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rax, %rbp
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	96(%rax), %r13
	shlq	$3, %r14
	xorl	%r12d, %r12d
	.p2align	4, 0x90
.LBB16_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r13,%r12), %rdx
	cmpl	$0, 8(%rdx)
	jne	.LBB16_9
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB16_2 Depth=1
	movl	24(%rdx), %esi
	movl	32(%rdx), %eax
	movl	40(%rdx), %edi
	movq	(%r15), %rcx
	movl	%edi, 24(%rsp)
	leaq	24(%rsp), %rdi
	testl	%esi, %esi
	je	.LBB16_6
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB16_2 Depth=1
	cmpl	$1, %esi
	jne	.LBB16_26
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB16_2 Depth=1
	leaq	(%rax,%rax,2), %rax
	leaq	(%rcx,%rax,8), %rdi
	addq	$8, %rdi
.LBB16_6:                               #   in Loop: Header=BB16_2 Depth=1
###SPA## trampoline_fmt_64
	movl	(%rdi), %ecx
	movl	12(%rdx), %esi
	movq	64(%rbp), %rax
	movq	(%rax,%rsi,8), %rax
	movl	116(%rax), %eax
	subl	%ecx, %eax
	jb	.LBB16_24
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB16_2 Depth=1
	movl	72(%rdx), %r9d
	cmpl	%r9d, %eax
	jb	.LBB16_24
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB16_2 Depth=1
	xorl	%ebx, %ebx
	xorl	%r8d, %r8d
	movq	%rbp, %rdi
                                        # kill: def $esi killed $esi killed $rsi
	callq	_ZN2js4wasm8Instance9initElemsEjRKNS0_11ElemSegmentEjjj
	testb	%al, %al
	je	.LBB16_25
###SPA### trampoline_fmt_64
.LBB16_9:                               #   in Loop: Header=BB16_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %r12
	cmpq	%r12, %r14
	jne	.LBB16_2
###SPA### trampoline_fmt_64
.LBB16_10:
###SPA## trampoline_fmt_64
	movq	(%rsp), %rbp            # 8-byte Reload
	movq	(%rbp), %rdi
	movb	$1, %bl
	testq	%rdi, %rdi
	je	.LBB16_25
###SPA### trampoline_fmt_64
# %bb.11:
	callq	_ZNK2js16WasmMemoryObject20volatileMemoryLengthEv
	movl	%eax, %r14d
	movq	(%rbp), %rdi
	callq	_ZNK2js16WasmMemoryObject6bufferEv
	movq	(%rax), %rcx
	leaq	_ZN2js17ArrayBufferObject6class_E(%rip), %rdx
	cmpq	%rdx, (%rcx)
	je	.LBB16_12
###SPA### trampoline_fmt_64
# %bb.13:
	movq	%rax, %rdi
	callq	_ZNK2js23SharedArrayBufferObject15rawBufferObjectEv
	addq	$80, %rax
	jmp	.LBB16_14
.LBB16_12:
###SPA## trampoline_fmt_64
	movq	%rax, %rdi
	callq	_ZNK2js17ArrayBufferObject17dataPointerSharedEv
.LBB16_14:
###SPA## trampoline_fmt_64
	movq	%rax, (%rsp)            # 8-byte Spill
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	80(%rax), %rbp
	testq	%rbp, %rbp
	je	.LBB16_25
###SPA### trampoline_fmt_64
# %bb.15:
	movq	72(%rax), %r12
	shlq	$3, %rbp
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB16_16:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r12,%r13), %rax
	cmpb	$0, 40(%rax)
	je	.LBB16_23
###SPA### trampoline_fmt_64
# %bb.17:                               #   in Loop: Header=BB16_16 Depth=1
	movl	8(%rax), %esi
	movl	16(%rax), %ecx
	movl	24(%rax), %edi
	movq	(%r15), %rdx
	movl	%edi, 16(%rsp)
	leaq	16(%rsp), %rdi
	testl	%esi, %esi
	je	.LBB16_20
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB16_16 Depth=1
	cmpl	$1, %esi
	jne	.LBB16_26
###SPA### trampoline_fmt_64
# %bb.19:                               #   in Loop: Header=BB16_16 Depth=1
	leaq	(%rcx,%rcx,2), %rcx
	leaq	(%rdx,%rcx,8), %rdi
	addq	$8, %rdi
.LBB16_20:                              #   in Loop: Header=BB16_16 Depth=1
###SPA## trampoline_fmt_64
	movl	(%rdi), %edi
	cmpl	%edi, %r14d
	jb	.LBB16_24
###SPA### trampoline_fmt_64
# %bb.21:                               #   in Loop: Header=BB16_16 Depth=1
	movl	56(%rax), %edx
	movl	%r14d, %ecx
	subl	%edi, %ecx
	cmpl	%edx, %ecx
	jb	.LBB16_24
###SPA### trampoline_fmt_64
# %bb.22:                               #   in Loop: Header=BB16_16 Depth=1
	addq	(%rsp), %rdi            # 8-byte Folded Reload
	movq	48(%rax), %rsi
	callq	memcpy@PLT
.LBB16_23:                              #   in Loop: Header=BB16_16 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %r13
	cmpq	%r13, %rbp
	jne	.LBB16_16
###SPA### trampoline_fmt_64
	jmp	.LBB16_25
.LBB16_24:
###SPA## trampoline_fmt_64
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$338, %ecx              # imm = 0x152
	xorl	%eax, %eax
	movq	32(%rsp), %rdi          # 8-byte Reload
	callq	_Z24JS_ReportErrorNumberUTF8P9JSContextPFPK19JSErrorFormatStringPvjES4_jz
.LBB16_25:
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB16_26:
	.cfi_def_cfa_offset 96
###SPA## trampoline_fmt_64
	leaq	.L.str.48(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$509, 0                 # imm = 0x1FD
	callq	abort@PLT
.Lfunc_end16:
	.size	_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE, .Lfunc_end16-_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE # -- Begin function _ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE
	.globl	_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE,@function
_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE: # @_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	movq	16(%rdi), %rdi
	movq	32(%rdi), %rax
	movb	$1, %bpl
	cmpl	$1, 16(%rax)
	je	.LBB17_24
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdx, %rbx
	movq	%rsi, %r14
	callq	_ZNK2js4wasm4Code10stableTierEv
	movl	%eax, %r13d
	movq	16(%r15), %rdi
	movl	%eax, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rax
	cmpq	$0, 408(%rax)
	je	.LBB17_24
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%r14, 8(%rsp)           # 8-byte Spill
	xorl	%r12d, %r12d
	movq	%rbx, 16(%rsp)          # 8-byte Spill
.LBB17_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB17_7 Depth 2
                                        #     Child Loop BB17_12 Depth 2
###SPA## trampoline_fmt_64
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rbp
	movq	%rbp, %rdi
	callq	_ZN2js4wasm22IsWasmExportedFunctionEP10JSFunction
	testb	%al, %al
	je	.LBB17_14
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB17_3 Depth=1
	movq	%rbp, %rdi
	callq	_ZN2js4wasm27ExportedFunctionToFuncIndexEP10JSFunction
	movl	%eax, %r14d
	movq	%rbp, %rdi
	callq	_ZN2js4wasm26ExportedFunctionToInstanceEP10JSFunction
	movq	%rax, %rbp
	movq	40(%rax), %rdi
	callq	_ZNK2js4wasm4Code10stableTierEv
	movq	40(%rbp), %rdi
	movl	%eax, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rdi
	xorl	%edx, %edx
	movl	%r14d, %esi
	callq	_ZNK2js4wasm12MetadataTier16lookupFuncExportEjPm
	movq	%rax, %r14
	movq	16(%r15), %rdi
	movl	%r13d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rax
	movq	400(%rax), %rax
	movq	8(%r14), %rdx
	leaq	(%r12,%r12,2), %rcx
	shlq	$6, %rcx
	cmpq	8(%rax,%rcx), %rdx
	jne	.LBB17_16
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB17_3 Depth=1
	testq	%rdx, %rdx
	je	.LBB17_9
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB17_3 Depth=1
	movq	(%r14), %rsi
	movq	(%rax,%rcx), %rdi
	shlq	$2, %rdx
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB17_7:                               #   Parent Loop BB17_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movl	(%rsi,%rbx), %ebp
	cmpl	(%rdi,%rbx), %ebp
	jne	.LBB17_16
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB17_7 Depth=2
	addq	$4, %rbx
	cmpq	%rbx, %rdx
	jne	.LBB17_7
###SPA### trampoline_fmt_64
.LBB17_9:                               #   in Loop: Header=BB17_3 Depth=1
###SPA## trampoline_fmt_64
	movq	96(%r14), %rdx
	cmpq	96(%rax,%rcx), %rdx
	jne	.LBB17_16
###SPA### trampoline_fmt_64
# %bb.10:                               #   in Loop: Header=BB17_3 Depth=1
	testq	%rdx, %rdx
	je	.LBB17_14
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB17_3 Depth=1
	movq	88(%r14), %rsi
	movq	88(%rax,%rcx), %rax
	shlq	$2, %rdx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB17_12:                              #   Parent Loop BB17_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movl	(%rsi,%rcx), %edi
	cmpl	(%rax,%rcx), %edi
	jne	.LBB17_16
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB17_12 Depth=2
	addq	$4, %rcx
	cmpq	%rcx, %rdx
	jne	.LBB17_12
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB17_14:                              #   in Loop: Header=BB17_3 Depth=1
###SPA## trampoline_fmt_64
	addq	$1, %r12
	movq	16(%r15), %rdi
	movl	%r13d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rax
	cmpq	408(%rax), %r12
	movq	16(%rsp), %rbx          # 8-byte Reload
	jb	.LBB17_3
###SPA### trampoline_fmt_64
# %bb.15:
	movb	$1, %bpl
	jmp	.LBB17_24
.LBB17_16:
###SPA## trampoline_fmt_64
	movq	32(%r15), %rcx
	testq	%rcx, %rcx
	je	.LBB17_22
###SPA### trampoline_fmt_64
# %bb.17:
	movq	24(%r15), %rax
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,2), %rdx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB17_18:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpl	$0, 16(%rax,%rcx)
	je	.LBB17_19
###SPA### trampoline_fmt_64
# %bb.21:                               #   in Loop: Header=BB17_18 Depth=1
	addq	$24, %rcx
	cmpq	%rcx, %rdx
	jne	.LBB17_18
###SPA### trampoline_fmt_64
	jmp	.LBB17_22
	.p2align	4, 0x90
.LBB17_19:                              #   in Loop: Header=BB17_18 Depth=1
###SPA## trampoline_fmt_64
	testl	%r12d, %r12d
	je	.LBB17_23
###SPA### trampoline_fmt_64
# %bb.20:                               #   in Loop: Header=BB17_18 Depth=1
	addl	$-1, %r12d
	addq	$24, %rcx
	cmpq	%rcx, %rdx
	jne	.LBB17_18
###SPA### trampoline_fmt_64
.LBB17_22:
###SPA## trampoline_fmt_64
	leaq	.L.str.49(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$645, 0                 # imm = 0x285
	callq	abort@PLT
.LBB17_23:
###SPA## trampoline_fmt_64
	movq	(%rax,%rcx), %r8
	movq	8(%rax,%rcx), %r9
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	xorl	%ebp, %ebp
	movl	$0, %edx
	movl	$322, %ecx              # imm = 0x142
	xorl	%eax, %eax
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_Z24JS_ReportErrorNumberUTF8P9JSContextPFPK19JSErrorFormatStringPvjES4_jz
.LBB17_24:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end17:
	.size	_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE, .Lfunc_end17-_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE # -- Begin function _ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE
	.globl	_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE,@function
_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE: # @_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%fs:40, %rax
	movq	%rax, 112(%rsp)
	movq	16(%rdi), %rax
	movq	32(%rax), %rax
	movl	20(%rax), %r12d
	testl	%r12d, %r12d
	je	.LBB18_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rdx, %r15
	movq	%rsi, %rbp
	movq	%rdi, %r14
	movq	24(%rax), %r13
	movq	40(%rax), %rdx
	movb	48(%rax), %bl
	movb	55(%rax), %cl
	movb	%cl, 110(%rsp)
	movzwl	53(%rax), %ecx
	movw	%cx, 108(%rsp)
	movl	49(%rax), %eax
	movl	%eax, 104(%rsp)
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB18_24
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rbp, 8(%rsp)           # 8-byte Spill
	movb	%bl, 7(%rsp)            # 1-byte Spill
	movq	%rdx, 16(%rsp)          # 8-byte Spill
	callq	_ZNK2js16WasmMemoryObject20volatileMemoryLengthEv
	movl	%eax, %ebx
	movq	(%r15), %rdi
	callq	_ZNK2js16WasmMemoryObject6bufferEv
	leaq	72(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN2js22WasmArrayBufferMaxSizeEPKNS_28ArrayBufferObjectMaybeSharedE
	cmpb	$0, 76(%rsp)
	je	.LBB18_4
###SPA### trampoline_fmt_64
# %bb.5:
	movl	72(%rsp), %ecx
	movzbl	%cl, %eax
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	andl	$-256, %ecx
	movb	$0, 76(%rsp)
	movb	$1, %dl
	movq	16(%r14), %rsi
	movq	32(%rsi), %rsi
	cmpl	$1, 16(%rsi)
	je	.LBB18_14
###SPA### trampoline_fmt_64
.LBB18_7:
###SPA## trampoline_fmt_64
	movl	%ebx, %esi
	cmpq	%rsi, %r13
	ja	.LBB18_9
###SPA### trampoline_fmt_64
# %bb.8:
	cmpb	$0, 7(%rsp)             # 1-byte Folded Reload
	movl	$4294967295, %edi       # imm = 0xFFFFFFFF
	cmovneq	16(%rsp), %rdi          # 8-byte Folded Reload
	cmpq	%rsi, %rdi
	jae	.LBB18_11
###SPA### trampoline_fmt_64
.LBB18_9:
###SPA## trampoline_fmt_64
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	leaq	.L.str.16(%rip), %r8
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$323, %ecx              # imm = 0x143
.LBB18_10:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_Z24JS_ReportErrorNumberUTF8P9JSContextPFPK19JSErrorFormatStringPvjES4_jz
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB18_33
###SPA### trampoline_fmt_64
	jmp	.LBB18_34
.LBB18_1:
###SPA## trampoline_fmt_64
	movb	$1, %bl
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB18_33
###SPA### trampoline_fmt_64
	jmp	.LBB18_34
.LBB18_24:
###SPA## trampoline_fmt_64
	testq	$-2147483648, %r13      # imm = 0x80000000
	je	.LBB18_26
###SPA### trampoline_fmt_64
# %bb.25:
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$342, %ecx              # imm = 0x156
	xorl	%eax, %eax
	movq	%rbp, %rdi
	callq	_Z24JS_ReportErrorNumberUTF8P9JSContextPFPK19JSErrorFormatStringPvjES4_jz
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB18_33
###SPA### trampoline_fmt_64
	jmp	.LBB18_34
.LBB18_4:
###SPA## trampoline_fmt_64
	xorl	%edx, %edx
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	movq	16(%r14), %rsi
	movq	32(%rsi), %rsi
	cmpl	$1, 16(%rsi)
	jne	.LBB18_7
###SPA### trampoline_fmt_64
.LBB18_14:
###SPA## trampoline_fmt_64
	movq	(%r15), %rdi
	callq	_ZNK2js16WasmMemoryObject8isSharedEv
	testb	%al, %al
	je	.LBB18_20
###SPA### trampoline_fmt_64
# %bb.15:
	movq	8(%rsp), %rbp           # 8-byte Reload
	movq	152(%rbp), %rdi
	addq	$24, %rdi
	callq	_ZNK2JS20RealmCreationOptions32getSharedMemoryAndAtomicsEnabledEv
	testb	%al, %al
	je	.LBB18_16
###SPA### trampoline_fmt_64
# %bb.22:
	cmpl	$2, %r12d
	je	.LBB18_28
###SPA### trampoline_fmt_64
# %bb.23:
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$326, %ecx              # imm = 0x146
	jmp	.LBB18_17
.LBB18_26:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	cmpl	$2, %r12d
	sete	%al
	leaq	64(%rsp), %rsi
	movq	$0, 64(%rsp)
	leaq	24(%rbp), %r12
	movq	%r12, 48(%rsp)
	movq	24(%rbp), %rcx
	movq	%rcx, 56(%rsp)
	leaq	48(%rsp), %rcx
	movq	%rcx, 24(%rbp)
	movq	%r13, 72(%rsp)
	movq	%rsi, %r13
	movq	%rdx, 80(%rsp)
	movb	%bl, 88(%rsp)
	movl	104(%rsp), %ecx
	movl	%ecx, 89(%rsp)
	movzwl	108(%rsp), %ecx
	movw	%cx, 93(%rsp)
	movb	110(%rsp), %cl
	movb	%cl, 95(%rsp)
	movl	%eax, 96(%rsp)
	leaq	72(%rsp), %rsi
	movq	%rbp, %rdi
	movq	%r13, %rdx
	callq	_ZN2js16CreateWasmBufferEP9JSContextRKNS_4wasm6LimitsEN2JS13MutableHandleIPNS_28ArrayBufferObjectMaybeSharedEEE
	testb	%al, %al
	je	.LBB18_30
###SPA### trampoline_fmt_64
# %bb.27:
	movq	152(%rbp), %rax
	movq	88(%rax), %rax
	movq	8(%rax), %rcx
	movq	16(%rax), %rax
	movzbl	19(%rcx), %ecx
	andl	$31, %ecx
	movl	$162, %edx
	subl	%ecx, %edx
	movabsq	$-562949953421312, %rcx # imm = 0xFFFE000000000000
	xorq	(%rax,%rdx,8), %rcx
	leaq	40(%rsp), %rdx
	movq	%rcx, 40(%rsp)
	movq	%r12, 24(%rsp)
	movq	24(%rbp), %rax
	movq	%rax, 32(%rsp)
	leaq	24(%rsp), %rax
	movq	%rax, 24(%rbp)
	movq	%rbp, %rdi
	movq	%r13, %rsi
	callq	_ZN2js16WasmMemoryObject6createEP9JSContextN2JS6HandleIPNS_28ArrayBufferObjectMaybeSharedEEENS4_IP8JSObjectEE
	movq	%rax, (%r15)
	movq	24(%rsp), %rcx
	movq	32(%rsp), %rdx
	movq	%rdx, (%rcx)
	movq	48(%rsp), %rcx
	movq	56(%rsp), %rdx
	movq	%rdx, (%rcx)
	testq	%rax, %rax
	jne	.LBB18_28
###SPA### trampoline_fmt_64
	jmp	.LBB18_31
.LBB18_20:
###SPA## trampoline_fmt_64
	cmpl	$2, %r12d
	movq	8(%rsp), %rdi           # 8-byte Reload
	jne	.LBB18_28
###SPA### trampoline_fmt_64
# %bb.21:
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$325, %ecx              # imm = 0x145
	xorl	%eax, %eax
	callq	_Z25JS_ReportErrorNumberASCIIP9JSContextPFPK19JSErrorFormatStringPvjES4_jz
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB18_33
###SPA### trampoline_fmt_64
	jmp	.LBB18_34
.LBB18_28:
###SPA## trampoline_fmt_64
	movq	(%r15), %rdi
	callq	_ZNK2js16WasmMemoryObject6isHugeEv
	movzbl	%al, %eax
	movq	16(%r14), %rcx
	movq	32(%rcx), %rcx
	movzbl	74(%rcx), %ecx
	movb	$1, %bl
	cmpl	%ecx, %eax
	jne	.LBB18_29
###SPA### trampoline_fmt_64
# %bb.32:
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	jne	.LBB18_34
###SPA### trampoline_fmt_64
.LBB18_33:
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB18_30:
	.cfi_def_cfa_offset 176
###SPA## trampoline_fmt_64
	movq	48(%rsp), %rax
	movq	56(%rsp), %rcx
	movq	%rcx, (%rax)
.LBB18_31:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB18_33
###SPA### trampoline_fmt_64
.LBB18_34:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB18_16:
###SPA## trampoline_fmt_64
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$328, %ecx              # imm = 0x148
.LBB18_17:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%rbp, %rdi
	callq	_Z25JS_ReportErrorNumberASCIIP9JSContextPFPK19JSErrorFormatStringPvjES4_jz
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB18_33
###SPA### trampoline_fmt_64
	jmp	.LBB18_34
.LBB18_11:
###SPA## trampoline_fmt_64
	testb	%dl, %dl
	je	.LBB18_18
###SPA### trampoline_fmt_64
# %bb.12:
	cmpb	$0, 7(%rsp)             # 1-byte Folded Reload
	je	.LBB18_14
###SPA### trampoline_fmt_64
# %bb.13:
	orq	%rax, %rcx
	cmpq	16(%rsp), %rcx          # 8-byte Folded Reload
	ja	.LBB18_19
###SPA### trampoline_fmt_64
	jmp	.LBB18_14
.LBB18_18:
###SPA## trampoline_fmt_64
	cmpb	$0, 7(%rsp)             # 1-byte Folded Reload
	je	.LBB18_14
###SPA### trampoline_fmt_64
.LBB18_19:
###SPA## trampoline_fmt_64
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	leaq	.L.str.16(%rip), %r8
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$324, %ecx              # imm = 0x144
	jmp	.LBB18_10
.LBB18_29:
###SPA## trampoline_fmt_64
	leaq	.L.str.17(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$792, 0                 # imm = 0x318
	callq	abort@PLT
.Lfunc_end18:
	.size	_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE, .Lfunc_end18-_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE # -- Begin function _ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE
	.globl	_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE,@function
_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE: # @_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movq	%r8, %r12
	movq	%rcx, %r15
	movq	%rdx, %rbp
	movq	%rsi, (%rsp)            # 8-byte Spill
	movq	%rdi, %r14
	movq	(%rcx), %rdi
	callq	_ZNK2js15WasmTableObject5tableEv
	movq	%rax, %r13
	movq	16(%r14), %rax
	movq	32(%rax), %rax
	cmpl	$1, 16(%rax)
	jne	.LBB19_1
###SPA### trampoline_fmt_64
.LBB19_8:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	cmpq	16(%rbx), %rax
	jne	.LBB19_11
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB19_17
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rbx), %rax
.LBB19_11:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movq	%r13, (%rcx,%rax,8)
	lock		addq	$1, (%r13)
	addq	$1, 8(%rbx)
	movq	8(%r12), %rax
	cmpq	16(%r12), %rax
	jne	.LBB19_14
###SPA### trampoline_fmt_64
# %bb.12:
	movl	$1, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB19_17
###SPA### trampoline_fmt_64
# %bb.13:
	movq	8(%r12), %rax
.LBB19_14:
###SPA## trampoline_fmt_64
	movq	(%r12), %rcx
	movq	(%r15), %rdx
	movq	%rdx, (%rcx,%rax,8)
	addq	$1, 8(%r12)
	movb	$1, %bl
	jmp	.LBB19_18
.LBB19_1:
###SPA## trampoline_fmt_64
	movl	116(%r13), %edx
	cmpl	12(%rbp), %edx
	jb	.LBB19_3
###SPA### trampoline_fmt_64
# %bb.2:
	movb	20(%rbp), %cl
	movl	16(%rbp), %eax
	cmpb	$1, %cl
	sbbl	%esi, %esi
	orl	%eax, %esi
	cmpl	%edx, %esi
	jae	.LBB19_5
###SPA### trampoline_fmt_64
.LBB19_3:
###SPA## trampoline_fmt_64
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	leaq	.L.str.18(%rip), %r8
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$323, %ecx              # imm = 0x143
.LBB19_4:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	(%rsp), %rdi            # 8-byte Reload
	callq	_Z24JS_ReportErrorNumberUTF8P9JSContextPFPK19JSErrorFormatStringPvjES4_jz
.LBB19_18:
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB19_5:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movq	120(%r13), %rdx
	movabsq	$1095216660480, %rsi    # imm = 0xFF00000000
	testq	%rsi, %rdx
	je	.LBB19_15
###SPA### trampoline_fmt_64
# %bb.6:
	testb	%cl, %cl
	je	.LBB19_8
###SPA### trampoline_fmt_64
# %bb.7:
	cmpl	%edx, %eax
	jb	.LBB19_16
###SPA### trampoline_fmt_64
	jmp	.LBB19_8
.LBB19_15:
###SPA## trampoline_fmt_64
	testb	%cl, %cl
	je	.LBB19_8
###SPA### trampoline_fmt_64
.LBB19_16:
###SPA## trampoline_fmt_64
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	leaq	.L.str.18(%rip), %r8
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	movl	$324, %ecx              # imm = 0x144
	jmp	.LBB19_4
.LBB19_17:
###SPA## trampoline_fmt_64
	movq	(%rsp), %rdi            # 8-byte Reload
	callq	_ZN2js17ReportOutOfMemoryEP9JSContext
	xorl	%ebx, %ebx
	jmp	.LBB19_18
.Lfunc_end19:
	.size	_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE, .Lfunc_end19-_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE # -- Begin function _ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE
	.globl	_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE,@function
_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE: # @_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 64(%rsp)
	cmpl	$10000001, 12(%rdx)     # imm = 0x989681
	jb	.LBB20_2
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	_ZN2js15GetErrorMessageEPvj(%rip), %rsi
	xorl	%r14d, %r14d
	xorl	%edx, %edx
	movl	$343, %ecx              # imm = 0x157
	xorl	%eax, %eax
	movq	%rbx, %rdi
	callq	_Z24JS_ReportErrorNumberUTF8P9JSContextPFPK19JSErrorFormatStringPvjES4_jz
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	je	.LBB20_22
###SPA### trampoline_fmt_64
.LBB20_25:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB20_2:
###SPA## trampoline_fmt_64
	movq	%r8, %r14
	movq	%rcx, %r12
	movq	$0, 56(%rsp)
	leaq	24(%rbx), %rax
	movq	%rax, 40(%rsp)
	movq	24(%rbx), %rcx
	movq	%rcx, 48(%rsp)
	leaq	40(%rsp), %r9
	movq	%r9, 24(%rbx)
	cmpb	$0, 4(%rdx)
	je	.LBB20_5
###SPA### trampoline_fmt_64
# %bb.3:
	movq	152(%rbx), %rsi
	movq	88(%rsi), %rsi
	movq	8(%rsi), %rdi
	movq	16(%rsi), %rsi
	movzbl	19(%rdi), %edi
	andl	$31, %edi
	movl	$163, %ecx
	subl	%edi, %ecx
	movabsq	$-562949953421312, %rdi # imm = 0xFFFE000000000000
	xorq	(%rsi,%rcx,8), %rdi
	leaq	32(%rsp), %r8
	movq	%rdi, 32(%rsp)
	movq	%rax, 16(%rsp)
	movq	%r9, 24(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 24(%rbx)
	movl	12(%rdx), %esi
	movq	16(%rdx), %rax
	movq	%rax, 8(%rsp)
	movl	(%rdx), %ecx
	leaq	8(%rsp), %rdx
	movq	%rbx, %rdi
	callq	_ZN2js15WasmTableObject6createEP9JSContextjN7mozilla5MaybeIjEENS_4wasm9TableKindEN2JS6HandleIP8JSObjectEE
	movq	%rax, 56(%rsp)
	testq	%rax, %rax
	je	.LBB20_15
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rax, %rdi
	callq	_ZNK2js15WasmTableObject5tableEv
	movq	%rax, %r15
	lock		addq	$1, (%rax)
	movq	16(%rsp), %rax
	movq	24(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	8(%r12), %rax
	cmpq	16(%r12), %rax
	je	.LBB20_7
###SPA### trampoline_fmt_64
	jmp	.LBB20_9
.LBB20_5:
###SPA## trampoline_fmt_64
	leaq	_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue(%rip), %rcx
	leaq	16(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN2js4wasm5Table6createEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEE
	movq	16(%rsp), %r15
	testq	%r15, %r15
	je	.LBB20_23
###SPA### trampoline_fmt_64
# %bb.6:
	movq	8(%r12), %rax
	cmpq	16(%r12), %rax
	jne	.LBB20_9
###SPA### trampoline_fmt_64
.LBB20_7:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB20_24
###SPA### trampoline_fmt_64
# %bb.8:
	movq	8(%r12), %rax
.LBB20_9:
###SPA## trampoline_fmt_64
	movq	(%r12), %rcx
	movq	56(%rsp), %rdx
	movq	%rdx, (%rcx,%rax,8)
	addq	$1, 8(%r12)
	movq	8(%r14), %rax
	cmpq	%rax, 16(%r14)
	jne	.LBB20_12
###SPA### trampoline_fmt_64
# %bb.10:
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB20_24
###SPA### trampoline_fmt_64
# %bb.11:
	movq	8(%r14), %rax
.LBB20_12:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 8(%r14)
	movq	(%r14), %rcx
	movq	%r15, (%rcx,%rax,8)
	movb	$1, %r14b
	testq	%r15, %r15
	je	.LBB20_14
###SPA### trampoline_fmt_64
# %bb.13:
	lock		addq	$1, (%r15)
	jmp	.LBB20_18
.LBB20_14:
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
	jmp	.LBB20_18
.LBB20_15:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax
	movq	24(%rsp), %rcx
	movq	%rcx, (%rax)
.LBB20_16:
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
.LBB20_17:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
.LBB20_18:
###SPA## trampoline_fmt_64
	movq	40(%rsp), %rax
	movq	48(%rsp), %rcx
	movq	%rcx, (%rax)
	testq	%r15, %r15
	je	.LBB20_21
###SPA### trampoline_fmt_64
# %bb.19:
	lock		subq	$1, (%r15)
	jne	.LBB20_21
###SPA### trampoline_fmt_64
# %bb.20:
	movq	%r15, %rdi
	callq	_ZN2js4wasm5TableD2Ev
	movq	%r15, %rdi
	callq	free@PLT
.LBB20_21:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	jne	.LBB20_25
###SPA### trampoline_fmt_64
.LBB20_22:
###SPA## trampoline_fmt_64
	movl	%r14d, %eax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB20_23:
	.cfi_def_cfa_offset 112
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN2js17ReportOutOfMemoryEP9JSContext
	jmp	.LBB20_16
.LBB20_24:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN2js17ReportOutOfMemoryEP9JSContext
	jmp	.LBB20_17
.Lfunc_end20:
	.size	_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE, .Lfunc_end20-_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE # -- Begin function _ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE
	.globl	_ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE,@function
_ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE: # @_ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, (%rsp)             # 8-byte Spill
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%fs:40, %rax
	movq	%rax, 48(%rsp)
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	movq	16(%rdi), %rax
	movq	32(%rax), %rcx
	movq	136(%rcx), %rdx
	movb	$1, %al
	testq	%rdx, %rdx
	je	.LBB21_7
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %rbp
	movq	128(%rcx), %r14
	leaq	24(%rsi), %rax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	shlq	$3, %rdx
	leaq	(%rdx,%rdx,2), %r13
	xorl	%r15d, %r15d
	.p2align	4, 0x90
.LBB21_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	%r15d, %r15d
	cmpq	%r15, 8(%rbx)
	jbe	.LBB21_4
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB21_2 Depth=1
	movq	(%rbx), %rax
	movq	(%rax,%r15,8), %rax
	movq	%rax, 40(%rsp)
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	%rax, 24(%rsp)
	movq	24(%rbp), %rax
	movq	%rax, 32(%rsp)
	leaq	24(%rsp), %rax
	movq	%rax, 24(%rbp)
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	%rbp, %rsi
	movq	%r14, %rdx
	leaq	40(%rsp), %rcx
	movq	%r12, %r8
	movq	(%rsp), %r9             # 8-byte Reload
	callq	_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE
	movq	24(%rsp), %rcx
	movq	32(%rsp), %rdx
	movq	%rdx, (%rcx)
	testb	%al, %al
	je	.LBB21_10
###SPA### trampoline_fmt_64
.LBB21_5:                               #   in Loop: Header=BB21_2 Depth=1
###SPA## trampoline_fmt_64
	addl	$1, %r15d
	addq	$24, %r14
	addq	$-24, %r13
	jne	.LBB21_2
###SPA### trampoline_fmt_64
	jmp	.LBB21_6
	.p2align	4, 0x90
.LBB21_4:                               #   in Loop: Header=BB21_2 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %rsi
	movq	%r14, %rdx
	movq	%r12, %rcx
	movq	(%rsp), %r8             # 8-byte Reload
	callq	_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE
	testb	%al, %al
	jne	.LBB21_5
###SPA### trampoline_fmt_64
.LBB21_10:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	48(%rsp), %rcx
	je	.LBB21_8
###SPA### trampoline_fmt_64
.LBB21_11:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB21_6:
###SPA## trampoline_fmt_64
	movb	$1, %al
.LBB21_7:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rcx
	cmpq	48(%rsp), %rcx
	jne	.LBB21_11
###SPA### trampoline_fmt_64
.LBB21_8:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end21:
	.size	_ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE, .Lfunc_end21-_ZNK2js4wasm6Module17instantiateTablesEP9JSContextRKN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEENS4_13MutableHandleIS9_EEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ES8_EE
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE
.LCPI22_0:
	.zero	16
	.section	.text._ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE
	.globl	_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE,@function
_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE: # @_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$152, %rsp
	.cfi_def_cfa_offset 208
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, 32(%rsp)          # 8-byte Spill
	movq	%fs:40, %rax
	movq	%rax, 144(%rsp)
	movq	56(%rdi), %r14
	movb	$1, %al
	testq	%r14, %r14
	je	.LBB22_36
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rcx, %rbp
	movq	%rsi, %r12
	movq	48(%rdi), %rbx
	movq	16(%rdi), %rax
	movq	32(%rax), %r15
	leaq	104(%rsi), %rax
	movq	%rax, 40(%rsp)          # 8-byte Spill
	leaq	24(%rsi), %rax
	movq	%rax, 24(%rsp)          # 8-byte Spill
	shlq	$4, %r14
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	movq	%r15, 8(%rsp)           # 8-byte Spill
	jmp	.LBB22_2
.LBB22_38:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	callq	_ZN2js17ReportOutOfMemoryEP9JSContext
	xorl	%eax, %eax
	movq	8(%rsp), %r15           # 8-byte Reload
	jmp	.LBB22_32
	.p2align	4, 0x90
.LBB22_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpl	$3, 8(%rbx)
	jne	.LBB22_34
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB22_2 Depth=1
	movq	%rbx, %rdi
	callq	_ZNK2js4wasm6Export11globalIndexEv
	movl	%eax, %r13d
	movq	104(%r15), %rax
	cmpq	%r13, 8(%rbp)
	jbe	.LBB22_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB22_2 Depth=1
	movq	(%rbp), %rcx
	cmpq	$0, (%rcx,%r13,8)
	jne	.LBB22_34
###SPA### trampoline_fmt_64
.LBB22_5:                               #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	leaq	(,%r13,2), %rdx
	addq	%r13, %rdx
	movq	%rdx, %rcx
	shlq	$4, %rcx
	leaq	(%rax,%rcx), %rsi
	leaq	_ZTVN2js15RootedTraceableINS_4wasm3ValEEE+16(%rip), %rdi
	movq	%rdi, 112(%rsp)
	movl	$255, 120(%rsp)
	movl	$0, 128(%rsp)
	movq	40(%rsp), %rbp          # 8-byte Reload
	movq	%rbp, 96(%rsp)
	movq	(%rbp), %rdi
	movq	%rdi, 104(%rsp)
	leaq	96(%rsp), %rdi
	movq	%rdi, (%rbp)
	movl	40(%rax,%rcx), %edi
	cmpl	$2, %edi
	je	.LBB22_9
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB22_2 Depth=1
	cmpl	$1, %edi
	je	.LBB22_15
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB22_2 Depth=1
	testl	%edi, %edi
	jne	.LBB22_16
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB22_2 Depth=1
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	(%rsi), %rsi
	movups	(%rsi,%rdx,8), %xmm0
	movq	16(%rsi,%rdx,8), %rdx
	leaq	120(%rsp), %rsi
	movq	%rdx, 16(%rsi)
	movups	%xmm0, (%rsi)
	jmp	.LBB22_19
.LBB22_15:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movl	(%rsi), %edx
	jmp	.LBB22_18
.LBB22_9:                               #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movl	(%rsi), %edx
	cmpl	$2, %edx
	je	.LBB22_10
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB22_2 Depth=1
	cmpl	$1, %edx
	je	.LBB22_17
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB22_2 Depth=1
	testl	%edx, %edx
	jne	.LBB22_14
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB22_2 Depth=1
	movl	8(%rax,%rcx), %edx
	jmp	.LBB22_18
.LBB22_17:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movl	12(%rax,%rcx), %edx
	jmp	.LBB22_18
.LBB22_10:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movl	$1073741680, %edx       # imm = 0x3FFFFF70
	.p2align	4, 0x90
.LBB22_18:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movl	%edx, 120(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 128(%rsp)
.LBB22_19:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	leaq	(%rax,%rcx), %rdx
	addq	$40, %rdx
	movq	152(%r12), %rsi
	movq	88(%rsi), %rsi
	movq	8(%rsi), %rdi
	movq	16(%rsi), %rsi
	movzbl	19(%rdi), %edi
	andl	$31, %edi
	movl	$164, %ebp
	subl	%edi, %ebp
	movq	(%rsi,%rbp,8), %rsi
	movabsq	$-562949953421312, %rdi # imm = 0xFFFE000000000000
	xorq	%rdi, %rsi
	movq	%rsi, 88(%rsp)
	movq	24(%rsp), %rsi          # 8-byte Reload
	movq	%rsi, 72(%rsp)
	movq	24(%r12), %rsi
	movq	%rsi, 80(%rsp)
	leaq	72(%rsp), %rsi
	movq	%rsi, 24(%r12)
	cmpl	$1, (%rdx)
	jne	.LBB22_21
###SPA### trampoline_fmt_64
# %bb.20:                               #   in Loop: Header=BB22_2 Depth=1
	xorl	%eax, %eax
	jmp	.LBB22_22
.LBB22_21:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$0, 36(%rax,%rcx)
	setne	%al
.LBB22_22:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rbp          # 8-byte Reload
	movzbl	%al, %edx
	movq	%r12, %rdi
	leaq	120(%rsp), %rsi
	leaq	88(%rsp), %rcx
	callq	_ZN2js16WasmGlobalObject6createEP9JSContextN2JS6HandleINS_4wasm3ValEEEbNS4_IP8JSObjectEE
	movq	%rax, 64(%rsp)
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, 48(%rsp)
	movq	24(%r12), %rcx
	movq	%rcx, 56(%rsp)
	leaq	48(%rsp), %rcx
	movq	%rcx, 24(%r12)
	testq	%rax, %rax
	je	.LBB22_23
###SPA### trampoline_fmt_64
# %bb.24:                               #   in Loop: Header=BB22_2 Depth=1
	movq	8(%rbp), %rdi
	cmpq	%r13, %rdi
	ja	.LBB22_31
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB22_2 Depth=1
	leaq	1(%r13), %r15
	subq	%rdi, %r15
	movq	16(%rbp), %rax
	subq	%rdi, %rax
	cmpq	%r15, %rax
	jae	.LBB22_28
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB22_2 Depth=1
	movq	%rbp, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB22_38
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB22_2 Depth=1
	movq	8(%rbp), %rdi
.LBB22_28:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	testq	%r15, %r15
	jle	.LBB22_30
###SPA### trampoline_fmt_64
# %bb.29:                               #   in Loop: Header=BB22_2 Depth=1
	shlq	$3, %rdi
	addq	(%rbp), %rdi
	leaq	(%rdi,%r15,8), %rax
	movq	%rdi, %rcx
	notq	%rcx
	leaq	(%rcx,%rax), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	movq	8(%rbp), %rdi
.LBB22_30:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	addq	%r15, %rdi
	movq	%rdi, 8(%rbp)
	movq	64(%rsp), %rax
	movq	8(%rsp), %r15           # 8-byte Reload
.LBB22_31:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rcx
	movq	%rax, (%rcx,%r13,8)
	movb	$1, %al
	jmp	.LBB22_32
.LBB22_23:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
.LBB22_32:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	movq	48(%rsp), %rcx
	movq	56(%rsp), %rdx
	movq	%rdx, (%rcx)
	movq	72(%rsp), %rcx
	movq	80(%rsp), %rdx
	movq	%rdx, (%rcx)
	movq	96(%rsp), %rcx
	movq	104(%rsp), %rdx
	movq	%rdx, (%rcx)
	testb	%al, %al
	je	.LBB22_33
###SPA### trampoline_fmt_64
.LBB22_34:                              #   in Loop: Header=BB22_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$16, %rbx
	addq	$-16, %r14
	jne	.LBB22_2
###SPA### trampoline_fmt_64
# %bb.35:
	movb	$1, %al
.LBB22_36:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rcx
	cmpq	144(%rsp), %rcx
	jne	.LBB22_37
###SPA### trampoline_fmt_64
.LBB22_39:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$152, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB22_33:
	.cfi_def_cfa_offset 208
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	144(%rsp), %rcx
	je	.LBB22_39
###SPA### trampoline_fmt_64
.LBB22_37:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB22_16:
###SPA## trampoline_fmt_64
	leaq	.L.str.50(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1949, 0                # imm = 0x79D
	callq	abort@PLT
.LBB22_14:
###SPA## trampoline_fmt_64
	leaq	.L.str.51(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1753, 0                # imm = 0x6D9
	callq	abort@PLT
.Lfunc_end22:
	.size	_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE, .Lfunc_end22-_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZNK2js4wasm6Module19getDebugEnabledCodeEv
.LCPI23_0:
	.zero	16
	.section	.text._ZNK2js4wasm6Module19getDebugEnabledCodeEv,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module19getDebugEnabledCodeEv
	.globl	_ZNK2js4wasm6Module19getDebugEnabledCodeEv
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module19getDebugEnabledCodeEv,@function
_ZNK2js4wasm6Module19getDebugEnabledCodeEv: # @_ZNK2js4wasm6Module19getDebugEnabledCodeEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 112(%rsp)
	movl	$1, %ecx
	xorl	%eax, %eax
	lock		cmpxchgl	%ecx, 144(%rsi)
	jne	.LBB23_3
###SPA### trampoline_fmt_64
# %bb.1:
	movq	16(%rbp), %rax
	movq	%rax, (%r14)
	testq	%rax, %rax
	je	.LBB23_60
###SPA### trampoline_fmt_64
# %bb.2:
	lock		addq	$1, (%rax)
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB23_63
###SPA### trampoline_fmt_64
	jmp	.LBB23_61
.LBB23_3:
###SPA## trampoline_fmt_64
	movq	152(%rbp), %rdx
	movq	160(%rbp), %rcx
	leaq	96(%rsp), %rdi
	xorl	%esi, %esi
	callq	_ZN2js4wasm13ModuleSegment6createENS0_4TierERKN7mozilla6VectorIhLm0ENS_17SystemAllocPolicyEEERKNS0_8LinkDataE
	cmpq	$0, 96(%rsp)
	je	.LBB23_4
###SPA### trampoline_fmt_64
# %bb.5:
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$536, %esi              # imm = 0x218
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB23_6
###SPA### trampoline_fmt_64
# %bb.9:
	movq	%rax, %rbx
	movl	$0, (%rax)
	movl	$8, %eax
	movq	%rax, %xmm0
	pslldq	$8, %xmm0               # xmm0 = zero,zero,zero,zero,zero,zero,zero,zero,xmm0[0,1,2,3,4,5,6,7]
	movdqu	%xmm0, 16(%rbx)
	leaq	32(%rbx), %rax
	movq	%rax, 8(%rbx)
	xorps	%xmm1, %xmm1
	movups	%xmm1, 72(%rbx)
	movq	$28, 64(%rbx)
	movups	%xmm1, 96(%rbx)
	movq	$8, 88(%rbx)
	movups	%xmm1, 120(%rbx)
	movq	$8, 112(%rbx)
	movups	%xmm1, 144(%rbx)
	movq	$8, 136(%rbx)
	movups	%xmm1, 168(%rbx)
	movq	$8, 160(%rbx)
	movups	%xmm1, 192(%rbx)
	movq	$8, 184(%rbx)
	movups	%xmm1, 216(%rbx)
	movq	$8, 208(%rbx)
	movups	%xmm1, 240(%rbx)
	movq	$8, 232(%rbx)
	movups	%xmm1, 264(%rbx)
	movq	$8, 256(%rbx)
	movups	%xmm1, 288(%rbx)
	movq	$8, 280(%rbx)
	movups	%xmm1, 312(%rbx)
	movq	$8, 304(%rbx)
	movups	%xmm1, 336(%rbx)
	movq	$8, 328(%rbx)
	movups	%xmm1, 360(%rbx)
	movq	$8, 352(%rbx)
	movups	%xmm1, 384(%rbx)
	movq	$8, 376(%rbx)
	movups	%xmm1, 408(%rbx)
	movq	$192, 400(%rbx)
	movups	%xmm1, 432(%rbx)
	movq	$192, 424(%rbx)
	movb	$0, 448(%rbx)
	movups	%xmm1, 464(%rbx)
	movq	$16, 456(%rbx)
	movdqu	%xmm0, 488(%rbx)
	movq	%rbx, %rax
	addq	$504, %rax              # imm = 0x1F8
	movq	%rax, 480(%rbx)
	movq	16(%rbp), %rdi
	xorl	%esi, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rsi
	movq	%rbx, %rdi
	callq	_ZN2js4wasm12MetadataTier5cloneERKS1_
	testb	%al, %al
	je	.LBB23_7
###SPA### trampoline_fmt_64
# %bb.10:
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$120, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB23_7
###SPA### trampoline_fmt_64
# %bb.11:
	movq	%rax, %r15
	movq	96(%rsp), %rax
	movq	$0, 96(%rsp)
	movq	$0, (%r15)
	movq	%rbx, 8(%r15)
	movq	%rax, 16(%r15)
	movq	%r15, %rdi
	addq	$24, %rdi
	callq	_ZN7mozilla6detail9MutexImplC2Ev@PLT
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 72(%r15)
	movq	$8, 64(%r15)
	movdqu	%xmm0, 96(%r15)
	movq	$24, 88(%r15)
	movq	$0, 112(%r15)
	movdqu	%xmm0, 72(%rsp)
	movq	16(%r15), %rbx
	movq	16(%rbp), %rdi
	xorl	%esi, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	8(%rax), %rcx
	addq	$64, %rcx
	leaq	64(%rsp), %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	_ZN2js4wasm10JumpTables4initENS0_11CompileModeERKNS0_13ModuleSegmentERKN7mozilla6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
	testb	%al, %al
	je	.LBB23_12
###SPA### trampoline_fmt_64
# %bb.13:
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 48(%rsp)
	movq	$32, 40(%rsp)
	movq	16(%rbp), %rax
	movq	144(%rax), %r12
	testq	%r12, %r12
	je	.LBB23_14
###SPA### trampoline_fmt_64
# %bb.15:
	leaq	40(%rsp), %rdi
	movq	%r12, %rsi
	callq	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB23_62
###SPA### trampoline_fmt_64
# %bb.16:
	movq	48(%rsp), %rsi
	testq	%r12, %r12
	jle	.LBB23_24
###SPA### trampoline_fmt_64
# %bb.17:
	movq	40(%rsp), %rdx
	shlq	$5, %rsi
	leaq	(%rdx,%rsi), %rax
	movq	%r12, %rcx
	shlq	$5, %rcx
	addq	%rax, %rcx
	leaq	(%rdx,%rsi), %rdi
	addq	$32, %rdi
	cmpq	%rdi, %rcx
	cmovaq	%rcx, %rdi
	subq	%rsi, %rdi
	notq	%rdx
	addq	%rdi, %rdx
	movl	%edx, %esi
	shrl	$5, %esi
	addl	$1, %esi
	andq	$3, %rsi
	je	.LBB23_20
###SPA### trampoline_fmt_64
# %bb.18:
	negq	%rsi
	pxor	%xmm0, %xmm0
	.p2align	4, 0x90
.LBB23_19:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movdqu	%xmm0, 8(%rax)
	movq	$12, (%rax)
	movl	$0, 24(%rax)
	movb	$1, 28(%rax)
	addq	$32, %rax
	addq	$1, %rsi
	jne	.LBB23_19
###SPA### trampoline_fmt_64
.LBB23_20:
###SPA## trampoline_fmt_64
	cmpq	$96, %rdx
	jb	.LBB23_23
###SPA### trampoline_fmt_64
# %bb.21:
	pxor	%xmm0, %xmm0
	.p2align	4, 0x90
.LBB23_22:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movdqu	%xmm0, 8(%rax)
	movq	$12, (%rax)
	movl	$0, 24(%rax)
	movb	$1, 28(%rax)
	movdqu	%xmm0, 40(%rax)
	movq	$12, 32(%rax)
	movl	$0, 56(%rax)
	movb	$1, 60(%rax)
	movdqu	%xmm0, 72(%rax)
	movq	$12, 64(%rax)
	movl	$0, 88(%rax)
	movb	$1, 92(%rax)
	movdqu	%xmm0, 104(%rax)
	movq	$12, 96(%rax)
	movl	$0, 120(%rax)
	movb	$1, 124(%rax)
	subq	$-128, %rax
	cmpq	%rcx, %rax
	jb	.LBB23_22
###SPA### trampoline_fmt_64
.LBB23_23:
###SPA## trampoline_fmt_64
	movq	48(%rsp), %rsi
	jmp	.LBB23_24
.LBB23_4:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	$0, 96(%rsp)
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	je	.LBB23_63
###SPA### trampoline_fmt_64
	jmp	.LBB23_61
.LBB23_12:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	80(%rsp), %rdi
	movq	$0, 80(%rsp)
	testq	%rdi, %rdi
	jne	.LBB23_52
###SPA### trampoline_fmt_64
	jmp	.LBB23_53
.LBB23_14:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
.LBB23_24:
###SPA## trampoline_fmt_64
	movq	%r15, (%rsp)            # 8-byte Spill
	movq	%r14, 8(%rsp)           # 8-byte Spill
	addq	%r12, %rsi
	movq	%rsi, 48(%rsp)
	movq	16(%rbp), %rax
	cmpq	$0, 144(%rax)
	je	.LBB23_34
###SPA### trampoline_fmt_64
# %bb.25:
	xorl	%r15d, %r15d
	movq	%rbp, 32(%rsp)          # 8-byte Spill
	.p2align	4, 0x90
.LBB23_26:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB23_31 Depth 2
###SPA## trampoline_fmt_64
	movq	40(%rsp), %r14
	movq	%r15, %rbp
	shlq	$5, %rbp
	leaq	(%r14,%rbp), %rdi
	movq	136(%rax), %rsi
	movq	(%rsi,%rbp), %r12
	movq	8(%rsi,%rbp), %rbx
	leaq	(%r14,%rbp), %r13
	addq	$8, %r13
	movq	8(%r14,%rbp), %rax
	leaq	(%rax,%rbx), %rcx
	cmpq	16(%r14,%rbp), %rcx
	jbe	.LBB23_29
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB23_26 Depth=1
	movq	%rsi, 24(%rsp)          # 8-byte Spill
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	movq	%rbx, %rsi
	callq	_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB23_35
###SPA### trampoline_fmt_64
# %bb.28:                               #   in Loop: Header=BB23_26 Depth=1
	movq	(%r13), %rax
	movq	24(%rsp), %rsi          # 8-byte Reload
	movq	16(%rsp), %rdi          # 8-byte Reload
.LBB23_29:                              #   in Loop: Header=BB23_26 Depth=1
###SPA## trampoline_fmt_64
	leaq	(,%rbx,4), %rcx
	leaq	(%rcx,%rcx,2), %rcx
	cmpq	$12, %rcx
	jb	.LBB23_33
###SPA### trampoline_fmt_64
# %bb.30:                               #   in Loop: Header=BB23_26 Depth=1
	leaq	(%rbx,%rbx,2), %rcx
	leaq	(%r12,%rcx,4), %rcx
	leaq	(%rax,%rax,2), %rax
	shlq	$2, %rax
	addq	(%rdi), %rax
	.p2align	4, 0x90
.LBB23_31:                              #   Parent Loop BB23_26 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movl	8(%r12), %edx
	movl	%edx, 8(%rax)
	movq	(%r12), %rdx
	movq	%rdx, (%rax)
	addq	$12, %r12
	addq	$12, %rax
	cmpq	%rcx, %r12
	jb	.LBB23_31
###SPA### trampoline_fmt_64
# %bb.32:                               #   in Loop: Header=BB23_26 Depth=1
	movq	(%r13), %rax
.LBB23_33:                              #   in Loop: Header=BB23_26 Depth=1
###SPA## trampoline_fmt_64
	addq	%rbx, %rax
	movq	%rax, (%r13)
	movl	24(%rsi,%rbp), %eax
	movl	%eax, 24(%r14,%rbp)
	movb	28(%rsi,%rbp), %al
	movb	%al, 28(%r14,%rbp)
	addl	$1, %r15d
	movq	32(%rsp), %rbp          # 8-byte Reload
	movq	16(%rbp), %rax
	cmpq	%r15, 144(%rax)
	ja	.LBB23_26
###SPA### trampoline_fmt_64
.LBB23_34:
###SPA## trampoline_fmt_64
	movq	32(%rax), %r12
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$160, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB23_35
###SPA### trampoline_fmt_64
# %bb.36:
	movq	%rax, %r15
	movq	(%rsp), %rax            # 8-byte Reload
	movq	%rax, 104(%rsp)
	leaq	104(%rsp), %rsi
	leaq	64(%rsp), %rcx
	leaq	40(%rsp), %r8
	movq	%r15, %rdi
	movq	%r12, %rdx
	callq	_ZN2js4wasm4CodeC1EN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS4_EEEERKNS0_8MetadataEONS0_10JumpTablesEONS2_6VectorINS0_10StructTypeELm0ENS_17SystemAllocPolicyEEE
	movq	104(%rsp), %rbx
	movq	$0, 104(%rsp)
	testq	%rbx, %rbx
	movq	8(%rsp), %r14           # 8-byte Reload
	je	.LBB23_38
###SPA### trampoline_fmt_64
# %bb.37:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm8CodeTierD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB23_38:
###SPA## trampoline_fmt_64
	lock		addq	$1, (%r15)
	movq	160(%rbp), %rsi
	movq	%r15, %rdi
	callq	_ZN2js4wasm4Code10initializeERKNS0_8LinkDataE
	testb	%al, %al
	je	.LBB23_40
###SPA### trampoline_fmt_64
# %bb.39:
	movq	%r15, (%r14)
	jmp	.LBB23_42
.LBB23_40:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	lock		subq	$1, (%r15)
	jne	.LBB23_42
###SPA### trampoline_fmt_64
# %bb.41:
	movq	%r15, %rdi
	callq	_ZN2js4wasm4CodeD2Ev
	movq	%r15, %rdi
	callq	free@PLT
.LBB23_42:
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
	movq	40(%rsp), %rbx
	movq	48(%rsp), %rbp
	testq	%rbp, %rbp
	jle	.LBB23_49
###SPA### trampoline_fmt_64
.LBB23_44:
###SPA## trampoline_fmt_64
	shlq	$5, %rbp
	addq	%rbx, %rbp
	.p2align	4, 0x90
.LBB23_45:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$12, %rdi
	je	.LBB23_47
###SPA### trampoline_fmt_64
# %bb.46:                               #   in Loop: Header=BB23_45 Depth=1
	callq	free@PLT
.LBB23_47:                              #   in Loop: Header=BB23_45 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbx
	cmpq	%rbp, %rbx
	jb	.LBB23_45
###SPA### trampoline_fmt_64
# %bb.48:
	movq	40(%rsp), %rbx
.LBB23_49:
###SPA## trampoline_fmt_64
	cmpq	$32, %rbx
	je	.LBB23_51
###SPA### trampoline_fmt_64
# %bb.50:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB23_51:
###SPA## trampoline_fmt_64
	movq	80(%rsp), %rdi
	movq	$0, 80(%rsp)
	testq	%rdi, %rdi
	je	.LBB23_53
###SPA### trampoline_fmt_64
.LBB23_52:
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB23_53:
###SPA## trampoline_fmt_64
	movq	72(%rsp), %rdi
	movq	$0, 72(%rsp)
	testq	%rdi, %rdi
	je	.LBB23_55
###SPA### trampoline_fmt_64
# %bb.54:
	callq	free@PLT
.LBB23_55:
###SPA## trampoline_fmt_64
	testq	%r15, %r15
	je	.LBB23_58
###SPA### trampoline_fmt_64
# %bb.56:
	movq	%r15, %rdi
	callq	_ZN2js4wasm8CodeTierD2Ev
	movq	%r15, %rdi
	jmp	.LBB23_57
.LBB23_35:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %r14           # 8-byte Reload
	movq	$0, (%r14)
	movq	(%rsp), %r15            # 8-byte Reload
	movq	40(%rsp), %rbx
	movq	48(%rsp), %rbp
	testq	%rbp, %rbp
	jg	.LBB23_44
###SPA### trampoline_fmt_64
	jmp	.LBB23_49
.LBB23_6:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
.LBB23_7:
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	testq	%rbx, %rbx
	je	.LBB23_58
###SPA### trampoline_fmt_64
# %bb.8:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm12MetadataTierD2Ev
	movq	%rbx, %rdi
.LBB23_57:
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB23_58:
###SPA## trampoline_fmt_64
	movq	96(%rsp), %rbx
	movq	$0, 96(%rsp)
	testq	%rbx, %rbx
	je	.LBB23_60
###SPA### trampoline_fmt_64
# %bb.59:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm11CodeSegmentD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB23_60:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	jne	.LBB23_61
###SPA### trampoline_fmt_64
.LBB23_63:
###SPA## trampoline_fmt_64
	movq	%r14, %rax
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB23_62:
	.cfi_def_cfa_offset 176
###SPA## trampoline_fmt_64
	movq	$0, (%r14)
	movq	40(%rsp), %rbx
	movq	48(%rsp), %rbp
	testq	%rbp, %rbp
	jg	.LBB23_44
###SPA### trampoline_fmt_64
	jmp	.LBB23_49
.LBB23_61:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end23:
	.size	_ZNK2js4wasm6Module19getDebugEnabledCodeEv, .Lfunc_end23-_ZNK2js4wasm6Module19getDebugEnabledCodeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE # -- Begin function _ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE
	.globl	_ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE,@function
_ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE: # @_ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	16(%rdi), %rax
	cmpq	$0, 144(%rax)
	jne	.LBB24_2
###SPA### trampoline_fmt_64
# %bb.1:
	movb	$1, %al
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB24_2:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.19(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1280, 0                # imm = 0x500
	callq	abort@PLT
.Lfunc_end24:
	.size	_ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE, .Lfunc_end24-_ZNK2js4wasm6Module20makeStructTypeDescrsEP9JSContextN2JS13MutableHandleINS4_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE
.LCPI25_0:
	.quad	-1829587348619264       # 0xfff9800000000000
	.quad	-1829587348619264       # 0xfff9800000000000
	.section	.text._ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE,"ax",@progbits
	.hidden	_ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE
	.globl	_ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE
	.p2align	4, 0x90
	.type	_ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE,@function
_ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE: # @_ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$520, %rsp              # imm = 0x208
	.cfi_def_cfa_offset 576
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%fs:40, %rax
	movq	%rax, 512(%rsp)
	movq	%rsi, 296(%rsp)
	cmpb	$1, 1565(%rsi)
	jne	.LBB25_165
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%r8, %r15
	movq	%rcx, %r12
	movq	%rsi, %rbx
	movq	%rdi, %r13
	movq	%rdx, %rbp
	callq	_ZNK2js4wasm6Module20instantiateFunctionsEP9JSContextRKN2JS8GCVectorIP10JSFunctionLm0ENS_17SystemAllocPolicyEEE
	testb	%al, %al
	je	.LBB25_10
###SPA### trampoline_fmt_64
# %bb.2:
	leaq	288(%rsp), %r14
	movq	%rbp, 16(%rsp)          # 8-byte Spill
	movq	48(%rbp), %rax
	movq	%rax, 288(%rsp)
	leaq	24(%rbx), %rax
	movq	%rax, 272(%rsp)
	movq	24(%rbx), %rax
	movq	%rax, 280(%rsp)
	leaq	272(%rsp), %rax
	movq	%rax, 24(%rbx)
	movq	%r13, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	_ZNK2js4wasm6Module17instantiateMemoryEP9JSContextN2JS13MutableHandleIPNS_16WasmMemoryObjectEEE
	testb	%al, %al
	je	.LBB25_11
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%r12, (%rsp)            # 8-byte Spill
	movq	%r15, 56(%rsp)          # 8-byte Spill
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %r12
	movq	%r12, 240(%rsp)
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 256(%rsp)
	movq	$8, 248(%rsp)
	movq	296(%rsp), %rbp
	leaq	104(%rbp), %rax
	movq	%rax, 224(%rsp)
	movq	104(%rbp), %rax
	movq	%rax, 232(%rsp)
	leaq	224(%rsp), %rax
	movq	%rax, 104(%rbp)
	movdqu	%xmm0, 208(%rsp)
	movq	$8, 200(%rsp)
	movq	16(%r13), %rax
	movq	32(%rax), %rcx
	movq	136(%rcx), %rax
	testq	%rax, %rax
	je	.LBB25_13
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%r13, 8(%rsp)           # 8-byte Spill
	movq	128(%rcx), %rbx
	leaq	24(%rbp), %r14
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %r15
	xorl	%r12d, %r12d
	leaq	200(%rsp), %r13
	.p2align	4, 0x90
.LBB25_5:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	%r12d, %r12d
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpq	%r12, 32(%rax)
	jbe	.LBB25_8
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB25_5 Depth=1
	movq	24(%rax), %rax
	movq	(%rax,%r12,8), %rax
	movq	%rax, 416(%rsp)
	movq	%r14, 400(%rsp)
	movq	24(%rbp), %rax
	movq	%rax, 408(%rsp)
	leaq	400(%rsp), %rax
	movq	%rax, 24(%rbp)
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	leaq	416(%rsp), %rcx
	leaq	248(%rsp), %r8
	movq	%r13, %r9
	callq	_ZNK2js4wasm6Module24instantiateImportedTableEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEEPNS7_8GCVectorISA_Lm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESD_EE
	movq	400(%rsp), %rcx
	movq	408(%rsp), %rdx
	movq	%rdx, (%rcx)
	testb	%al, %al
	je	.LBB25_9
###SPA### trampoline_fmt_64
.LBB25_7:                               #   in Loop: Header=BB25_5 Depth=1
###SPA## trampoline_fmt_64
	addl	$1, %r12d
	addq	$24, %rbx
	addq	$-24, %r15
	jne	.LBB25_5
###SPA### trampoline_fmt_64
	jmp	.LBB25_12
	.p2align	4, 0x90
.LBB25_8:                               #   in Loop: Header=BB25_5 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	leaq	248(%rsp), %rcx
	movq	%r13, %r8
	callq	_ZNK2js4wasm6Module21instantiateLocalTableEP9JSContextRKNS0_9TableDescEPN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEPN7mozilla6VectorI6RefPtrINS0_5TableEELm0ESB_EE
	testb	%al, %al
	jne	.LBB25_7
###SPA### trampoline_fmt_64
.LBB25_9:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %r12
	movq	200(%rsp), %rbp
	movq	208(%rsp), %rax
	testq	%rax, %rax
	jg	.LBB25_138
###SPA### trampoline_fmt_64
	jmp	.LBB25_144
.LBB25_10:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
	movq	%fs:40, %rax
	cmpq	512(%rsp), %rax
	jne	.LBB25_166
###SPA### trampoline_fmt_64
.LBB25_149:
###SPA## trampoline_fmt_64
	movl	%r14d, %eax
	addq	$520, %rsp              # imm = 0x208
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB25_11:
	.cfi_def_cfa_offset 576
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
	jmp	.LBB25_148
.LBB25_12:
###SPA## trampoline_fmt_64
	movq	296(%rsp), %rbp
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %r12
	movq	8(%rsp), %r13           # 8-byte Reload
	leaq	288(%rsp), %r14
.LBB25_13:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	leaq	80(%rax), %rdx
	leaq	56(%rax), %rcx
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%rdx, 72(%rsp)          # 8-byte Spill
	movq	%rcx, 88(%rsp)          # 8-byte Spill
	callq	_ZNK2js4wasm6Module18instantiateGlobalsEP9JSContextRKN2JS8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEERNS5_IPNS_16WasmGlobalObjectELm0ES7_EE
	testb	%al, %al
	je	.LBB25_23
###SPA### trampoline_fmt_64
# %bb.14:
	movq	16(%r13), %rax
	movq	32(%rax), %rax
	movl	32(%rax), %esi
	leaq	192(%rsp), %rdi
	callq	_ZN2js4wasm13CreateTlsDataEj
	cmpq	$0, 192(%rsp)
	je	.LBB25_151
###SPA### trampoline_fmt_64
# %bb.15:
	movq	$0, 184(%rsp)
	movq	16(%r13), %r15
	movq	32(%r15), %rax
	cmpb	$0, 216(%rax)
	je	.LBB25_24
###SPA### trampoline_fmt_64
# %bb.16:
	leaq	400(%rsp), %rdi
	movq	%r13, %rsi
	callq	_ZNK2js4wasm6Module19getDebugEnabledCodeEv
	movq	400(%rsp), %r15
	testq	%r15, %r15
	je	.LBB25_155
###SPA### trampoline_fmt_64
# %bb.17:
	movq	296(%rsp), %rbp
	movq	_ZN2js11MallocArenaE(%rip), %r14
	movl	$72, %esi
	movq	%r14, %rdi
	callq	moz_arena_malloc@PLT
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB25_162
###SPA### trampoline_fmt_64
.LBB25_18:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%r13, %rdx
	callq	_ZN2js4wasm10DebugStateC1ERKNS0_4CodeERKNS0_6ModuleE
	movq	%rbx, %rbp
.LBB25_19:
###SPA## trampoline_fmt_64
	movq	$0, 400(%rsp)
	movq	184(%rsp), %rsi
	movq	%rbp, 184(%rsp)
	testq	%rsi, %rsi
	leaq	288(%rsp), %r14
	je	.LBB25_26
###SPA### trampoline_fmt_64
# %bb.20:
	leaq	184(%rsp), %rdi
	callq	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
	movq	400(%rsp), %rsi
	movq	$0, 400(%rsp)
	testq	%rsi, %rsi
	je	.LBB25_22
###SPA### trampoline_fmt_64
# %bb.21:
	leaq	400(%rsp), %rdi
	callq	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
.LBB25_22:
###SPA## trampoline_fmt_64
	movq	184(%rsp), %rbp
	testq	%rbp, %rbp
	jne	.LBB25_29
###SPA### trampoline_fmt_64
	jmp	.LBB25_27
.LBB25_23:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
	movq	200(%rsp), %rbp
	movq	208(%rsp), %rax
	testq	%rax, %rax
	jg	.LBB25_138
###SPA### trampoline_fmt_64
	jmp	.LBB25_144
.LBB25_24:
###SPA## trampoline_fmt_64
	testq	%r15, %r15
	je	.LBB25_28
###SPA### trampoline_fmt_64
# %bb.25:
	lock		addq	$1, (%r15)
	jmp	.LBB25_29
.LBB25_26:
###SPA## trampoline_fmt_64
	movq	$0, 400(%rsp)
	testq	%rbp, %rbp
	jne	.LBB25_29
###SPA### trampoline_fmt_64
	jmp	.LBB25_27
.LBB25_28:
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
.LBB25_29:
###SPA## trampoline_fmt_64
	leaq	136(%rsp), %rdi
	leaq	296(%rsp), %rsi
	callq	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE
	movq	16(%r13), %rax
	cmpq	$0, 144(%rax)
	jne	.LBB25_167
###SPA### trampoline_fmt_64
# %bb.30:
	movq	296(%rsp), %rdi
	movq	%r15, 128(%rsp)
	testq	%r15, %r15
	je	.LBB25_32
###SPA### trampoline_fmt_64
# %bb.31:
	lock		addq	$1, (%r15)
	movq	16(%r13), %rax
.LBB25_32:
###SPA## trampoline_fmt_64
	leaq	72(%r13), %rdx
	leaq	96(%r13), %rcx
	movq	192(%rsp), %rsi
	movq	$0, 192(%rsp)
	movq	%rsi, 120(%rsp)
	leaq	160(%rsp), %r10
	movq	32(%rax), %rax
	addq	$104, %rax
	movq	184(%rsp), %rsi
	movq	$0, 184(%rsp)
	movq	%rsi, 112(%rsp)
	leaq	112(%rsp), %rbx
	leaq	200(%rsp), %rbp
	leaq	128(%rsp), %rsi
	leaq	120(%rsp), %r8
	movq	%r14, %r9
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	pushq	8(%rsp)                 # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	104(%rsp)               # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	96(%rsp)                # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	56(%rsp)                # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js18WasmInstanceObject6createEP9JSContext6RefPtrIKNS_4wasm4CodeEERKN7mozilla6VectorINS4_18SerializableRefPtrIKNS4_11DataSegmentEEELm0ENS_17SystemAllocPolicyEEERKNS9_INSA_IKNS4_11ElemSegmentEEELm0ESE_EENS8_9UniquePtrINS4_7TlsDataENS4_14TlsDataDeleterEEEN2JS6HandleIPNS_16WasmMemoryObjectEEEONS9_IS3_INS4_5TableEELm0ESE_EEONSS_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ESE_EERKNS11_IP10JSFunctionLm0ESE_EERKNS9_INS4_10GlobalDescELm0ESE_EERKNS11_INS4_3ValELm0ESE_EERKNS11_IPNS_16WasmGlobalObjectELm0ESE_EENST_IP8JSObjectEENSO_INS4_10DebugStateENSS_12DeletePolicyIS1T_EEEE
	addq	$64, %rsp
	.cfi_adjust_cfa_offset -64
	movq	56(%rsp), %rbp          # 8-byte Reload
	movq	%rax, (%rbp)
	movq	112(%rsp), %rsi
	movq	$0, 112(%rsp)
	testq	%rsi, %rsi
	je	.LBB25_34
###SPA### trampoline_fmt_64
# %bb.33:
	leaq	112(%rsp), %rdi
	callq	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
.LBB25_34:
###SPA## trampoline_fmt_64
	movq	120(%rsp), %rax
	movq	$0, 120(%rsp)
	testq	%rax, %rax
	je	.LBB25_36
###SPA### trampoline_fmt_64
# %bb.35:
	movq	72(%rax), %rdi
	callq	free@PLT
.LBB25_36:
###SPA## trampoline_fmt_64
	movq	128(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB25_39
###SPA### trampoline_fmt_64
# %bb.37:
	lock		subq	$1, (%rbx)
	jne	.LBB25_39
###SPA### trampoline_fmt_64
# %bb.38:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm4CodeD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB25_39:
###SPA## trampoline_fmt_64
	movq	(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB25_47
###SPA### trampoline_fmt_64
# %bb.40:
	movq	296(%rsp), %rax
	movq	%rax, (%rsp)            # 8-byte Spill
	callq	_ZNK2js18WasmInstanceObject8instanceEv
	movq	40(%rax), %rax
	movq	32(%rax), %rax
	movq	%rax, 64(%rsp)          # 8-byte Spill
	cmpl	$1, 16(%rax)
	jne	.LBB25_43
###SPA### trampoline_fmt_64
# %bb.41:
	cmpq	$1, 56(%r13)
	jne	.LBB25_43
###SPA### trampoline_fmt_64
# %bb.42:
	movq	48(%r13), %rax
	movq	(%rax), %rax
	cmpb	$0, (%rax)
	je	.LBB25_152
###SPA### trampoline_fmt_64
.LBB25_43:
###SPA## trampoline_fmt_64
	movq	$0, 368(%rsp)
	movq	(%rsp), %rcx            # 8-byte Reload
	leaq	24(%rcx), %rax
	movq	%rax, 48(%rsp)          # 8-byte Spill
	movq	%rax, 352(%rsp)
	movq	24(%rcx), %rax
	movq	%rax, 360(%rsp)
	leaq	352(%rsp), %rax
	movq	%rax, 24(%rcx)
	movq	64(%rsp), %rax          # 8-byte Reload
	cmpl	$1, 16(%rax)
	movq	_ZN2js16FunctionClassPtrE(%rip), %rax
	movq	%r13, 8(%rsp)           # 8-byte Spill
	movq	%r15, 80(%rsp)          # 8-byte Spill
	leaq	_ZN2js11PlainObject6class_E(%rip), %rcx
	jne	.LBB25_48
###SPA### trampoline_fmt_64
# %bb.44:
	cmpq	%rcx, %rax
	je	.LBB25_51
###SPA### trampoline_fmt_64
# %bb.45:
	movl	_ZN2js11PlainObject6class_E+8(%rip), %eax
	movzbl	%ah, %ecx
	andl	$1, %eax
	addq	%rcx, %rax
	movb	$16, %cl
	cmpl	$16, %eax
	ja	.LBB25_52
###SPA### trampoline_fmt_64
# %bb.46:
	leaq	_ZN2js2gc16slotsToThingKindE(%rip), %rcx
	movb	(%rax,%rcx), %cl
	jmp	.LBB25_52
.LBB25_48:
###SPA## trampoline_fmt_64
	cmpq	%rcx, %rax
	je	.LBB25_53
###SPA### trampoline_fmt_64
# %bb.49:
	movl	_ZN2js11PlainObject6class_E+8(%rip), %eax
	movzbl	%ah, %ecx
	andl	$1, %eax
	addq	%rcx, %rax
	movb	$16, %cl
	cmpl	$16, %eax
	ja	.LBB25_54
###SPA### trampoline_fmt_64
# %bb.50:
	leaq	_ZN2js2gc16slotsToThingKindE(%rip), %rcx
	movb	(%rax,%rcx), %cl
	jmp	.LBB25_54
.LBB25_51:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB25_52:
###SPA## trampoline_fmt_64
	movzbl	%cl, %ecx
	leaq	_ZN2js11PlainObject6class_E(%rip), %rsi
	leaq	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue(%rip), %rdx
	xorl	%r8d, %r8d
	movq	(%rsp), %rdi            # 8-byte Reload
	callq	_ZN2js23NewObjectWithClassProtoEP9JSContextPK7JSClassN2JS6HandleIP8JSObjectEENS_2gc9AllocKindENS_13NewObjectKindE
	movl	$1, 44(%rsp)            # 4-byte Folded Spill
	movq	%rax, 368(%rsp)
	testq	%rax, %rax
	jne	.LBB25_55
###SPA### trampoline_fmt_64
	jmp	.LBB25_129
.LBB25_53:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB25_54:
###SPA## trampoline_fmt_64
	movzbl	%cl, %ecx
	leaq	_ZN2js11PlainObject6class_E(%rip), %rsi
	leaq	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue(%rip), %rdx
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	(%rsp), %rdi            # 8-byte Reload
	callq	_ZN2js29NewObjectWithGivenTaggedProtoEP9JSContextPK7JSClassN2JS6HandleINS_11TaggedProtoEEENS_2gc9AllocKindENS_13NewObjectKindEj
	movl	$7, 44(%rsp)            # 4-byte Folded Spill
	movq	%rax, 368(%rsp)
	testq	%rax, %rax
	je	.LBB25_129
###SPA### trampoline_fmt_64
.LBB25_55:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	56(%rax), %rax
	testq	%rax, %rax
	je	.LBB25_114
###SPA### trampoline_fmt_64
# %bb.56:
	movq	%rax, %rcx
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	48(%rax), %r12
	shlq	$4, %rcx
	addq	%r12, %rcx
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	movq	(%rsp), %rax            # 8-byte Reload
	leaq	88(%rax), %r14
	leaq	96(%rax), %r13
	leaq	104(%rax), %rax
	movq	%rax, 96(%rsp)          # 8-byte Spill
.LBB25_57:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r12), %rbx
	movq	%rbx, %rdi
	callq	strlen@PLT
	movq	(%rsp), %rdi            # 8-byte Reload
	movq	%rbx, %rsi
	movq	%rax, %rdx
	callq	_ZN2js16AtomizeUTF8CharsEP9JSContextPKcm
	testq	%rax, %rax
	je	.LBB25_129
###SPA### trampoline_fmt_64
# %bb.58:                               #   in Loop: Header=BB25_57 Depth=1
	movq	%rax, %r15
	movq	(%rax), %rax
	testl	$1024, %eax             # imm = 0x400
	jne	.LBB25_65
###SPA### trampoline_fmt_64
# %bb.59:                               #   in Loop: Header=BB25_57 Depth=1
	movq	%rax, %rsi
	shrq	$32, %rsi
	leaq	-1(%rsi), %rcx
	cmpq	$9, %rcx
	ja	.LBB25_68
###SPA### trampoline_fmt_64
# %bb.60:                               #   in Loop: Header=BB25_57 Depth=1
	movq	%r15, %rdi
	addq	$8, %rdi
	testl	$512, %eax              # imm = 0x200
	jne	.LBB25_85
###SPA### trampoline_fmt_64
# %bb.61:                               #   in Loop: Header=BB25_57 Depth=1
	testb	$64, %al
	jne	.LBB25_63
###SPA### trampoline_fmt_64
# %bb.62:                               #   in Loop: Header=BB25_57 Depth=1
	movq	(%rdi), %rdi
.LBB25_63:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movzwl	(%rdi), %eax
	addl	$-48, %eax
	movzwl	%ax, %eax
	cmpl	$9, %eax
	ja	.LBB25_68
###SPA### trampoline_fmt_64
# %bb.64:                               #   in Loop: Header=BB25_57 Depth=1
	leaq	400(%rsp), %rdx
	callq	_ZN14JSLinearString11isIndexSlowIDsEEbPKT_mPj
	testb	%al, %al
	jne	.LBB25_66
###SPA### trampoline_fmt_64
	jmp	.LBB25_68
.LBB25_65:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	shrl	$16, %eax
	movl	%eax, 400(%rsp)
	movb	$1, %al
	testb	%al, %al
	je	.LBB25_68
###SPA### trampoline_fmt_64
.LBB25_66:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movl	400(%rsp), %eax
	testl	%eax, %eax
	js	.LBB25_68
###SPA### trampoline_fmt_64
# %bb.67:                               #   in Loop: Header=BB25_57 Depth=1
	leal	(%rax,%rax), %r15d
	addl	$1, %r15d
.LBB25_68:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, 344(%rsp)
	movq	%r14, %rcx
	movq	%r14, 328(%rsp)
	movq	(%r14), %rax
	movq	%rax, 336(%rsp)
	leaq	328(%rsp), %rax
	movq	%rax, (%r14)
	movabsq	$-1829587348619264, %rax # imm = 0xFFF9800000000000
	movq	%rax, 320(%rsp)
	movq	%r13, 304(%rsp)
	movq	(%r13), %rax
	movq	%rax, 312(%rsp)
	leaq	304(%rsp), %rax
	movq	%rax, (%r13)
	movl	8(%r12), %eax
	cmpq	$3, %rax
	ja	.LBB25_103
###SPA### trampoline_fmt_64
# %bb.69:                               #   in Loop: Header=BB25_57 Depth=1
	leaq	.LJTI25_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB25_70:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 416(%rsp)
	movq	48(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, 400(%rsp)
	movq	(%rcx), %rax
	movq	%rax, 408(%rsp)
	leaq	400(%rsp), %rax
	movq	%rax, (%rcx)
	movq	%r12, %rdi
	callq	_ZNK2js4wasm6Export9funcIndexEv
	movl	%eax, %ebx
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpq	%rbx, 8(%rax)
	jbe	.LBB25_82
###SPA### trampoline_fmt_64
# %bb.71:                               #   in Loop: Header=BB25_57 Depth=1
	movq	(%rax), %rax
	movq	(%rax,%rbx,8), %rdi
	callq	_ZN2js4wasm22IsWasmExportedFunctionEP10JSFunction
	movq	16(%rsp), %rcx          # 8-byte Reload
	testb	%al, %al
	je	.LBB25_82
###SPA### trampoline_fmt_64
# %bb.72:                               #   in Loop: Header=BB25_57 Depth=1
	movq	(%rcx), %rax
	movq	(%rax,%rbx,8), %rax
	movq	%rax, 416(%rsp)
	jmp	.LBB25_84
.LBB25_73:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	288(%rsp), %rax
	jmp	.LBB25_81
.LBB25_74:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	callq	_ZNK2js4wasm6Export11globalIndexEv
	movl	%eax, %eax
	movq	64(%rsp), %rcx          # 8-byte Reload
	movq	104(%rcx), %rbx
	leaq	(%rax,%rax,2), %rbp
	shlq	$4, %rbp
	movq	%r12, %rdi
	callq	_ZNK2js4wasm6Export11globalIndexEv
	movq	88(%rsp), %rcx          # 8-byte Reload
	movq	(%rcx), %rcx
	movl	%eax, %eax
	movq	(%rcx,%rax,8), %rcx
	movq	%rcx, 392(%rsp)
	movq	48(%rsp), %rdx          # 8-byte Reload
	movq	%rdx, 376(%rsp)
	movq	(%rdx), %rax
	movq	%rax, 384(%rsp)
	leaq	376(%rsp), %rsi
	movq	%rsi, (%rdx)
	movabsq	$-562949953421312, %rdx # imm = 0xFFFE000000000000
	orq	%rdx, %rcx
	movq	%rcx, 320(%rsp)
	movl	40(%rbx,%rbp), %ecx
	cmpl	$1, %ecx
	je	.LBB25_92
###SPA### trampoline_fmt_64
# %bb.75:                               #   in Loop: Header=BB25_57 Depth=1
	cmpb	$0, 36(%rbx,%rbp)
	je	.LBB25_91
###SPA### trampoline_fmt_64
# %bb.76:                               #   in Loop: Header=BB25_57 Depth=1
	cmpb	$0, 37(%rbx,%rbp)
	je	.LBB25_91
###SPA### trampoline_fmt_64
# %bb.77:                               #   in Loop: Header=BB25_57 Depth=1
	testl	%ecx, %ecx
	je	.LBB25_79
###SPA### trampoline_fmt_64
# %bb.78:                               #   in Loop: Header=BB25_57 Depth=1
	cmpb	$0, 38(%rbx,%rbp)
	je	.LBB25_92
###SPA### trampoline_fmt_64
.LBB25_79:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	48(%rsp), %rcx          # 8-byte Reload
	movq	%rax, (%rcx)
	jmp	.LBB25_102
.LBB25_80:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	callq	_ZNK2js4wasm6Export10tableIndexEv
	movl	%eax, %eax
	movq	248(%rsp), %rcx
	movq	(%rcx,%rax,8), %rax
.LBB25_81:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movabsq	$-562949953421312, %rcx # imm = 0xFFFE000000000000
	orq	%rcx, %rax
	movq	%rax, 320(%rsp)
	jmp	.LBB25_103
.LBB25_82:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rsp), %rdi            # 8-byte Reload
	movq	%rbp, %rsi
	movl	%ebx, %edx
	leaq	416(%rsp), %rcx
	callq	_ZN2js18WasmInstanceObject19getExportedFunctionEP9JSContextN2JS6HandleIPS0_EEjNS3_13MutableHandleIP10JSFunctionEE
	testb	%al, %al
	je	.LBB25_89
###SPA### trampoline_fmt_64
# %bb.83:                               #   in Loop: Header=BB25_57 Depth=1
	movq	416(%rsp), %rax
.LBB25_84:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movabsq	$-562949953421312, %rcx # imm = 0xFFFE000000000000
	orq	%rcx, %rax
	movq	%rax, 320(%rsp)
	movq	400(%rsp), %rax
	movq	408(%rsp), %rcx
	movq	%rcx, (%rax)
	jmp	.LBB25_103
.LBB25_85:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	testb	$64, %al
	jne	.LBB25_87
###SPA### trampoline_fmt_64
# %bb.86:                               #   in Loop: Header=BB25_57 Depth=1
	movq	(%rdi), %rdi
.LBB25_87:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movzbl	(%rdi), %eax
	addb	$-48, %al
	cmpb	$9, %al
	ja	.LBB25_68
###SPA### trampoline_fmt_64
# %bb.88:                               #   in Loop: Header=BB25_57 Depth=1
	leaq	400(%rsp), %rdx
	callq	_ZN14JSLinearString11isIndexSlowIhEEbPKT_mPj
	testb	%al, %al
	jne	.LBB25_66
###SPA### trampoline_fmt_64
	jmp	.LBB25_68
.LBB25_89:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	400(%rsp), %rax
	movq	408(%rsp), %rcx
.LBB25_90:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	%rcx, (%rax)
	movl	$1, %eax
	jmp	.LBB25_104
.LBB25_91:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	testl	%ecx, %ecx
	je	.LBB25_79
###SPA### trampoline_fmt_64
.LBB25_92:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	leaq	(%rbx,%rbp), %rax
	leaq	(%rbx,%rbp), %rcx
	addq	$40, %rcx
	leaq	_ZTVN2js15RootedTraceableINS_4wasm3ValEEE+16(%rip), %rdx
	movq	%rdx, 416(%rsp)
	movl	$255, 424(%rsp)
	movl	$0, 432(%rsp)
	movq	96(%rsp), %rsi          # 8-byte Reload
	movq	%rsi, 400(%rsp)
	movq	(%rsi), %rdx
	movq	%rdx, 408(%rsp)
	leaq	400(%rsp), %rdx
	movq	%rdx, (%rsi)
	movl	(%rcx), %ecx
	cmpl	$1, %ecx
	je	.LBB25_99
###SPA### trampoline_fmt_64
# %bb.93:                               #   in Loop: Header=BB25_57 Depth=1
	cmpl	$2, %ecx
	je	.LBB25_95
###SPA### trampoline_fmt_64
# %bb.94:                               #   in Loop: Header=BB25_57 Depth=1
	testl	%ecx, %ecx
	leaq	424(%rsp), %rdx
	jne	.LBB25_101
###SPA### trampoline_fmt_64
	jmp	.LBB25_168
.LBB25_95:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movl	(%rax), %eax
	cmpl	$2, %eax
	je	.LBB25_107
###SPA### trampoline_fmt_64
# %bb.96:                               #   in Loop: Header=BB25_57 Depth=1
	cmpl	$1, %eax
	je	.LBB25_106
###SPA### trampoline_fmt_64
# %bb.97:                               #   in Loop: Header=BB25_57 Depth=1
	testl	%eax, %eax
	leaq	424(%rsp), %rdx
	jne	.LBB25_101
###SPA### trampoline_fmt_64
# %bb.98:                               #   in Loop: Header=BB25_57 Depth=1
	movq	24(%rbx,%rbp), %rax
	movq	%rax, 480(%rsp)
	movups	8(%rbx,%rbp), %xmm0
	movaps	%xmm0, 464(%rsp)
	leaq	488(%rsp), %rdi
	leaq	464(%rsp), %rsi
	callq	_ZN2js4wasm3ValC1ERKNS0_6LitValE
	movq	504(%rsp), %rax
	leaq	424(%rsp), %rcx
	movq	%rax, 16(%rcx)
	leaq	424(%rsp), %rdx
	movdqu	488(%rsp), %xmm0
	movdqu	%xmm0, (%rdx)
	jmp	.LBB25_101
.LBB25_99:                              #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rax), %rcx
	movq	%rcx, 480(%rsp)
	movups	(%rax), %xmm0
	movaps	%xmm0, 464(%rsp)
	leaq	488(%rsp), %rdi
	leaq	464(%rsp), %rsi
	callq	_ZN2js4wasm3ValC1ERKNS0_6LitValE
	movq	504(%rsp), %rax
	leaq	424(%rsp), %rcx
	movq	%rax, 16(%rcx)
	movq	%rcx, %rdx
	movdqu	488(%rsp), %xmm0
.LBB25_100:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movdqu	%xmm0, (%rcx)
.LBB25_101:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	392(%rsp), %rdi
	movq	(%rsp), %rsi            # 8-byte Reload
	callq	_ZN2js16WasmGlobalObject6setValEP9JSContextN2JS6HandleINS_4wasm3ValEEE
	movq	400(%rsp), %rax
	movq	408(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	376(%rsp), %rax
	movq	384(%rsp), %rcx
	movq	%rcx, (%rax)
.LBB25_102:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	56(%rsp), %rbp          # 8-byte Reload
.LBB25_103:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rsp), %rdi            # 8-byte Reload
	leaq	368(%rsp), %rsi
	leaq	344(%rsp), %rdx
	leaq	320(%rsp), %rcx
	movl	44(%rsp), %r8d          # 4-byte Reload
	callq	_Z21JS_DefinePropertyByIdP9JSContextN2JS6HandleIP8JSObjectEENS2_INS1_11PropertyKeyEEENS2_INS1_5ValueEEEj
	xorb	$1, %al
	movzbl	%al, %eax
.LBB25_104:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	304(%rsp), %rcx
	movq	312(%rsp), %rdx
	movq	%rdx, (%rcx)
	movq	328(%rsp), %rcx
	movq	336(%rsp), %rdx
	movq	%rdx, (%rcx)
	testl	%eax, %eax
	jne	.LBB25_129
###SPA### trampoline_fmt_64
# %bb.105:                              #   in Loop: Header=BB25_57 Depth=1
	addq	$16, %r12
	cmpq	104(%rsp), %r12         # 8-byte Folded Reload
	jne	.LBB25_57
###SPA### trampoline_fmt_64
	jmp	.LBB25_114
.LBB25_106:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movl	8(%rbx,%rbp), %eax
	movq	72(%rsp), %rcx          # 8-byte Reload
	movq	(%rcx), %rcx
	leaq	(%rax,%rax,2), %rax
	movdqu	(%rcx,%rax,8), %xmm0
	movq	16(%rcx,%rax,8), %rax
	leaq	424(%rsp), %rcx
	movq	%rax, 16(%rcx)
	movq	%rcx, %rdx
	jmp	.LBB25_100
.LBB25_107:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 504(%rsp)
	movq	48(%rsp), %rax          # 8-byte Reload
	movq	%rax, 488(%rsp)
	leaq	376(%rsp), %rcx
	movq	%rcx, 496(%rsp)
	leaq	488(%rsp), %rcx
	movq	%rcx, (%rax)
	movl	8(%rbx,%rbp), %ebx
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpq	%rbx, 8(%rax)
	jbe	.LBB25_110
###SPA### trampoline_fmt_64
# %bb.108:                              #   in Loop: Header=BB25_57 Depth=1
	movq	(%rax), %rax
	movq	(%rax,%rbx,8), %rdi
	callq	_ZN2js4wasm22IsWasmExportedFunctionEP10JSFunction
	movq	16(%rsp), %rcx          # 8-byte Reload
	testb	%al, %al
	je	.LBB25_110
###SPA### trampoline_fmt_64
# %bb.109:                              #   in Loop: Header=BB25_57 Depth=1
	movq	(%rcx), %rax
	movq	(%rax,%rbx,8), %rax
	movq	%rax, 504(%rsp)
	jmp	.LBB25_112
.LBB25_110:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rsp), %rdi            # 8-byte Reload
	movq	56(%rsp), %rbp          # 8-byte Reload
	movq	%rbp, %rsi
	movl	%ebx, %edx
	leaq	504(%rsp), %rcx
	callq	_ZN2js18WasmInstanceObject19getExportedFunctionEP9JSContextN2JS6HandleIPS0_EEjNS3_13MutableHandleIP10JSFunctionEE
	testb	%al, %al
	je	.LBB25_113
###SPA### trampoline_fmt_64
# %bb.111:                              #   in Loop: Header=BB25_57 Depth=1
	movq	504(%rsp), %rax
.LBB25_112:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movl	$1073741680, 424(%rsp)  # imm = 0x3FFFFF70
	movq	%rax, 432(%rsp)
	movq	488(%rsp), %rax
	movq	496(%rsp), %rcx
	movq	%rcx, (%rax)
	leaq	424(%rsp), %rdx
	jmp	.LBB25_101
.LBB25_113:                             #   in Loop: Header=BB25_57 Depth=1
###SPA## trampoline_fmt_64
	movq	488(%rsp), %rax
	movq	496(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	400(%rsp), %rax
	movq	408(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	376(%rsp), %rax
	movq	384(%rsp), %rcx
	jmp	.LBB25_90
.LBB25_114:
###SPA## trampoline_fmt_64
	movq	64(%rsp), %rax          # 8-byte Reload
	cmpl	$1, 16(%rax)
	je	.LBB25_116
###SPA### trampoline_fmt_64
# %bb.115:
	movq	(%rsp), %rdi            # 8-byte Reload
	leaq	368(%rsp), %rsi
	callq	_ZN2js17PreventExtensionsEP9JSContextN2JS6HandleIP8JSObjectEE
	testb	%al, %al
	je	.LBB25_129
###SPA### trampoline_fmt_64
.LBB25_116:
###SPA## trampoline_fmt_64
	movq	(%rbp), %rdi
	movq	368(%rsp), %rsi
	callq	_ZN2js18WasmInstanceObject14initExportsObjER8JSObject
	movq	352(%rsp), %rax
	movq	360(%rsp), %rcx
	movq	%rcx, (%rax)
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %r12
	movq	8(%rsp), %r13           # 8-byte Reload
	movq	80(%rsp), %r15          # 8-byte Reload
	leaq	288(%rsp), %r14
.LBB25_117:
###SPA## trampoline_fmt_64
	movq	296(%rsp), %rsi
	movl	$664, %edi              # imm = 0x298
	addq	152(%rsi), %rdi
	movq	%rbp, %rdx
	callq	_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE
	testb	%al, %al
	je	.LBB25_47
###SPA### trampoline_fmt_64
# %bb.118:
	movq	296(%rsp), %rsi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	movq	%r14, %rcx
	movq	72(%rsp), %r8           # 8-byte Reload
	callq	_ZNK2js4wasm6Module12initSegmentsEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEENS5_IPNS_16WasmMemoryObjectEEERKNS4_8GCVectorINS0_3ValELm0ENS_17SystemAllocPolicyEEE
	testb	%al, %al
	je	.LBB25_47
###SPA### trampoline_fmt_64
# %bb.119:
	movq	16(%r13), %rax
	movq	32(%rax), %rax
	cmpb	$0, 60(%rax)
	je	.LBB25_122
###SPA### trampoline_fmt_64
# %bb.120:
	movq	296(%rsp), %rax
	leaq	416(%rsp), %rcx
	leaq	_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE+16(%rip), %rdx
	movq	%rdx, 432(%rsp)
	movdqa	.LCPI25_0(%rip), %xmm0  # xmm0 = [18444914486360932352,18444914486360932352]
	movdqu	%xmm0, 440(%rsp)
	leaq	104(%rax), %rdx
	movq	%rdx, 416(%rsp)
	movq	104(%rax), %rdx
	movq	%rdx, 424(%rsp)
	movq	%rcx, 104(%rax)
	leaq	456(%rsp), %rax
	movq	%rax, 400(%rsp)
	movb	$0, 412(%rsp)
	movl	$0, 408(%rsp)
	movq	(%rbp), %rdi
	callq	_ZNK2js18WasmInstanceObject8instanceEv
	movq	296(%rsp), %rsi
	movq	16(%r13), %rcx
	movq	32(%rcx), %rcx
	movl	56(%rcx), %edx
	movq	400(%rsp), %rcx
	movq	408(%rsp), %r8
	movq	%rax, %rdi
	callq	_ZN2js4wasm8Instance10callExportEP9JSContextjN2JS8CallArgsE
	movq	416(%rsp), %rcx
	movq	424(%rsp), %rdx
	movq	%rdx, (%rcx)
	testb	%al, %al
	je	.LBB25_47
###SPA### trampoline_fmt_64
# %bb.121:
	movq	16(%r13), %rax
	movq	32(%rax), %rax
.LBB25_122:
###SPA## trampoline_fmt_64
	xorl	%edx, %edx
	cmpl	$1, 16(%rax)
	setne	%dl
	movq	296(%rsp), %rax
	movq	192(%rax), %rdi
	movq	(%rbp), %rsi
	callq	_ZN9JSRuntime13setUseCounterEP8JSObject12JSUseCounter
	movq	296(%rsp), %rax
	movzwl	216(%rax), %eax
	movb	$1, %r14b
	testl	$2048, %eax             # imm = 0x800
	je	.LBB25_130
###SPA### trampoline_fmt_64
# %bb.123:
	movl	188(%r13), %eax
	testl	%eax, %eax
	je	.LBB25_130
###SPA### trampoline_fmt_64
# %bb.124:
	movl	$1000000, %eax          # imm = 0xF4240
	movq	%rax, %xmm0
	pslldq	$8, %xmm0               # xmm0 = zero,zero,zero,zero,zero,zero,zero,zero,xmm0[0,1,2,3,4,5,6,7]
	movdqa	%xmm0, 16(%rsp)         # 16-byte Spill
	leaq	400(%rsp), %rbp
.LBB25_125:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB25_126 Depth 2
###SPA## trampoline_fmt_64
	movdqa	16(%rsp), %xmm0         # 16-byte Reload
	movdqa	%xmm0, 400(%rsp)
	.p2align	4, 0x90
.LBB25_126:                             #   Parent Loop BB25_125 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	movq	%rbp, %rsi
	callq	nanosleep@PLT
	cmpl	$-1, %eax
	jne	.LBB25_128
###SPA### trampoline_fmt_64
# %bb.127:                              #   in Loop: Header=BB25_126 Depth=2
	callq	__errno_location@PLT
	cmpl	$4, (%rax)
	je	.LBB25_126
###SPA### trampoline_fmt_64
.LBB25_128:                             #   in Loop: Header=BB25_125 Depth=1
###SPA## trampoline_fmt_64
	movl	188(%r13), %eax
	testl	%eax, %eax
	jne	.LBB25_125
###SPA### trampoline_fmt_64
	jmp	.LBB25_130
.LBB25_129:
###SPA## trampoline_fmt_64
	movq	352(%rsp), %rax
	movq	360(%rsp), %rcx
	movq	%rcx, (%rax)
	xorl	%r14d, %r14d
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %r12
	movq	80(%rsp), %r15          # 8-byte Reload
	jmp	.LBB25_130
.LBB25_151:
###SPA## trampoline_fmt_64
	movq	296(%rsp), %rdi
	callq	_ZN2js17ReportOutOfMemoryEP9JSContext
	xorl	%r14d, %r14d
	movq	192(%rsp), %rax
	movq	$0, 192(%rsp)
	testq	%rax, %rax
	jne	.LBB25_136
###SPA### trampoline_fmt_64
	jmp	.LBB25_137
.LBB25_152:
###SPA## trampoline_fmt_64
	movq	$0, 416(%rsp)
	movq	(%rsp), %rcx            # 8-byte Reload
	leaq	24(%rcx), %rax
	movq	%rax, 400(%rsp)
	movq	24(%rcx), %rax
	movq	%rax, 408(%rsp)
	leaq	400(%rsp), %rax
	movq	%rax, 24(%rcx)
	movq	48(%r13), %rdi
	callq	_ZNK2js4wasm6Export9funcIndexEv
	movl	%eax, %ebx
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpq	%rbx, 8(%rax)
	jbe	.LBB25_157
###SPA### trampoline_fmt_64
# %bb.153:
	movq	(%rax), %rax
	movq	(%rax,%rbx,8), %rdi
	callq	_ZN2js4wasm22IsWasmExportedFunctionEP10JSFunction
	movq	16(%rsp), %rcx          # 8-byte Reload
	testb	%al, %al
	je	.LBB25_157
###SPA### trampoline_fmt_64
# %bb.154:
	movq	(%rcx), %rax
	movq	(%rax,%rbx,8), %rsi
	movq	%rsi, 416(%rsp)
	jmp	.LBB25_159
.LBB25_155:
###SPA## trampoline_fmt_64
	movq	296(%rsp), %rdi
	callq	_ZN2js17ReportOutOfMemoryEP9JSContext
	xorl	%r15d, %r15d
.LBB25_27:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
	movq	184(%rsp), %rsi
	movq	$0, 184(%rsp)
	testq	%rsi, %rsi
	jne	.LBB25_131
###SPA### trampoline_fmt_64
	jmp	.LBB25_132
.LBB25_157:
###SPA## trampoline_fmt_64
	leaq	416(%rsp), %rcx
	movq	(%rsp), %rdi            # 8-byte Reload
	movq	%rbp, %rsi
	movl	%ebx, %edx
	callq	_ZN2js18WasmInstanceObject19getExportedFunctionEP9JSContextN2JS6HandleIPS0_EEjNS3_13MutableHandleIP10JSFunctionEE
	testb	%al, %al
	je	.LBB25_160
###SPA### trampoline_fmt_64
# %bb.158:
	movq	416(%rsp), %rsi
.LBB25_159:
###SPA## trampoline_fmt_64
	movq	(%rbp), %rdi
	callq	_ZN2js18WasmInstanceObject14initExportsObjER8JSObject
	movq	400(%rsp), %rax
	movq	408(%rsp), %rcx
	movq	%rcx, (%rax)
	jmp	.LBB25_117
.LBB25_160:
###SPA## trampoline_fmt_64
	movq	400(%rsp), %rax
	movq	408(%rsp), %rcx
	movq	%rcx, (%rax)
.LBB25_47:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
.LBB25_130:
###SPA## trampoline_fmt_64
	leaq	136(%rsp), %rdi
	callq	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev
	movq	184(%rsp), %rsi
	movq	$0, 184(%rsp)
	testq	%rsi, %rsi
	je	.LBB25_132
###SPA### trampoline_fmt_64
.LBB25_131:
###SPA## trampoline_fmt_64
	leaq	184(%rsp), %rdi
	callq	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
.LBB25_132:
###SPA## trampoline_fmt_64
	testq	%r15, %r15
	je	.LBB25_135
###SPA### trampoline_fmt_64
# %bb.133:
	lock		subq	$1, (%r15)
	jne	.LBB25_135
###SPA### trampoline_fmt_64
# %bb.134:
	movq	%r15, %rdi
	callq	_ZN2js4wasm4CodeD2Ev
	movq	%r15, %rdi
	callq	free@PLT
.LBB25_135:
###SPA## trampoline_fmt_64
	movq	192(%rsp), %rax
	movq	$0, 192(%rsp)
	testq	%rax, %rax
	je	.LBB25_137
###SPA### trampoline_fmt_64
.LBB25_136:
###SPA## trampoline_fmt_64
	movq	72(%rax), %rdi
	callq	free@PLT
.LBB25_137:
###SPA## trampoline_fmt_64
	movq	200(%rsp), %rbp
	movq	208(%rsp), %rax
	testq	%rax, %rax
	jle	.LBB25_144
###SPA### trampoline_fmt_64
.LBB25_138:
###SPA## trampoline_fmt_64
	leaq	(,%rax,8), %r15
	addq	%rbp, %r15
	.p2align	4, 0x90
.LBB25_139:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB25_142
###SPA### trampoline_fmt_64
# %bb.140:                              #   in Loop: Header=BB25_139 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB25_142
###SPA### trampoline_fmt_64
# %bb.141:                              #   in Loop: Header=BB25_139 Depth=1
	movq	%rbx, %rdi
	callq	_ZN2js4wasm5TableD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB25_142:                             #   in Loop: Header=BB25_139 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbp
	cmpq	%r15, %rbp
	jb	.LBB25_139
###SPA### trampoline_fmt_64
# %bb.143:
	movq	200(%rsp), %rbp
.LBB25_144:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbp
	je	.LBB25_146
###SPA### trampoline_fmt_64
# %bb.145:
	movq	%rbp, %rdi
	callq	free@PLT
.LBB25_146:
###SPA## trampoline_fmt_64
	movq	224(%rsp), %rax
	movq	232(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	%r12, 240(%rsp)
	movq	248(%rsp), %rdi
	cmpq	$8, %rdi
	je	.LBB25_148
###SPA### trampoline_fmt_64
# %bb.147:
	callq	free@PLT
.LBB25_148:
###SPA## trampoline_fmt_64
	movq	272(%rsp), %rax
	movq	280(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	%fs:40, %rax
	cmpq	512(%rsp), %rax
	je	.LBB25_149
###SPA### trampoline_fmt_64
.LBB25_166:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB25_162:
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	cmpl	$1, 200(%rbp)
	jne	.LBB25_164
###SPA### trampoline_fmt_64
# %bb.163:
	callq	_ZN9JSContext21addPendingOutOfMemoryEv
	xorl	%ebp, %ebp
	jmp	.LBB25_19
.LBB25_164:
###SPA## trampoline_fmt_64
	movq	%rdi, %r9
	movq	192(%rdi), %rdi
	xorl	%ebp, %ebp
	xorl	%esi, %esi
	movl	$72, %ecx
	xorl	%r8d, %r8d
	movq	%r14, %rdx
	callq	_ZN9JSRuntime13onOutOfMemoryEN2js13AllocFunctionEmmPvP9JSContext
	movq	%rax, %rbx
	testq	%rax, %rax
	jne	.LBB25_18
###SPA### trampoline_fmt_64
	jmp	.LBB25_19
.LBB25_165:
###SPA## trampoline_fmt_64
	leaq	.L.str.20(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1392, 0                # imm = 0x570
	callq	abort@PLT
.LBB25_167:
###SPA## trampoline_fmt_64
	leaq	.L.str.19(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1280, 0                # imm = 0x500
	callq	abort@PLT
.LBB25_168:
###SPA## trampoline_fmt_64
	leaq	.L.str.52(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1097, 0                # imm = 0x449
	callq	abort@PLT
.Lfunc_end25:
	.size	_ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE, .Lfunc_end25-_ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE
	.cfi_endproc
	.section	.rodata._ZNK2js4wasm6Module11instantiateEP9JSContextRNS0_12ImportValuesEN2JS6HandleIP8JSObjectEENS6_13MutableHandleIPNS_18WasmInstanceObjectEEE,"a",@progbits
	.p2align	2
.LJTI25_0:
	.long	.LBB25_70-.LJTI25_0
	.long	.LBB25_80-.LJTI25_0
	.long	.LBB25_73-.LJTI25_0
	.long	.LBB25_74-.LJTI25_0
                                        # -- End function
	.section	.text._ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE,"ax",@progbits
	.hidden	_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE # -- Begin function _ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE
	.globl	_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE
	.p2align	4, 0x90
	.type	_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE,@function
_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE: # @_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 64(%rsp)
	movq	(%rdx), %rdi
	callq	_ZNK2js18WasmInstanceObject8instanceEv
	movq	%rax, %r12
	movq	192(%r14), %rax
	xorl	%esi, %esi
	cmpl	$0, 580(%rax)
	setne	%sil
	movq	%r12, %rdi
	callq	_ZNK2js4wasm8Instance21ensureProfilingLabelsEb
	movq	136(%r12), %rdi
	testq	%rdi, %rdi
	je	.LBB26_3
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r12), %rax
	movl	648(%rax), %eax
	andl	$3, %eax
	cmpl	$3, %eax
	jne	.LBB26_3
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$1, %edx
	movq	%r14, %rsi
	callq	_ZN2js4wasm10DebugState26ensureEnterFrameTrapsStateEP9JSContextb
.LBB26_3:
###SPA## trampoline_fmt_64
	leaq	8(%rbx), %rbp
	movq	16(%rbx), %rax
	addq	$1, %rax
	cmpq	%rax, 24(%rbx)
	jae	.LBB26_5
###SPA### trampoline_fmt_64
# %bb.4:
	movl	$1, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB26_62
###SPA### trampoline_fmt_64
.LBB26_5:
###SPA## trampoline_fmt_64
	movq	%rbx, 8(%rsp)           # 8-byte Spill
	movq	%r15, 24(%rsp)          # 8-byte Spill
	movq	192(%r14), %r13
	leaq	18904(%r13), %rbx
	movq	%rbx, %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	leaq	18944(%r13), %r15
	movq	18952(%r13), %rax
	addq	$1, %rax
	movq	%r13, 32(%rsp)          # 8-byte Spill
	cmpq	%rax, 18960(%r13)
	jae	.LBB26_7
###SPA### trampoline_fmt_64
# %bb.6:
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB26_61
###SPA### trampoline_fmt_64
.LBB26_7:
###SPA## trampoline_fmt_64
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	%r14, 48(%rsp)          # 8-byte Spill
	movq	%r12, 16(%rsp)          # 8-byte Spill
	movq	%r12, 56(%rsp)
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	16(%rax), %r14
	xorl	%ebx, %ebx
	testq	%r14, %r14
	je	.LBB26_8
###SPA### trampoline_fmt_64
# %bb.9:
	leaq	56(%rsp), %r12
	.p2align	4, 0x90
.LBB26_10:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r14, %r13
	subq	%rbx, %r13
	shrq	%r13
	addq	%rbx, %r13
	movq	(%rbp), %rax
	movq	(%rax,%r13,8), %rsi
	movq	%r12, %rdi
	callq	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	testl	%eax, %eax
	je	.LBB26_11
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB26_10 Depth=1
	testl	%eax, %eax
	js	.LBB26_13
###SPA### trampoline_fmt_64
# %bb.14:                               #   in Loop: Header=BB26_10 Depth=1
	addq	$1, %r13
	movq	%r13, %rbx
	cmpq	%rbx, %r14
	jne	.LBB26_10
###SPA### trampoline_fmt_64
	jmp	.LBB26_16
	.p2align	4, 0x90
.LBB26_13:                              #   in Loop: Header=BB26_10 Depth=1
###SPA## trampoline_fmt_64
	movq	%r13, %r14
	cmpq	%rbx, %r14
	jne	.LBB26_10
###SPA### trampoline_fmt_64
	jmp	.LBB26_16
.LBB26_8:
###SPA## trampoline_fmt_64
	xorl	%r14d, %r14d
	jmp	.LBB26_17
.LBB26_11:
###SPA## trampoline_fmt_64
	movq	%r13, %r14
.LBB26_16:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	16(%rax), %rbx
.LBB26_17:
###SPA## trampoline_fmt_64
	movq	24(%rsp), %r13          # 8-byte Reload
	movq	(%rbp), %rax
	shlq	$3, %r14
	sarq	$3, %r14
	cmpq	%rbx, %r14
	jne	.LBB26_22
###SPA### trampoline_fmt_64
# %bb.18:
	movq	8(%rsp), %rdx           # 8-byte Reload
	cmpq	24(%rdx), %rbx
	jne	.LBB26_21
###SPA### trampoline_fmt_64
# %bb.19:
	movl	$1, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB26_33
###SPA### trampoline_fmt_64
# %bb.20:
	movq	8(%rsp), %rdx           # 8-byte Reload
	movq	8(%rdx), %rax
	movq	16(%rdx), %rbx
.LBB26_21:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, (%rax,%rbx,8)
	addq	$1, 16(%rdx)
	jmp	.LBB26_33
.LBB26_22:
###SPA## trampoline_fmt_64
	movq	-8(%rax,%rbx,8), %r12
	movq	8(%rsp), %rcx           # 8-byte Reload
	cmpq	24(%rcx), %rbx
	jne	.LBB26_23
###SPA### trampoline_fmt_64
# %bb.24:
	movl	$1, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB26_33
###SPA### trampoline_fmt_64
# %bb.25:
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	16(%rcx), %rax
	shlq	$3, %rax
	addq	8(%rcx), %rax
	jmp	.LBB26_26
.LBB26_23:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rbx,8), %rax
	movq	8(%rsp), %rcx           # 8-byte Reload
.LBB26_26:
###SPA## trampoline_fmt_64
	movq	%r12, (%rax)
	addq	$1, 16(%rcx)
	leaq	-1(%rbx), %rax
	cmpq	%r14, %rax
	jbe	.LBB26_32
###SPA### trampoline_fmt_64
# %bb.27:
	movl	%r14d, %edx
	notl	%edx
	addl	%ebx, %edx
	leaq	-2(%rbx), %rcx
	subq	%r14, %rcx
	andq	$3, %rdx
	je	.LBB26_31
###SPA### trampoline_fmt_64
# %bb.28:
	negq	%rdx
	.p2align	4, 0x90
.LBB26_29:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rax
	movq	-16(%rax,%rbx,8), %rsi
	movq	%rsi, -8(%rax,%rbx,8)
	addq	$-1, %rbx
	addq	$1, %rdx
	jne	.LBB26_29
###SPA### trampoline_fmt_64
# %bb.30:
	leaq	-1(%rbx), %rax
.LBB26_31:
###SPA## trampoline_fmt_64
	cmpq	$3, %rcx
	jb	.LBB26_32
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB26_65:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rcx
	movq	-16(%rcx,%rbx,8), %rdx
	movq	%rdx, (%rcx,%rax,8)
	movq	(%rbp), %rcx
	movq	-16(%rcx,%rax,8), %rdx
	movq	%rdx, -8(%rcx,%rax,8)
	movq	(%rbp), %rcx
	movq	-24(%rcx,%rax,8), %rdx
	movq	%rdx, -16(%rcx,%rax,8)
	movq	(%rbp), %rcx
	movq	-32(%rcx,%rax,8), %rdx
	movq	%rdx, -24(%rcx,%rax,8)
	leaq	-3(%rax), %rbx
	addq	$-4, %rax
	cmpq	%r14, %rax
	ja	.LBB26_65
###SPA### trampoline_fmt_64
.LBB26_32:
###SPA## trampoline_fmt_64
	movq	(%rbp), %rax
	movq	16(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, (%rax,%r14,8)
.LBB26_33:
###SPA## trampoline_fmt_64
	movq	32(%rsp), %rbx          # 8-byte Reload
	movq	18952(%rbx), %r12
	xorl	%ebp, %ebp
	testq	%r12, %r12
	je	.LBB26_34
###SPA### trampoline_fmt_64
# %bb.35:
	leaq	56(%rsp), %r14
	.p2align	4, 0x90
.LBB26_36:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rbx
	subq	%rbp, %rbx
	shrq	%rbx
	addq	%rbp, %rbx
	movq	(%r15), %rax
	movq	(%rax,%rbx,8), %rsi
	movq	%r14, %rdi
	callq	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	testl	%eax, %eax
	je	.LBB26_37
###SPA### trampoline_fmt_64
# %bb.38:                               #   in Loop: Header=BB26_36 Depth=1
	testl	%eax, %eax
	js	.LBB26_39
###SPA### trampoline_fmt_64
# %bb.40:                               #   in Loop: Header=BB26_36 Depth=1
	addq	$1, %rbx
	movq	%rbx, %rbp
	cmpq	%rbp, %r12
	jne	.LBB26_36
###SPA### trampoline_fmt_64
	jmp	.LBB26_42
	.p2align	4, 0x90
.LBB26_39:                              #   in Loop: Header=BB26_36 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %r12
	cmpq	%rbp, %r12
	jne	.LBB26_36
###SPA### trampoline_fmt_64
	jmp	.LBB26_42
.LBB26_34:
###SPA## trampoline_fmt_64
	xorl	%r12d, %r12d
	jmp	.LBB26_43
.LBB26_37:
###SPA## trampoline_fmt_64
	movq	%rbx, %r12
.LBB26_42:
###SPA## trampoline_fmt_64
	movq	32(%rsp), %rbx          # 8-byte Reload
	movq	18952(%rbx), %rbp
.LBB26_43:
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
	shlq	$3, %r12
	sarq	$3, %r12
	cmpq	%rbp, %r12
	jne	.LBB26_48
###SPA### trampoline_fmt_64
# %bb.44:
	cmpq	18960(%rbx), %rbp
	jne	.LBB26_47
###SPA### trampoline_fmt_64
# %bb.45:
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB26_59
###SPA### trampoline_fmt_64
# %bb.46:
	movq	18944(%rbx), %rax
	movq	18952(%rbx), %rbp
.LBB26_47:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, (%rax,%rbp,8)
	addq	$1, 18952(%rbx)
	jmp	.LBB26_59
.LBB26_48:
###SPA## trampoline_fmt_64
	movq	-8(%rax,%rbp,8), %r14
	cmpq	18960(%rbx), %rbp
	jne	.LBB26_49
###SPA### trampoline_fmt_64
# %bb.50:
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB26_59
###SPA### trampoline_fmt_64
# %bb.51:
	movq	18952(%rbx), %rax
	shlq	$3, %rax
	addq	18944(%rbx), %rax
	jmp	.LBB26_52
.LBB26_49:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rbp,8), %rax
.LBB26_52:
###SPA## trampoline_fmt_64
	movq	%r14, (%rax)
	addq	$1, 18952(%rbx)
	leaq	-1(%rbp), %rax
	cmpq	%r12, %rax
	movq	16(%rsp), %rdi          # 8-byte Reload
	jbe	.LBB26_58
###SPA### trampoline_fmt_64
# %bb.53:
	movl	%r12d, %edx
	notl	%edx
	addl	%ebp, %edx
	leaq	-2(%rbp), %rcx
	subq	%r12, %rcx
	andq	$3, %rdx
	je	.LBB26_57
###SPA### trampoline_fmt_64
# %bb.54:
	negq	%rdx
	.p2align	4, 0x90
.LBB26_55:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
	movq	-16(%rax,%rbp,8), %rsi
	movq	%rsi, -8(%rax,%rbp,8)
	addq	$-1, %rbp
	addq	$1, %rdx
	jne	.LBB26_55
###SPA### trampoline_fmt_64
# %bb.56:
	leaq	-1(%rbp), %rax
.LBB26_57:
###SPA## trampoline_fmt_64
	cmpq	$3, %rcx
	jb	.LBB26_58
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB26_66:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r15), %rcx
	movq	-16(%rcx,%rbp,8), %rdx
	movq	%rdx, (%rcx,%rax,8)
	movq	(%r15), %rcx
	movq	-16(%rcx,%rax,8), %rdx
	movq	%rdx, -8(%rcx,%rax,8)
	movq	(%r15), %rcx
	movq	-24(%rcx,%rax,8), %rdx
	movq	%rdx, -16(%rcx,%rax,8)
	movq	(%r15), %rcx
	movq	-32(%rcx,%rax,8), %rdx
	movq	%rdx, -24(%rcx,%rax,8)
	leaq	-3(%rax), %rbp
	addq	$-4, %rax
	cmpq	%r12, %rax
	ja	.LBB26_66
###SPA### trampoline_fmt_64
.LBB26_58:
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
	movq	%rdi, (%rax,%r12,8)
.LBB26_59:
###SPA## trampoline_fmt_64
	movq	40(%rsp), %rdi          # 8-byte Reload
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movq	48(%rsp), %rdi          # 8-byte Reload
	movq	152(%rdi), %rax
	movb	$1, %bl
	testb	$1, 648(%rax)
	je	.LBB26_63
###SPA### trampoline_fmt_64
# %bb.60:
	movq	%r13, %rsi
	callq	_ZN2js8DebugAPI25slowPathOnNewWasmInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE
.LBB26_63:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	jne	.LBB26_64
###SPA### trampoline_fmt_64
.LBB26_67:
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB26_61:
	.cfi_def_cfa_offset 128
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
.LBB26_62:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	je	.LBB26_67
###SPA### trampoline_fmt_64
.LBB26_64:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end26:
	.size	_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE, .Lfunc_end26-_ZN2js4wasm5Realm16registerInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev,"axG",@progbits,_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev,comdat
	.hidden	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev # -- Begin function _ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev
	.weak	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev
	.p2align	4, 0x90
	.type	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev,@function
_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev: # @_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	movq	%rcx, (%rax)
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, 16(%rdi)
	movq	24(%rdi), %rbx
	movq	32(%rdi), %rax
	testq	%rax, %rax
	jle	.LBB27_14
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdi, %r14
	leaq	(%rbx,%rax,8), %r13
	movq	%rsp, %r15
	leaq	.L.str.290(%rip), %r12
	.p2align	4, 0x90
.LBB27_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	testq	%rcx, %rcx
	je	.LBB27_12
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB27_2 Depth=1
	movq	%rcx, %rax
	andq	$-1048576, %rax         # imm = 0xFFF00000
	cmpl	$1, 1048552(%rax)
	je	.LBB27_7
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB27_2 Depth=1
	movq	%rcx, %rdx
	andq	$-4096, %rdx            # imm = 0xF000
	movq	8(%rdx), %rdx
	cmpl	$0, 16(%rdx)
	je	.LBB27_7
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB27_2 Depth=1
	movq	%rcx, (%rsp)
	movq	8(%rdx), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	_ZN2js40TraceManuallyBarrieredGenericPointerEdgeEP8JSTracerPPNS_2gc4CellEPKc
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB27_12
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB27_2 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
.LBB27_7:                               #   in Loop: Header=BB27_2 Depth=1
###SPA## trampoline_fmt_64
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB27_12
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB27_2 Depth=1
	movq	%rbx, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB27_12
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB27_2 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB27_10
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB27_2 Depth=1
	addq	$184, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB27_12:                              #   in Loop: Header=BB27_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB27_2
###SPA### trampoline_fmt_64
	jmp	.LBB27_13
.LBB27_10:                              #   in Loop: Header=BB27_2 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB27_2
###SPA### trampoline_fmt_64
.LBB27_13:
###SPA## trampoline_fmt_64
	movq	24(%r14), %rbx
.LBB27_14:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB27_16
###SPA### trampoline_fmt_64
# %bb.15:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB27_16:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB27_18
###SPA### trampoline_fmt_64
# %bb.17:
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB27_18:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end27:
	.size	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev, .Lfunc_end27-_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE,"ax",@progbits
	.hidden	_ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE # -- Begin function _ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE
	.globl	_ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE
	.p2align	4, 0x90
	.type	_ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE,@function
_ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE: # @_ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	%rdi, %rax
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rdi
	testq	%rdi, %rdi
	je	.LBB28_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rax, %rsi
	jmp	_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE # TAILCALL
.LBB28_1:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.21(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$228, 0
	callq	abort@PLT
.Lfunc_end28:
	.size	_ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE, .Lfunc_end28-_ZN2js4wasm19RegisterCodeSegmentEPKNS0_11CodeSegmentE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE,"axG",@progbits,_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE,comdat
	.hidden	_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE # -- Begin function _ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE
	.weak	_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE
	.p2align	4, 0x90
	.type	_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE,@function
_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE: # @_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 32(%rsp)
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movq	88(%r14), %r13
	movq	(%r13), %rax
	movq	8(%r13), %rbp
	testq	%rbp, %rbp
	movq	%rbx, 8(%rsp)           # 8-byte Spill
	je	.LBB29_7
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%rbx), %rcx
	xorl	%edx, %edx
	movq	%rbp, %r15
	.p2align	4, 0x90
.LBB29_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rsi
	subq	%rdx, %rsi
	shrq	%rsi
	addq	%rdx, %rsi
	movq	(%rax,%rsi,8), %rbx
	movq	(%rbx), %rdi
	cmpq	%rcx, %rdi
	ja	.LBB29_4
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB29_2 Depth=1
	movl	16(%rbx), %ebx
	addq	%rdi, %rbx
	cmpq	%rcx, %rbx
	ja	.LBB29_8
###SPA### trampoline_fmt_64
.LBB29_4:                               #   in Loop: Header=BB29_2 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rcx, %rdi
	ja	.LBB29_6
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB29_2 Depth=1
	addq	$1, %rsi
	movq	%rsi, %rdx
	cmpq	%rdx, %r15
	jne	.LBB29_2
###SPA### trampoline_fmt_64
	jmp	.LBB29_9
	.p2align	4, 0x90
.LBB29_6:                               #   in Loop: Header=BB29_2 Depth=1
###SPA## trampoline_fmt_64
	movq	%rsi, %r15
	cmpq	%rdx, %r15
	jne	.LBB29_2
###SPA### trampoline_fmt_64
	jmp	.LBB29_9
.LBB29_7:
###SPA## trampoline_fmt_64
	xorl	%r15d, %r15d
	jmp	.LBB29_9
.LBB29_8:
###SPA## trampoline_fmt_64
	movq	%rsi, %r15
.LBB29_9:
###SPA## trampoline_fmt_64
	shlq	$3, %r15
	movq	%r15, %r12
	sarq	$3, %r12
	cmpq	%rbp, %r12
	movq	%r14, 16(%rsp)          # 8-byte Spill
	jne	.LBB29_21
###SPA### trampoline_fmt_64
# %bb.10:
	cmpq	16(%r13), %rbp
	jne	.LBB29_13
###SPA### trampoline_fmt_64
# %bb.11:
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB29_50
###SPA### trampoline_fmt_64
# %bb.12:
	movq	(%r13), %rax
	movq	8(%r13), %rbp
.LBB29_13:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	%rcx, (%rax,%rbp,8)
	addq	$1, 8(%r13)
	leaq	(,%r12,8), %rbp
	movq	(%r13), %rax
	addq	%rbp, %rax
	je	.LBB29_50
###SPA### trampoline_fmt_64
.LBB29_14:
###SPA## trampoline_fmt_64
	movl	$1, %eax
	xchgl	%eax, _ZN2js4wasm10CodeExistsE(%rip)
	movq	88(%r14), %rax
	xchgq	%rax, 96(%r14)
	movq	%rax, 88(%r14)
	.p2align	4, 0x90
.LBB29_15:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	_ZL17sNumActiveLookups(%rip), %rax
	testq	%rax, %rax
	jne	.LBB29_15
###SPA### trampoline_fmt_64
# %bb.16:
	movq	88(%r14), %r13
	movq	(%r13), %rax
	movq	8(%r13), %r14
	cmpq	%r14, %r12
	jne	.LBB29_24
###SPA### trampoline_fmt_64
# %bb.17:
	cmpq	16(%r13), %r12
	jne	.LBB29_20
###SPA### trampoline_fmt_64
# %bb.18:
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB29_52
###SPA### trampoline_fmt_64
# %bb.19:
	movq	(%r13), %rax
	movq	8(%r13), %r12
.LBB29_20:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	%rcx, (%rax,%r12,8)
	addq	$1, 8(%r13)
	addq	(%r13), %rbp
	jne	.LBB29_46
###SPA### trampoline_fmt_64
	jmp	.LBB29_52
.LBB29_21:
###SPA## trampoline_fmt_64
	movq	-8(%rax,%rbp,8), %r14
	cmpq	16(%r13), %rbp
	jne	.LBB29_27
###SPA### trampoline_fmt_64
# %bb.22:
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB29_51
###SPA### trampoline_fmt_64
# %bb.23:
	movq	8(%r13), %rax
	shlq	$3, %rax
	addq	(%r13), %rax
	jmp	.LBB29_28
.LBB29_24:
###SPA## trampoline_fmt_64
	movq	-8(%rax,%r14,8), %rbx
	cmpq	16(%r13), %r14
	jne	.LBB29_37
###SPA### trampoline_fmt_64
# %bb.25:
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB29_52
###SPA### trampoline_fmt_64
# %bb.26:
	movq	8(%r13), %rax
	shlq	$3, %rax
	addq	(%r13), %rax
	jmp	.LBB29_38
.LBB29_27:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rbp,8), %rax
.LBB29_28:
###SPA## trampoline_fmt_64
	movq	%r14, (%rax)
	addq	$1, 8(%r13)
	leaq	-1(%rbp), %rax
	cmpq	%r12, %rax
	movq	16(%rsp), %r14          # 8-byte Reload
	jbe	.LBB29_35
###SPA### trampoline_fmt_64
# %bb.29:
	movq	%r15, %rdx
	sarq	$3, %rdx
	leaq	-2(%rbp), %rcx
	subq	%rdx, %rcx
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	notl	%edx
	addl	%ebp, %edx
	andq	$3, %rdx
	je	.LBB29_33
###SPA### trampoline_fmt_64
# %bb.30:
	negq	%rdx
	.p2align	4, 0x90
.LBB29_31:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r13), %rax
	movq	-16(%rax,%rbp,8), %rsi
	movq	%rsi, -8(%rax,%rbp,8)
	addq	$-1, %rbp
	addq	$1, %rdx
	jne	.LBB29_31
###SPA### trampoline_fmt_64
# %bb.32:
	leaq	-1(%rbp), %rax
.LBB29_33:
###SPA## trampoline_fmt_64
	cmpq	$3, %rcx
	jb	.LBB29_35
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB29_34:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movq	-16(%rcx,%rbp,8), %rdx
	movq	%rdx, (%rcx,%rax,8)
	movq	(%r13), %rcx
	movq	-16(%rcx,%rax,8), %rdx
	movq	%rdx, -8(%rcx,%rax,8)
	movq	(%r13), %rcx
	movq	-24(%rcx,%rax,8), %rdx
	movq	%rdx, -16(%rcx,%rax,8)
	movq	(%r13), %rcx
	movq	-32(%rcx,%rax,8), %rdx
	movq	%rdx, -24(%rcx,%rax,8)
	leaq	-3(%rax), %rbp
	addq	$-4, %rax
	cmpq	%r12, %rax
	ja	.LBB29_34
###SPA### trampoline_fmt_64
.LBB29_35:
###SPA## trampoline_fmt_64
	movq	(%r13), %rax
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	%rcx, (%rax,%r12,8)
	leaq	(,%r12,8), %rbp
	movq	(%r13), %rax
	addq	%rbp, %rax
	jne	.LBB29_14
###SPA### trampoline_fmt_64
.LBB29_50:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
	jmp	.LBB29_48
.LBB29_37:
###SPA## trampoline_fmt_64
	leaq	(%rax,%r14,8), %rax
.LBB29_38:
###SPA## trampoline_fmt_64
	movq	%rbx, (%rax)
	addq	$1, 8(%r13)
	leaq	-1(%r14), %rax
	cmpq	%r12, %rax
	jbe	.LBB29_45
###SPA### trampoline_fmt_64
# %bb.39:
	sarq	$3, %r15
	movl	%r15d, %edx
	notl	%edx
	addl	%r14d, %edx
	leaq	-2(%r14), %rcx
	subq	%r15, %rcx
	andq	$3, %rdx
	je	.LBB29_43
###SPA### trampoline_fmt_64
# %bb.40:
	negq	%rdx
	.p2align	4, 0x90
.LBB29_41:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r13), %rax
	movq	-16(%rax,%r14,8), %rsi
	movq	%rsi, -8(%rax,%r14,8)
	addq	$-1, %r14
	addq	$1, %rdx
	jne	.LBB29_41
###SPA### trampoline_fmt_64
# %bb.42:
	leaq	-1(%r14), %rax
.LBB29_43:
###SPA## trampoline_fmt_64
	cmpq	$3, %rcx
	jb	.LBB29_45
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB29_44:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movq	-16(%rcx,%r14,8), %rdx
	movq	%rdx, (%rcx,%rax,8)
	movq	(%r13), %rcx
	movq	-16(%rcx,%rax,8), %rdx
	movq	%rdx, -8(%rcx,%rax,8)
	movq	(%r13), %rcx
	movq	-24(%rcx,%rax,8), %rdx
	movq	%rdx, -16(%rcx,%rax,8)
	movq	(%r13), %rcx
	movq	-32(%rcx,%rax,8), %rdx
	movq	%rdx, -24(%rcx,%rax,8)
	leaq	-3(%rax), %r14
	addq	$-4, %rax
	cmpq	%r12, %rax
	ja	.LBB29_44
###SPA### trampoline_fmt_64
.LBB29_45:
###SPA## trampoline_fmt_64
	movq	(%r13), %rax
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	%rcx, (%rax,%r12,8)
	addq	(%r13), %rbp
	je	.LBB29_52
###SPA### trampoline_fmt_64
.LBB29_46:
###SPA## trampoline_fmt_64
	movb	$1, %bl
.LBB29_47:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %r14          # 8-byte Reload
.LBB29_48:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movq	%fs:40, %rax
	cmpq	32(%rsp), %rax
	jne	.LBB29_53
###SPA### trampoline_fmt_64
# %bb.49:
	movl	%ebx, %eax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB29_51:
	.cfi_def_cfa_offset 96
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
	jmp	.LBB29_47
.LBB29_52:
###SPA## trampoline_fmt_64
	leaq	.L.str.54(%rip), %rsi
	leaq	24(%rsp), %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.LBB29_53:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end29:
	.size	_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE, .Lfunc_end29-_ZN21ProcessCodeSegmentMap6insertEPKN2js4wasm11CodeSegmentE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE,"ax",@progbits
	.hidden	_ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE # -- Begin function _ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE
	.globl	_ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE
	.p2align	4, 0x90
	.type	_ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE,@function
_ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE: # @_ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	%rdi, %rax
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rdi
	testq	%rdi, %rdi
	je	.LBB30_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rax, %rsi
	jmp	_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE # TAILCALL
.LBB30_1:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.21(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$235, 0
	callq	abort@PLT
.Lfunc_end30:
	.size	_ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE, .Lfunc_end30-_ZN2js4wasm21UnregisterCodeSegmentEPKNS0_11CodeSegmentE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE,"axG",@progbits,_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE,comdat
	.hidden	_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE # -- Begin function _ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE
	.weak	_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE
	.p2align	4, 0x90
	.type	_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE,@function
_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE: # @_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movq	88(%r15), %r10
	movq	(%r10), %r8
	movq	8(%r10), %rdx
	testq	%rdx, %rdx
	je	.LBB31_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	(%r14), %rdi
	xorl	%ebx, %ebx
	movq	%rdx, %r9
	.p2align	4, 0x90
.LBB31_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r9, %rax
	subq	%rbx, %rax
	shrq	%rax
	addq	%rbx, %rax
	movq	(%r8,%rax,8), %rcx
	movq	(%rcx), %rsi
	cmpq	%rdi, %rsi
	ja	.LBB31_6
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB31_3 Depth=1
	movl	16(%rcx), %ecx
	addq	%rsi, %rcx
	cmpq	%rdi, %rcx
	ja	.LBB31_5
###SPA### trampoline_fmt_64
.LBB31_6:                               #   in Loop: Header=BB31_3 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rdi, %rsi
	ja	.LBB31_7
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB31_3 Depth=1
	addq	$1, %rax
	movq	%rax, %rbx
	cmpq	%rbx, %r9
	jne	.LBB31_3
###SPA### trampoline_fmt_64
	jmp	.LBB31_10
	.p2align	4, 0x90
.LBB31_7:                               #   in Loop: Header=BB31_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rax, %r9
	cmpq	%rbx, %r9
	jne	.LBB31_3
###SPA### trampoline_fmt_64
	jmp	.LBB31_10
.LBB31_1:
###SPA## trampoline_fmt_64
	xorl	%r9d, %r9d
.LBB31_10:
###SPA## trampoline_fmt_64
	leaq	(%r8,%r9,8), %rax
	addq	$8, %rax
	leaq	(%r8,%rdx,8), %rcx
	cmpq	%rcx, %rax
	jae	.LBB31_13
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB31_11:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax), %rcx
	movq	%rcx, -8(%rax)
	movq	8(%r10), %rdx
	leaq	(,%rdx,8), %rcx
	addq	(%r10), %rcx
	addq	$8, %rax
	cmpq	%rcx, %rax
	jb	.LBB31_11
###SPA### trampoline_fmt_64
.LBB31_13:
###SPA## trampoline_fmt_64
	addq	$-1, %rdx
	movq	%rdx, 8(%r10)
	movq	88(%r15), %rax
	cmpq	$0, 8(%rax)
	jne	.LBB31_15
###SPA### trampoline_fmt_64
# %bb.14:
	xorl	%eax, %eax
	xchgl	%eax, _ZN2js4wasm10CodeExistsE(%rip)
	movq	88(%r15), %rax
.LBB31_15:
###SPA## trampoline_fmt_64
	xchgq	%rax, 96(%r15)
	movq	%rax, 88(%r15)
	.p2align	4, 0x90
.LBB31_16:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	_ZL17sNumActiveLookups(%rip), %rax
	testq	%rax, %rax
	jne	.LBB31_16
###SPA### trampoline_fmt_64
# %bb.17:
	movq	88(%r15), %rcx
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdx
	leaq	(%rsi,%r9,8), %rax
	addq	$8, %rax
	leaq	(%rsi,%rdx,8), %rsi
	cmpq	%rsi, %rax
	jae	.LBB31_20
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB31_18:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax), %rdx
	movq	%rdx, -8(%rax)
	movq	8(%rcx), %rdx
	leaq	(,%rdx,8), %rsi
	addq	(%rcx), %rsi
	addq	$8, %rax
	cmpq	%rsi, %rax
	jb	.LBB31_18
###SPA### trampoline_fmt_64
.LBB31_20:
###SPA## trampoline_fmt_64
	addq	$-1, %rdx
	movq	%rdx, 8(%rcx)
	movq	%r15, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT # TAILCALL
.LBB31_5:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%rax, %r9
	leaq	(%r8,%r9,8), %rax
	addq	$8, %rax
	leaq	(%r8,%rdx,8), %rcx
	cmpq	%rcx, %rax
	jb	.LBB31_11
###SPA### trampoline_fmt_64
	jmp	.LBB31_13
.Lfunc_end31:
	.size	_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE, .Lfunc_end31-_ZN21ProcessCodeSegmentMap6removeEPKN2js4wasm11CodeSegmentE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE,"ax",@progbits
	.hidden	_ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE # -- Begin function _ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE
	.globl	_ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE
	.p2align	4, 0x90
	.type	_ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE,@function
_ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE: # @_ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	lock		addq	$1, _ZL17sNumActiveLookups(%rip)
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rcx
	testq	%rcx, %rcx
	je	.LBB32_11
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	96(%rcx), %rdx
	movq	8(%rdx), %rcx
	testq	%rcx, %rcx
	je	.LBB32_9
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rdi, %r9
	movq	(%rdx), %r8
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB32_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rcx, %rdi
	subq	%rsi, %rdi
	shrq	%rdi
	addq	%rsi, %rdi
	movq	(%r8,%rdi,8), %rbx
	movq	(%rbx), %rdx
	cmpq	%r9, %rdx
	ja	.LBB32_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB32_3 Depth=1
	movl	16(%rbx), %eax
	addq	%rdx, %rax
	cmpq	%r9, %rax
	ja	.LBB32_12
###SPA### trampoline_fmt_64
.LBB32_5:                               #   in Loop: Header=BB32_3 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%r9, %rdx
	ja	.LBB32_6
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB32_3 Depth=1
	addq	$1, %rdi
	movq	%rdi, %rsi
	cmpq	%rsi, %rcx
	jne	.LBB32_3
###SPA### trampoline_fmt_64
	jmp	.LBB32_9
	.p2align	4, 0x90
.LBB32_6:                               #   in Loop: Header=BB32_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rdi, %rcx
	cmpq	%rsi, %rcx
	jne	.LBB32_3
###SPA### trampoline_fmt_64
.LBB32_9:
###SPA## trampoline_fmt_64
	testq	%r14, %r14
	je	.LBB32_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	$0, (%r14)
.LBB32_11:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
.LBB32_17:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB32_12:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	testq	%r14, %r14
	je	.LBB32_17
###SPA### trampoline_fmt_64
# %bb.13:
	cmpl	$1, 20(%rbx)
	jne	.LBB32_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	%rbx, %rdi
	movq	%r9, %rsi
	callq	_ZNK2js4wasm13ModuleSegment11lookupRangeEPKv
	jmp	.LBB32_16
.LBB32_15:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%r9, %rsi
	callq	_ZNK2js4wasm15LazyStubSegment11lookupRangeEPKv
.LBB32_16:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	jmp	.LBB32_17
.Lfunc_end32:
	.size	_ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE, .Lfunc_end32-_ZN2js4wasm17LookupCodeSegmentEPKvPPKNS0_9CodeRangeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE,"ax",@progbits
	.hidden	_ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE # -- Begin function _ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE
	.globl	_ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE
	.p2align	4, 0x90
	.type	_ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE,@function
_ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE: # @_ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	lock		addq	$1, _ZL17sNumActiveLookups(%rip)
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rcx
	testq	%rcx, %rcx
	je	.LBB33_11
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	96(%rcx), %rdx
	movq	8(%rdx), %rcx
	testq	%rcx, %rcx
	je	.LBB33_9
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rdi, %r9
	movq	(%rdx), %r8
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB33_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rcx, %rdi
	subq	%rsi, %rdi
	shrq	%rdi
	addq	%rsi, %rdi
	movq	(%r8,%rdi,8), %rbx
	movq	(%rbx), %rdx
	cmpq	%r9, %rdx
	ja	.LBB33_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB33_3 Depth=1
	movl	16(%rbx), %eax
	addq	%rdx, %rax
	cmpq	%r9, %rax
	ja	.LBB33_12
###SPA### trampoline_fmt_64
.LBB33_5:                               #   in Loop: Header=BB33_3 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%r9, %rdx
	ja	.LBB33_6
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB33_3 Depth=1
	addq	$1, %rdi
	movq	%rdi, %rsi
	cmpq	%rsi, %rcx
	jne	.LBB33_3
###SPA### trampoline_fmt_64
	jmp	.LBB33_9
	.p2align	4, 0x90
.LBB33_6:                               #   in Loop: Header=BB33_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rdi, %rcx
	cmpq	%rsi, %rcx
	jne	.LBB33_3
###SPA### trampoline_fmt_64
.LBB33_9:
###SPA## trampoline_fmt_64
	testq	%r14, %r14
	je	.LBB33_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	$0, (%r14)
.LBB33_11:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	xorl	%eax, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB33_12:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	testq	%r14, %r14
	je	.LBB33_17
###SPA### trampoline_fmt_64
# %bb.13:
	cmpl	$1, 20(%rbx)
	jne	.LBB33_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	%rbx, %rdi
	movq	%r9, %rsi
	callq	_ZNK2js4wasm13ModuleSegment11lookupRangeEPKv
	jmp	.LBB33_16
.LBB33_15:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%r9, %rsi
	callq	_ZNK2js4wasm15LazyStubSegment11lookupRangeEPKv
.LBB33_16:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
.LBB33_17:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	movq	%rbx, %rdi
	callq	_ZNK2js4wasm11CodeSegment4codeEv
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end33:
	.size	_ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE, .Lfunc_end33-_ZN2js4wasm10LookupCodeEPKvPPKNS0_9CodeRangeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm14InCompiledCodeEPv,"ax",@progbits
	.hidden	_ZN2js4wasm14InCompiledCodeEPv # -- Begin function _ZN2js4wasm14InCompiledCodeEPv
	.globl	_ZN2js4wasm14InCompiledCodeEPv
	.p2align	4, 0x90
	.type	_ZN2js4wasm14InCompiledCodeEPv,@function
_ZN2js4wasm14InCompiledCodeEPv:         # @_ZN2js4wasm14InCompiledCodeEPv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	lock		addq	$1, _ZL17sNumActiveLookups(%rip)
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rax
	testq	%rax, %rax
	je	.LBB34_9
###SPA### trampoline_fmt_64
# %bb.1:
	movq	96(%rax), %rcx
	movq	8(%rcx), %r9
	testq	%r9, %r9
	je	.LBB34_9
###SPA### trampoline_fmt_64
# %bb.2:
	movq	(%rcx), %r8
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB34_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r9, %rsi
	subq	%rdx, %rsi
	shrq	%rsi
	addq	%rdx, %rsi
	movq	(%r8,%rsi,8), %rax
	movq	(%rax), %rcx
	cmpq	%rdi, %rcx
	ja	.LBB34_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB34_3 Depth=1
	movl	16(%rax), %eax
	addq	%rcx, %rax
	cmpq	%rdi, %rax
	ja	.LBB34_12
###SPA### trampoline_fmt_64
.LBB34_5:                               #   in Loop: Header=BB34_3 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rdi, %rcx
	ja	.LBB34_6
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB34_3 Depth=1
	addq	$1, %rsi
	movq	%rsi, %rdx
	cmpq	%rdx, %r9
	jne	.LBB34_3
###SPA### trampoline_fmt_64
	jmp	.LBB34_9
	.p2align	4, 0x90
.LBB34_6:                               #   in Loop: Header=BB34_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rsi, %r9
	cmpq	%rdx, %r9
	jne	.LBB34_3
###SPA### trampoline_fmt_64
.LBB34_9:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	leaq	8(%rsp), %rsi
	movq	%rsp, %rdx
	callq	_ZN2js4wasm18LookupBuiltinThunkEPvPPKNS0_9CodeRangeEPPh
	movq	%fs:40, %rcx
	cmpq	16(%rsp), %rcx
	jne	.LBB34_11
###SPA### trampoline_fmt_64
.LBB34_13:
###SPA## trampoline_fmt_64
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB34_12:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	movb	$1, %al
	movq	%fs:40, %rcx
	cmpq	16(%rsp), %rcx
	je	.LBB34_13
###SPA### trampoline_fmt_64
.LBB34_11:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end34:
	.size	_ZN2js4wasm14InCompiledCodeEPv, .Lfunc_end34-_ZN2js4wasm14InCompiledCodeEPv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js13ExclusiveDataI12ReadLockFlagED2Ev,"axG",@progbits,_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev,comdat
	.hidden	_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev # -- Begin function _ZN2js13ExclusiveDataI12ReadLockFlagED2Ev
	.weak	_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev
	.p2align	4, 0x90
	.type	_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev,@function
_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev: # @_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	jmp	_ZN7mozilla6detail9MutexImplD2Ev@PLT # TAILCALL
.Lfunc_end35:
	.size	_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev, .Lfunc_end35-_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm17DisableHugeMemoryEv,"ax",@progbits
	.hidden	_ZN2js4wasm17DisableHugeMemoryEv # -- Begin function _ZN2js4wasm17DisableHugeMemoryEv
	.globl	_ZN2js4wasm17DisableHugeMemoryEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm17DisableHugeMemoryEv,@function
_ZN2js4wasm17DisableHugeMemoryEv:       # @_ZN2js4wasm17DisableHugeMemoryEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	leaq	sHugeMemoryEnabled(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	cmpb	$0, sHugeMemoryEnabled+41(%rip)
	je	.LBB36_2
###SPA### trampoline_fmt_64
# %bb.1:
	xorl	%ebx, %ebx
	jmp	.LBB36_3
.LBB36_2:
###SPA## trampoline_fmt_64
	movb	$0, sHugeMemoryEnabled+40(%rip)
	movb	$1, %bl
.LBB36_3:
###SPA## trampoline_fmt_64
	leaq	sHugeMemoryEnabled(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movl	%ebx, %eax
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end36:
	.size	_ZN2js4wasm17DisableHugeMemoryEv, .Lfunc_end36-_ZN2js4wasm17DisableHugeMemoryEv
	.cfi_endproc
                                        # -- End function
	.section	.text._Z19ConfigureHugeMemoryv,"ax",@progbits
	.hidden	_Z19ConfigureHugeMemoryv # -- Begin function _Z19ConfigureHugeMemoryv
	.globl	_Z19ConfigureHugeMemoryv
	.p2align	4, 0x90
	.type	_Z19ConfigureHugeMemoryv,@function
_Z19ConfigureHugeMemoryv:               # @_Z19ConfigureHugeMemoryv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	_ZN2js2gc17SystemAddressBitsEv
	cmpq	$38, %rax
	jb	.LBB37_5
###SPA### trampoline_fmt_64
# %bb.1:
	callq	_ZN2js2gc18VirtualMemoryLimitEv
	cmpq	$-1, %rax
	je	.LBB37_3
###SPA### trampoline_fmt_64
# %bb.2:
	callq	_ZN2js2gc18VirtualMemoryLimitEv
	shrq	$38, %rax
	jne	.LBB37_3
###SPA### trampoline_fmt_64
.LBB37_5:
###SPA## trampoline_fmt_64
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB37_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	sHugeMemoryEnabled(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	cmpb	$0, sHugeMemoryEnabled+41(%rip)
	jne	.LBB37_6
###SPA### trampoline_fmt_64
# %bb.4:
	movb	$1, sHugeMemoryEnabled+40(%rip)
	leaq	sHugeMemoryEnabled(%rip), %rdi
	popq	%rax
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT # TAILCALL
.LBB37_6:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	.L.str.22(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$366, 0                 # imm = 0x16E
	callq	abort@PLT
.Lfunc_end37:
	.size	_Z19ConfigureHugeMemoryv, .Lfunc_end37-_Z19ConfigureHugeMemoryv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm4InitEv,"ax",@progbits
	.hidden	_ZN2js4wasm4InitEv      # -- Begin function _ZN2js4wasm4InitEv
	.globl	_ZN2js4wasm4InitEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm4InitEv,@function
_ZN2js4wasm4InitEv:                     # @_ZN2js4wasm4InitEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rax
	testq	%rax, %rax
	jne	.LBB38_11
###SPA### trampoline_fmt_64
# %bb.1:
	callq	_ZN2js2gc17SystemAddressBitsEv
	cmpq	$38, %rax
	jb	.LBB38_6
###SPA### trampoline_fmt_64
# %bb.2:
	callq	_ZN2js2gc18VirtualMemoryLimitEv
	cmpq	$-1, %rax
	je	.LBB38_4
###SPA### trampoline_fmt_64
# %bb.3:
	callq	_ZN2js2gc18VirtualMemoryLimitEv
	shrq	$38, %rax
	je	.LBB38_6
###SPA### trampoline_fmt_64
.LBB38_4:
###SPA## trampoline_fmt_64
	leaq	sHugeMemoryEnabled(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	cmpb	$0, sHugeMemoryEnabled+41(%rip)
	jne	.LBB38_12
###SPA### trampoline_fmt_64
# %bb.5:
	movb	$1, sHugeMemoryEnabled+40(%rip)
	leaq	sHugeMemoryEnabled(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
.LBB38_6:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movl	$104, %esi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB38_9
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rax, %rbx
	movq	%rax, %rdi
	callq	_ZN7mozilla6detail9MutexImplC2Ev@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, 48(%rbx)
	movq	$8, 40(%rbx)
	leaq	40(%rbx), %rax
	movq	%rbx, %rcx
	addq	$64, %rcx
	movups	%xmm0, 72(%rbx)
	movq	$8, 64(%rbx)
	movq	%rax, 88(%rbx)
	movq	%rcx, 96(%rbx)
	xchgq	%rbx, _ZL22sProcessCodeSegmentMap(%rip)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB38_10
###SPA### trampoline_fmt_64
# %bb.8:
	movb	$1, %al
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB38_11:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	leaq	.L.str.23(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$371, 0                 # imm = 0x173
	callq	abort@PLT
.LBB38_9:
###SPA## trampoline_fmt_64
	leaq	.L.str.24(%rip), %rsi
	movq	%rsp, %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.LBB38_10:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB38_12:
###SPA## trampoline_fmt_64
	leaq	.L.str.22(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$366, 0                 # imm = 0x16E
	callq	abort@PLT
.Lfunc_end38:
	.size	_ZN2js4wasm4InitEv, .Lfunc_end38-_ZN2js4wasm4InitEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm8ShutDownEv,"ax",@progbits
	.hidden	_ZN2js4wasm8ShutDownEv  # -- Begin function _ZN2js4wasm8ShutDownEv
	.globl	_ZN2js4wasm8ShutDownEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm8ShutDownEv,@function
_ZN2js4wasm8ShutDownEv:                 # @_ZN2js4wasm8ShutDownEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	_ZN9JSRuntime17liveRuntimesCountE(%rip), %rax
	testq	%rax, %rax
	je	.LBB39_1
###SPA### trampoline_fmt_64
# %bb.11:
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB39_1:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rbx
	testq	%rbx, %rbx
	je	.LBB39_12
###SPA### trampoline_fmt_64
# %bb.2:
	xorl	%eax, %eax
	xchgq	%rax, _ZL22sProcessCodeSegmentMap(%rip)
	.p2align	4, 0x90
.LBB39_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	_ZL17sNumActiveLookups(%rip), %rax
	testq	%rax, %rax
	jne	.LBB39_3
###SPA### trampoline_fmt_64
# %bb.4:
	callq	_ZN2js4wasm20ReleaseBuiltinThunksEv
	movq	_ZL17sNumActiveLookups(%rip), %rax
	testq	%rax, %rax
	jne	.LBB39_13
###SPA### trampoline_fmt_64
# %bb.5:
	movq	$0, 48(%rbx)
	movq	40(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB39_7
###SPA### trampoline_fmt_64
# %bb.6:
	callq	free@PLT
	movq	$8, 40(%rbx)
	movq	$0, 56(%rbx)
.LBB39_7:
###SPA## trampoline_fmt_64
	movq	$0, 72(%rbx)
	movq	64(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB39_10
###SPA### trampoline_fmt_64
# %bb.8:
	callq	free@PLT
	movq	$8, 64(%rbx)
	movq	$0, 80(%rbx)
	movq	40(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB39_10
###SPA### trampoline_fmt_64
# %bb.9:
	callq	free@PLT
.LBB39_10:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN7mozilla6detail9MutexImplD2Ev@PLT
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB39_12:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	.L.str.21(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$400, 0                 # imm = 0x190
	callq	abort@PLT
.LBB39_13:
###SPA## trampoline_fmt_64
	leaq	.L.str.297(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$128, 0
	callq	abort@PLT
.Lfunc_end39:
	.size	_ZN2js4wasm8ShutDownEv, .Lfunc_end39-_ZN2js4wasm8ShutDownEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm5RealmC2EP9JSRuntime,"ax",@progbits
	.hidden	_ZN2js4wasm5RealmC2EP9JSRuntime # -- Begin function _ZN2js4wasm5RealmC2EP9JSRuntime
	.globl	_ZN2js4wasm5RealmC2EP9JSRuntime
	.p2align	4, 0x90
	.type	_ZN2js4wasm5RealmC2EP9JSRuntime,@function
_ZN2js4wasm5RealmC2EP9JSRuntime:        # @_ZN2js4wasm5RealmC2EP9JSRuntime
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	%rsi, (%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdi)
	movq	$8, 8(%rdi)
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end40:
	.size	_ZN2js4wasm5RealmC2EP9JSRuntime, .Lfunc_end40-_ZN2js4wasm5RealmC2EP9JSRuntime
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm5RealmD2Ev,"ax",@progbits
	.hidden	_ZN2js4wasm5RealmD2Ev   # -- Begin function _ZN2js4wasm5RealmD2Ev
	.globl	_ZN2js4wasm5RealmD2Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm5RealmD2Ev,@function
_ZN2js4wasm5RealmD2Ev:                  # @_ZN2js4wasm5RealmD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	8(%rdi), %rdi
	cmpq	$8, %rdi
	je	.LBB41_1
###SPA### trampoline_fmt_64
# %bb.2:
	jmp	free@PLT                # TAILCALL
.LBB41_1:
###SPA## trampoline_fmt_64
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end41:
	.size	_ZN2js4wasm5RealmD2Ev, .Lfunc_end41-_ZN2js4wasm5RealmD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE,"ax",@progbits
	.hidden	_ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE # -- Begin function _ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE
	.globl	_ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE
	.p2align	4, 0x90
	.type	_ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE,@function
_ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE: # @_ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movq	%rsi, 8(%rsp)
	movq	16(%rdi), %r12
	testq	%r12, %r12
	je	.LBB42_11
###SPA### trampoline_fmt_64
# %bb.1:
	xorl	%r13d, %r13d
	leaq	8(%rsp), %r14
	.p2align	4, 0x90
.LBB42_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rbx
	subq	%r13, %rbx
	shrq	%rbx
	addq	%r13, %rbx
	movq	8(%r15), %rax
	movq	(%rax,%rbx,8), %rsi
	movq	%r14, %rdi
	callq	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	testl	%eax, %eax
	je	.LBB42_7
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB42_2 Depth=1
	testl	%eax, %eax
	js	.LBB42_4
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB42_2 Depth=1
	addq	$1, %rbx
	movq	%rbx, %r13
	cmpq	%r13, %r12
	jne	.LBB42_2
###SPA### trampoline_fmt_64
	jmp	.LBB42_11
	.p2align	4, 0x90
.LBB42_4:                               #   in Loop: Header=BB42_2 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %r12
	cmpq	%r13, %r12
	jne	.LBB42_2
###SPA### trampoline_fmt_64
	jmp	.LBB42_11
.LBB42_7:
###SPA## trampoline_fmt_64
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	leaq	(%rdx,%rbx,8), %rax
	addq	$8, %rax
	leaq	(%rdx,%rcx,8), %rdx
	cmpq	%rdx, %rax
	jae	.LBB42_10
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB42_8:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax), %rcx
	movq	%rcx, -8(%rax)
	movq	16(%r15), %rcx
	leaq	(,%rcx,8), %rdx
	addq	8(%r15), %rdx
	addq	$8, %rax
	cmpq	%rdx, %rax
	jb	.LBB42_8
###SPA### trampoline_fmt_64
.LBB42_10:
###SPA## trampoline_fmt_64
	addq	$-1, %rcx
	movq	%rcx, 16(%r15)
.LBB42_11:
###SPA## trampoline_fmt_64
	movq	(%r15), %r12
	leaq	18904(%r12), %r14
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movq	18952(%r12), %r13
	testq	%r13, %r13
	je	.LBB42_22
###SPA### trampoline_fmt_64
# %bb.12:
	xorl	%ebx, %ebx
	leaq	8(%rsp), %r15
	.p2align	4, 0x90
.LBB42_13:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r13, %rbp
	subq	%rbx, %rbp
	shrq	%rbp
	addq	%rbx, %rbp
	movq	18944(%r12), %rax
	movq	(%rax,%rbp,8), %rsi
	movq	%r15, %rdi
	callq	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	testl	%eax, %eax
	je	.LBB42_18
###SPA### trampoline_fmt_64
# %bb.14:                               #   in Loop: Header=BB42_13 Depth=1
	testl	%eax, %eax
	js	.LBB42_15
###SPA### trampoline_fmt_64
# %bb.16:                               #   in Loop: Header=BB42_13 Depth=1
	addq	$1, %rbp
	movq	%rbp, %rbx
	cmpq	%rbx, %r13
	jne	.LBB42_13
###SPA### trampoline_fmt_64
	jmp	.LBB42_22
	.p2align	4, 0x90
.LBB42_15:                              #   in Loop: Header=BB42_13 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %r13
	cmpq	%rbx, %r13
	jne	.LBB42_13
###SPA### trampoline_fmt_64
	jmp	.LBB42_22
.LBB42_18:
###SPA## trampoline_fmt_64
	movq	18944(%r12), %rdx
	movq	18952(%r12), %rcx
	leaq	(%rdx,%rbp,8), %rax
	addq	$8, %rax
	leaq	(%rdx,%rcx,8), %rdx
	cmpq	%rdx, %rax
	jae	.LBB42_21
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB42_19:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax), %rcx
	movq	%rcx, -8(%rax)
	movq	18952(%r12), %rcx
	leaq	(,%rcx,8), %rdx
	addq	18944(%r12), %rdx
	addq	$8, %rax
	cmpq	%rdx, %rax
	jb	.LBB42_19
###SPA### trampoline_fmt_64
.LBB42_21:
###SPA## trampoline_fmt_64
	addq	$-1, %rcx
	movq	%rcx, 18952(%r12)
.LBB42_22:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB42_24
###SPA### trampoline_fmt_64
# %bb.23:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB42_24:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end42:
	.size	_ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE, .Lfunc_end42-_ZN2js4wasm5Realm18unregisterInstanceERNS0_8InstanceE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm5Realm21ensureProfilingLabelsEb,"ax",@progbits
	.hidden	_ZN2js4wasm5Realm21ensureProfilingLabelsEb # -- Begin function _ZN2js4wasm5Realm21ensureProfilingLabelsEb
	.globl	_ZN2js4wasm5Realm21ensureProfilingLabelsEb
	.p2align	4, 0x90
	.type	_ZN2js4wasm5Realm21ensureProfilingLabelsEb,@function
_ZN2js4wasm5Realm21ensureProfilingLabelsEb: # @_ZN2js4wasm5Realm21ensureProfilingLabelsEb
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	16(%rdi), %r14
	testq	%r14, %r14
	je	.LBB43_3
###SPA### trampoline_fmt_64
# %bb.1:
	movq	8(%rdi), %r15
	shlq	$3, %r14
	xorl	%ebx, %ebx
	movzbl	%sil, %ebp
	.p2align	4, 0x90
.LBB43_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r15,%rbx), %rdi
	movl	%ebp, %esi
	callq	_ZNK2js4wasm8Instance21ensureProfilingLabelsEb
	addq	$8, %rbx
	cmpq	%rbx, %r14
	jne	.LBB43_2
###SPA### trampoline_fmt_64
.LBB43_3:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end43:
	.size	_ZN2js4wasm5Realm21ensureProfilingLabelsEb, .Lfunc_end43-_ZN2js4wasm5Realm21ensureProfilingLabelsEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm,"ax",@progbits
	.hidden	_ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm # -- Begin function _ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm
	.globl	_ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm
	.p2align	4, 0x90
	.type	_ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm,@function
_ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm: # @_ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdx, %rbx
	movq	8(%rdi), %rdi
	cmpq	$8, %rdi
	je	.LBB44_1
###SPA### trampoline_fmt_64
# %bb.2:
	callq	*%rsi
	addq	%rax, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB44_1:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	%rax, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end44:
	.size	_ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm, .Lfunc_end44-_ZN2js4wasm5Realm22addSizeOfExcludingThisEPFmPKvEPm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm20InterruptRunningCodeEP9JSContext,"ax",@progbits
	.hidden	_ZN2js4wasm20InterruptRunningCodeEP9JSContext # -- Begin function _ZN2js4wasm20InterruptRunningCodeEP9JSContext
	.globl	_ZN2js4wasm20InterruptRunningCodeEP9JSContext
	.p2align	4, 0x90
	.type	_ZN2js4wasm20InterruptRunningCodeEP9JSContext,@function
_ZN2js4wasm20InterruptRunningCodeEP9JSContext: # @_ZN2js4wasm20InterruptRunningCodeEP9JSContext
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	192(%rdi), %rbx
	leaq	18904(%rbx), %r14
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movq	18952(%rbx), %r12
	testq	%r12, %r12
	je	.LBB45_3
###SPA### trampoline_fmt_64
# %bb.1:
	movq	18944(%rbx), %r15
	shlq	$3, %r12
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB45_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r15,%rbx), %rax
	movq	48(%rax), %rdi
	callq	_ZN2js4wasm7TlsData12setInterruptEv
	addq	$8, %rbx
	cmpq	%rbx, %r12
	jne	.LBB45_2
###SPA### trampoline_fmt_64
.LBB45_3:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT # TAILCALL
.Lfunc_end45:
	.size	_ZN2js4wasm20InterruptRunningCodeEP9JSContext, .Lfunc_end45-_ZN2js4wasm20InterruptRunningCodeEP9JSContext
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm19ResetInterruptStateEP9JSContext,"ax",@progbits
	.hidden	_ZN2js4wasm19ResetInterruptStateEP9JSContext # -- Begin function _ZN2js4wasm19ResetInterruptStateEP9JSContext
	.globl	_ZN2js4wasm19ResetInterruptStateEP9JSContext
	.p2align	4, 0x90
	.type	_ZN2js4wasm19ResetInterruptStateEP9JSContext,@function
_ZN2js4wasm19ResetInterruptStateEP9JSContext: # @_ZN2js4wasm19ResetInterruptStateEP9JSContext
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	movq	192(%rdi), %rbx
	leaq	18904(%rbx), %r14
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	movq	18952(%rbx), %r13
	testq	%r13, %r13
	je	.LBB46_3
###SPA### trampoline_fmt_64
# %bb.1:
	movq	18944(%rbx), %r12
	shlq	$3, %r13
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB46_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r12,%rbx), %rax
	movq	48(%rax), %rdi
	movq	%r15, %rsi
	callq	_ZN2js4wasm7TlsData14resetInterruptEP9JSContext
	addq	$8, %rbx
	cmpq	%rbx, %r13
	jne	.LBB46_2
###SPA### trampoline_fmt_64
.LBB46_3:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT # TAILCALL
.Lfunc_end46:
	.size	_ZN2js4wasm19ResetInterruptStateEP9JSContext, .Lfunc_end46-_ZN2js4wasm19ResetInterruptStateEP9JSContext
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js13ExclusiveDataI12InstallStateED2Ev,"axG",@progbits,_ZN2js13ExclusiveDataI12InstallStateED2Ev,comdat
	.hidden	_ZN2js13ExclusiveDataI12InstallStateED2Ev # -- Begin function _ZN2js13ExclusiveDataI12InstallStateED2Ev
	.weak	_ZN2js13ExclusiveDataI12InstallStateED2Ev
	.p2align	4, 0x90
	.type	_ZN2js13ExclusiveDataI12InstallStateED2Ev,@function
_ZN2js13ExclusiveDataI12InstallStateED2Ev: # @_ZN2js13ExclusiveDataI12InstallStateED2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	jmp	_ZN7mozilla6detail9MutexImplD2Ev@PLT # TAILCALL
.Lfunc_end47:
	.size	_ZN2js13ExclusiveDataI12InstallStateED2Ev, .Lfunc_end47-_ZN2js13ExclusiveDataI12InstallStateED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm32EnsureEagerProcessSignalHandlersEv,"ax",@progbits
	.hidden	_ZN2js4wasm32EnsureEagerProcessSignalHandlersEv # -- Begin function _ZN2js4wasm32EnsureEagerProcessSignalHandlersEv
	.globl	_ZN2js4wasm32EnsureEagerProcessSignalHandlersEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm32EnsureEagerProcessSignalHandlersEv,@function
_ZN2js4wasm32EnsureEagerProcessSignalHandlersEv: # @_ZN2js4wasm32EnsureEagerProcessSignalHandlersEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$320, %rsp              # imm = 0x140
	.cfi_def_cfa_offset 336
	.cfi_offset %rbx, -16
	movq	%fs:40, %rax
	movq	%rax, 312(%rsp)
	leaq	_ZL18sEagerInstallState(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	cmpb	$0, _ZL18sEagerInstallState+40(%rip)
	jne	.LBB48_5
###SPA### trampoline_fmt_64
# %bb.1:
	movb	$1, _ZL18sEagerInstallState+40(%rip)
	cmpb	$0, _ZL18sEagerInstallState+41(%rip)
	jne	.LBB48_7
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$1207959556, 296(%rsp)  # imm = 0x48000004
	leaq	_ZL15WasmTrapHandleriP9siginfo_tPv(%rip), %rbx
	movq	%rbx, 160(%rsp)
	leaq	168(%rsp), %rdi
	callq	sigemptyset@PLT
	leaq	_ZL16sPrevSEGVHandler(%rip), %rdx
	leaq	160(%rsp), %rsi
	movl	$11, %edi
	callq	sigaction@PLT
	testl	%eax, %eax
	jne	.LBB48_8
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$1207959556, 144(%rsp)  # imm = 0x48000004
	movq	%rbx, 8(%rsp)
	leaq	16(%rsp), %rdi
	callq	sigemptyset@PLT
	leaq	_ZL20sPrevWasmTrapHandler(%rip), %rdx
	leaq	8(%rsp), %rsi
	movl	$4, %edi
	callq	sigaction@PLT
	testl	%eax, %eax
	jne	.LBB48_9
###SPA### trampoline_fmt_64
# %bb.4:
	movb	$1, _ZL18sEagerInstallState+41(%rip)
.LBB48_5:
###SPA## trampoline_fmt_64
	leaq	_ZL18sEagerInstallState(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	movq	%fs:40, %rax
	cmpq	312(%rsp), %rax
	jne	.LBB48_6
###SPA### trampoline_fmt_64
# %bb.10:
	addq	$320, %rsp              # imm = 0x140
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB48_6:
	.cfi_def_cfa_offset 336
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB48_7:
###SPA## trampoline_fmt_64
	leaq	.L.str.26(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$993, 0                 # imm = 0x3E1
	callq	abort@PLT
.LBB48_8:
###SPA## trampoline_fmt_64
	leaq	.L.str.27(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1042, 0                # imm = 0x412
	callq	abort@PLT
.LBB48_9:
###SPA## trampoline_fmt_64
	leaq	.L.str.28(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1063, 0                # imm = 0x427
	callq	abort@PLT
.Lfunc_end48:
	.size	_ZN2js4wasm32EnsureEagerProcessSignalHandlersEv, .Lfunc_end48-_ZN2js4wasm32EnsureEagerProcessSignalHandlersEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZL15WasmTrapHandleriP9siginfo_tPv,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _ZL15WasmTrapHandleriP9siginfo_tPv
	.type	_ZL15WasmTrapHandleriP9siginfo_tPv,@function
_ZL15WasmTrapHandleriP9siginfo_tPv:     # @_ZL15WasmTrapHandleriP9siginfo_tPv
	.cfi_startproc
	movq	%gs:(8), %r11
	movq	%r11, %gs:(80)
	movq	%gs:(32), %r11
	addq	$0x800000, %r11
	subq	%rsp, %r11
	movq	%r11, %gs:(8)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movq	%rsi, %r14
	movl	%edi, %r13d
	movq	%fs:40, %rax
	movq	%rax, 64(%rsp)
	leaq	_ZL20sAlreadyHandlingTrap.0.0@TLSLD(%rip), %rdi
	callq	__tls_get_addr@PLT
	cmpb	$0, _ZL20sAlreadyHandlingTrap.0.0@DTPOFF(%rax)
	jne	.LBB49_14
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rax, %r12
	movb	$1, _ZL20sAlreadyHandlingTrap.0.0@DTPOFF(%r12)
	cmpl	$11, %r13d
	ja	.LBB49_36
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$2192, %eax             # imm = 0x890
	btl	%r13d, %eax
	jae	.LBB49_36
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%r12, %rax
	movq	_ZN2js10TlsContextE@DTPOFF(%r12), %r9
	movq	168(%r15), %rbp
	lock		addq	$1, _ZL17sNumActiveLookups(%rip)
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rax
	testq	%rax, %rax
	je	.LBB49_12
###SPA### trampoline_fmt_64
# %bb.4:
	movq	96(%rax), %rcx
	movq	8(%rcx), %rax
	testq	%rax, %rax
	je	.LBB49_12
###SPA### trampoline_fmt_64
# %bb.5:
	movq	(%rcx), %r8
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB49_6:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
	subq	%rdx, %rsi
	shrq	%rsi
	addq	%rdx, %rsi
	movq	(%r8,%rsi,8), %rbx
	movq	(%rbx), %rdi
	cmpq	%rbp, %rdi
	ja	.LBB49_8
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB49_6 Depth=1
	movl	16(%rbx), %ecx
	addq	%rdi, %rcx
	cmpq	%rbp, %rcx
	ja	.LBB49_18
###SPA### trampoline_fmt_64
.LBB49_8:                               #   in Loop: Header=BB49_6 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rbp, %rdi
	ja	.LBB49_9
###SPA### trampoline_fmt_64
# %bb.10:                               #   in Loop: Header=BB49_6 Depth=1
	addq	$1, %rsi
	movq	%rsi, %rdx
	cmpq	%rdx, %rax
	jne	.LBB49_6
###SPA### trampoline_fmt_64
	jmp	.LBB49_12
	.p2align	4, 0x90
.LBB49_9:                               #   in Loop: Header=BB49_6 Depth=1
###SPA## trampoline_fmt_64
	movq	%rsi, %rax
	cmpq	%rdx, %rax
	jne	.LBB49_6
###SPA### trampoline_fmt_64
.LBB49_12:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
.LBB49_13:
###SPA## trampoline_fmt_64
	movq	%r12, %rax
	movb	$0, _ZL20sAlreadyHandlingTrap.0.0@DTPOFF(%r12)
.LBB49_14:
###SPA## trampoline_fmt_64
	cmpl	$4, %r13d
	je	.LBB49_28
###SPA### trampoline_fmt_64
# %bb.15:
	cmpl	$7, %r13d
	je	.LBB49_27
###SPA### trampoline_fmt_64
# %bb.16:
	xorl	%eax, %eax
	cmpl	$11, %r13d
	jne	.LBB49_29
###SPA### trampoline_fmt_64
# %bb.17:
	leaq	_ZL16sPrevSEGVHandler(%rip), %rax
.LBB49_29:
###SPA## trampoline_fmt_64
	testb	$4, 136(%rax)
	jne	.LBB49_30
###SPA### trampoline_fmt_64
.LBB49_31:
###SPA## trampoline_fmt_64
	movq	(%rax), %rcx
	cmpq	$1, %rcx
	ja	.LBB49_33
###SPA### trampoline_fmt_64
# %bb.32:
	xorl	%edx, %edx
	movl	%r13d, %edi
	movq	%rax, %rsi
	callq	sigaction@PLT
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	je	.LBB49_38
###SPA### trampoline_fmt_64
	jmp	.LBB49_35
.LBB49_27:
###SPA## trampoline_fmt_64
	leaq	_ZL18sPrevSIGBUSHandler(%rip), %rax
	testb	$4, 136(%rax)
	je	.LBB49_31
###SPA### trampoline_fmt_64
.LBB49_30:
###SPA## trampoline_fmt_64
	movl	%r13d, %edi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	*(%rax)
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	jne	.LBB49_35
###SPA### trampoline_fmt_64
.LBB49_38:
###SPA## trampoline_fmt_64
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(80), %r11
	movq	%r11, %gs:(8)
	retq
.LBB49_28:
	.cfi_def_cfa_offset 128
###SPA## trampoline_fmt_64
	leaq	_ZL20sPrevWasmTrapHandler(%rip), %rax
	testb	$4, 136(%rax)
	je	.LBB49_31
###SPA### trampoline_fmt_64
	jmp	.LBB49_30
.LBB49_33:
###SPA## trampoline_fmt_64
	movl	%r13d, %edi
	callq	*%rcx
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	je	.LBB49_38
###SPA### trampoline_fmt_64
.LBB49_35:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB49_18:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	cmpl	$1, 20(%rbx)
	jne	.LBB49_13
###SPA### trampoline_fmt_64
# %bb.19:
	movq	%r9, 8(%rsp)            # 8-byte Spill
	movl	$-1, 56(%rsp)
	movq	%rbx, %rdi
	callq	_ZNK2js4wasm11CodeSegment4codeEv
	leaq	60(%rsp), %rdx
	leaq	56(%rsp), %rcx
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	_ZNK2js4wasm4Code10lookupTrapEPvPNS0_4TrapEPNS0_14BytecodeOffsetE
	testb	%al, %al
	je	.LBB49_13
###SPA### trampoline_fmt_64
# %bb.20:
	movq	120(%r15), %rax
	movq	8(%rax), %rax
	movq	16(%rax), %rax
	movq	%rax, (%rsp)            # 8-byte Spill
	movq	40(%rax), %rbp
	movq	%rbx, %rdi
	callq	_ZNK2js4wasm11CodeSegment4codeEv
	movl	60(%rsp), %esi
	cmpq	%rax, %rbp
	je	.LBB49_22
###SPA### trampoline_fmt_64
# %bb.21:
	cmpl	$7, %esi
	jne	.LBB49_37
###SPA### trampoline_fmt_64
.LBB49_22:
###SPA## trampoline_fmt_64
	cmpl	$7, %r13d
	jne	.LBB49_24
###SPA### trampoline_fmt_64
# %bb.23:
	cmpl	$4, %esi
	jne	.LBB49_13
###SPA### trampoline_fmt_64
.LBB49_24:
###SPA## trampoline_fmt_64
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	112(%rax), %rax
	movq	8(%rsp), %rcx           # 8-byte Reload
	testq	%rcx, %rcx
	je	.LBB49_26
###SPA### trampoline_fmt_64
# %bb.25:
	cmpq	%rcx, %rax
	jne	.LBB49_39
###SPA### trampoline_fmt_64
.LBB49_26:
###SPA## trampoline_fmt_64
	movq	360(%rax), %rdi
	movl	56(%rsp), %edx
	movq	120(%r15), %rax
	movq	%rax, 32(%rsp)
	movdqu	160(%r15), %xmm0
	pshufd	$78, %xmm0, %xmm0       # xmm0 = xmm0[2,3,0,1]
	movdqa	%xmm0, 16(%rsp)
	movq	$-1, 40(%rsp)
	leaq	16(%rsp), %rcx
	callq	_ZN2js3jit13JitActivation13startWasmTrapENS_4wasm4TrapEjRKN2JS22ProfilingFrameIterator13RegisterStateE
	movq	40(%rbx), %rax
	movq	%rax, 168(%r15)
	movq	%r12, %rax
	movb	$0, _ZL20sAlreadyHandlingTrap.0.0@DTPOFF(%r12)
	movq	%fs:40, %rax
	cmpq	64(%rsp), %rax
	je	.LBB49_38
###SPA### trampoline_fmt_64
	jmp	.LBB49_35
.LBB49_36:
###SPA## trampoline_fmt_64
	leaq	.L.str.58(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$930, 0                 # imm = 0x3A2
	callq	abort@PLT
.LBB49_37:
###SPA## trampoline_fmt_64
	leaq	.L.str.59(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$712, 0                 # imm = 0x2C8
	callq	abort@PLT
.LBB49_39:
###SPA## trampoline_fmt_64
	leaq	.L.str.60(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$725, 0                 # imm = 0x2D5
	callq	abort@PLT
.Lfunc_end49:
	.size	_ZL15WasmTrapHandleriP9siginfo_tPv, .Lfunc_end49-_ZL15WasmTrapHandleriP9siginfo_tPv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext,"ax",@progbits
	.hidden	_ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext # -- Begin function _ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext
	.globl	_ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext
	.p2align	4, 0x90
	.type	_ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext,@function
_ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext: # @_ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	cmpb	$0, 1564(%rdi)
	je	.LBB50_2
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$0, 1565(%rbx)
	setne	%al
                                        # kill: def $al killed $al killed $eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB50_2:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 1564(%rbx)
	cmpb	$0, 1565(%rbx)
	jne	.LBB50_12
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	_ZL18sEagerInstallState(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	cmpb	$1, _ZL18sEagerInstallState+40(%rip)
	jne	.LBB50_13
###SPA### trampoline_fmt_64
# %bb.4:
	leaq	_ZL18sEagerInstallState(%rip), %rdi
	movb	_ZL18sEagerInstallState+41(%rip), %bpl
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	testb	%bpl, %bpl
	je	.LBB50_10
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	_ZL17sLazyInstallState(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl4lockEv@PLT
	cmpb	$0, _ZL17sLazyInstallState+40(%rip)
	je	.LBB50_6
###SPA### trampoline_fmt_64
# %bb.9:
	leaq	_ZL17sLazyInstallState(%rip), %rdi
	movb	_ZL17sLazyInstallState+41(%rip), %bpl
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
	testb	%bpl, %bpl
	jne	.LBB50_8
###SPA### trampoline_fmt_64
.LBB50_10:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB50_6:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, _ZL17sLazyInstallState+40(%rip)
	cmpb	$0, _ZL17sLazyInstallState+41(%rip)
	jne	.LBB50_14
###SPA### trampoline_fmt_64
# %bb.7:
	movb	$1, _ZL17sLazyInstallState+41(%rip)
	leaq	_ZL17sLazyInstallState(%rip), %rdi
	callq	_ZN7mozilla6detail9MutexImpl6unlockEv@PLT
.LBB50_8:
###SPA## trampoline_fmt_64
	movb	$1, 1565(%rbx)
	movb	$1, %al
                                        # kill: def $al killed $al killed $eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB50_12:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	leaq	.L.str.30(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1116, 0                # imm = 0x45C
	callq	abort@PLT
.LBB50_13:
###SPA## trampoline_fmt_64
	leaq	.L.str.31(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1120, 0                # imm = 0x460
	callq	abort@PLT
.LBB50_14:
###SPA## trampoline_fmt_64
	leaq	.L.str.61(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1080, 0                # imm = 0x438
	callq	abort@PLT
.Lfunc_end50:
	.size	_ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext, .Lfunc_end50-_ZN2js4wasm24EnsureFullSignalHandlersEP9JSContext
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_,"ax",@progbits
	.hidden	_ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_ # -- Begin function _ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_
	.globl	_ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_
	.p2align	4, 0x90
	.type	_ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_,@function
_ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_: # @_ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movq	(%rdi), %rax
	lock		addq	$1, _ZL17sNumActiveLookups(%rip)
	movq	%rcx, %r14
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rcx
	testq	%rcx, %rcx
	je	.LBB51_8
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%edx, %r15d
	movq	96(%rcx), %rdx
	movq	8(%rdx), %rcx
	testq	%rcx, %rcx
	je	.LBB51_8
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rdi, %r13
	movq	%rsi, %r12
	movq	(%rdx), %r8
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB51_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rcx, %rdi
	subq	%rsi, %rdi
	shrq	%rdi
	addq	%rsi, %rdi
	movq	(%r8,%rdi,8), %rbp
	movq	(%rbp), %rbx
	cmpq	%rax, %rbx
	ja	.LBB51_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB51_3 Depth=1
	movl	16(%rbp), %edx
	addq	%rbx, %rdx
	cmpq	%rax, %rdx
	ja	.LBB51_11
###SPA### trampoline_fmt_64
.LBB51_5:                               #   in Loop: Header=BB51_3 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rax, %rbx
	ja	.LBB51_7
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB51_3 Depth=1
	addq	$1, %rdi
	movq	%rdi, %rsi
	cmpq	%rsi, %rcx
	jne	.LBB51_3
###SPA### trampoline_fmt_64
	jmp	.LBB51_8
	.p2align	4, 0x90
.LBB51_7:                               #   in Loop: Header=BB51_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rdi, %rcx
	cmpq	%rsi, %rcx
	jne	.LBB51_3
###SPA### trampoline_fmt_64
.LBB51_8:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	xorl	%eax, %eax
.LBB51_9:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rcx
	cmpq	16(%rsp), %rcx
	jne	.LBB51_17
###SPA### trampoline_fmt_64
.LBB51_10:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB51_11:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	cmpl	$1, 20(%rbp)
	jne	.LBB51_16
###SPA### trampoline_fmt_64
# %bb.12:
	movl	$-1, 8(%rsp)
	movq	%rbp, %rdi
	callq	_ZNK2js4wasm11CodeSegment4codeEv
	movq	(%r13), %rsi
	leaq	12(%rsp), %rdx
	leaq	8(%rsp), %rcx
	movq	%rax, %rdi
	callq	_ZNK2js4wasm4Code10lookupTrapEPvPNS0_4TrapEPNS0_14BytecodeOffsetE
	movl	%eax, %ecx
	xorl	%eax, %eax
	cmpl	$4, 12(%rsp)
	jne	.LBB51_9
###SPA### trampoline_fmt_64
# %bb.13:
	testb	%cl, %cl
	je	.LBB51_9
###SPA### trampoline_fmt_64
# %bb.14:
	movq	16(%r13), %rax
	movq	8(%rax), %rax
	movq	16(%rax), %rdi
	movq	%r12, %rsi
	movl	%r15d, %edx
	callq	_ZNK2js4wasm8Instance25memoryAccessInGuardRegionEPhj
	testb	%al, %al
	je	.LBB51_16
###SPA### trampoline_fmt_64
# %bb.15:
	leaq	_ZN2js10TlsContextE@TLSLD(%rip), %rdi
	callq	__tls_get_addr@PLT
	movq	_ZN2js10TlsContextE@DTPOFF(%rax), %rax
	movq	360(%rax), %rdi
	movl	8(%rsp), %edx
	movl	$4, %esi
	movq	%r13, %rcx
	callq	_ZN2js3jit13JitActivation13startWasmTrapENS_4wasm4TrapEjRKN2JS22ProfilingFrameIterator13RegisterStateE
	movq	40(%rbp), %rax
	movq	%rax, (%r14)
	movb	$1, %al
	movq	%fs:40, %rcx
	cmpq	16(%rsp), %rcx
	je	.LBB51_10
###SPA### trampoline_fmt_64
	jmp	.LBB51_17
.LBB51_16:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	16(%rsp), %rcx
	je	.LBB51_10
###SPA### trampoline_fmt_64
.LBB51_17:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end51:
	.size	_ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_, .Lfunc_end51-_ZN2js4wasm17MemoryAccessTrapsERKN2JS22ProfilingFrameIterator13RegisterStateEPhjPS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh,"ax",@progbits
	.hidden	_ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh # -- Begin function _ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh
	.globl	_ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh
	.p2align	4, 0x90
	.type	_ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh,@function
_ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh: # @_ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	movq	(%rdi), %r9
	lock		addq	$1, _ZL17sNumActiveLookups(%rip)
	movq	_ZL22sProcessCodeSegmentMap(%rip), %rcx
	testq	%rcx, %rcx
	je	.LBB52_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	96(%rcx), %rdx
	movq	8(%rdx), %rcx
	testq	%rcx, %rcx
	je	.LBB52_8
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rdi, %r15
	movq	%rsi, %r14
	movq	(%rdx), %r8
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB52_3:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rcx, %rdi
	subq	%rsi, %rdi
	shrq	%rdi
	addq	%rsi, %rdi
	movq	(%r8,%rdi,8), %rbx
	movq	(%rbx), %rdx
	cmpq	%r9, %rdx
	ja	.LBB52_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB52_3 Depth=1
	movl	16(%rbx), %eax
	addq	%rdx, %rax
	cmpq	%r9, %rax
	ja	.LBB52_10
###SPA### trampoline_fmt_64
.LBB52_5:                               #   in Loop: Header=BB52_3 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%r9, %rdx
	ja	.LBB52_7
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB52_3 Depth=1
	addq	$1, %rdi
	movq	%rdi, %rsi
	cmpq	%rsi, %rcx
	jne	.LBB52_3
###SPA### trampoline_fmt_64
	jmp	.LBB52_8
	.p2align	4, 0x90
.LBB52_7:                               #   in Loop: Header=BB52_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rdi, %rcx
	cmpq	%rsi, %rcx
	jne	.LBB52_3
###SPA### trampoline_fmt_64
.LBB52_8:
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	8(%rsp), %rcx
	jne	.LBB52_14
###SPA### trampoline_fmt_64
.LBB52_9:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB52_10:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	lock		subq	$1, _ZL17sNumActiveLookups(%rip)
	cmpl	$1, 20(%rbx)
	jne	.LBB52_13
###SPA### trampoline_fmt_64
# %bb.11:
	movl	$-1, (%rsp)
	movq	%rbx, %rdi
	callq	_ZNK2js4wasm11CodeSegment4codeEv
	movq	(%r15), %rsi
	leaq	4(%rsp), %rdx
	movq	%rsp, %rcx
	movq	%rax, %rdi
	callq	_ZNK2js4wasm4Code10lookupTrapEPvPNS0_4TrapEPNS0_14BytecodeOffsetE
	testb	%al, %al
	je	.LBB52_13
###SPA### trampoline_fmt_64
# %bb.12:
	leaq	_ZN2js10TlsContextE@TLSLD(%rip), %rdi
	callq	__tls_get_addr@PLT
	movq	_ZN2js10TlsContextE@DTPOFF(%rax), %rax
	movq	360(%rax), %rdi
	movl	4(%rsp), %esi
	movl	(%rsp), %edx
	movq	%r15, %rcx
	callq	_ZN2js3jit13JitActivation13startWasmTrapENS_4wasm4TrapEjRKN2JS22ProfilingFrameIterator13RegisterStateE
	movq	40(%rbx), %rax
	movq	%rax, (%r14)
	movb	$1, %al
	movq	%fs:40, %rcx
	cmpq	8(%rsp), %rcx
	je	.LBB52_9
###SPA### trampoline_fmt_64
	jmp	.LBB52_14
.LBB52_13:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	8(%rsp), %rcx
	je	.LBB52_9
###SPA### trampoline_fmt_64
.LBB52_14:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end52:
	.size	_ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh, .Lfunc_end52-_ZN2js4wasm24HandleIllegalInstructionERKN2JS22ProfilingFrameIterator13RegisterStateEPPh
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_,"axG",@progbits,_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_,comdat
	.hidden	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_ # -- Begin function _ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.weak	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_,@function
_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_: # @_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	%esi, %eax
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %eax
	movl	4(%rdx), %r8d
	movzbl	(%rdx), %r9d
	leaq	.L.str.62(%rip), %rsi
	movl	$3, %edx
	movl	$17, %ecx
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end53:
	.size	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_, .Lfunc_end53-_ZN2js3jit14MacroAssembler11storeDoubleINS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_,"axG",@progbits,_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_,comdat
	.hidden	_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_ # -- Begin function _ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.weak	_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_,@function
_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_: # @_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	%esi, %eax
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %eax
	movl	4(%rdx), %r10d
	movl	8(%rdx), %r8d
	movzbl	(%rdx), %r9d
	movzbl	1(%rdx), %r11d
	leaq	.L.str.62(%rip), %rsi
	movl	$3, %edx
	movl	$17, %ecx
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end54:
	.size	_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_, .Lfunc_end54-_ZN2js3jit14MacroAssembler11storeDoubleINS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_,"axG",@progbits,_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_,comdat
	.hidden	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_ # -- Begin function _ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.weak	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_,@function
_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_: # @_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	%esi, %eax
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %eax
	movl	4(%rdx), %r8d
	movzbl	(%rdx), %r9d
	leaq	.L.str.103(%rip), %rsi
	movl	$2, %edx
	movl	$17, %ecx
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end55:
	.size	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_, .Lfunc_end55-_ZN2js3jit14MacroAssembler12storeFloat32INS0_7AddressEEEvNS0_13FloatRegisterERKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_,"axG",@progbits,_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_,comdat
	.hidden	_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_ # -- Begin function _ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.weak	_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_,@function
_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_: # @_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	%esi, %eax
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %eax
	movl	4(%rdx), %r10d
	movl	8(%rdx), %r8d
	movzbl	(%rdx), %r9d
	movzbl	1(%rdx), %r11d
	leaq	.L.str.103(%rip), %rsi
	movl	$2, %edx
	movl	$17, %ecx
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end56:
	.size	_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_, .Lfunc_end56-_ZN2js3jit14MacroAssembler12storeFloat32INS0_9BaseIndexEEEvNS0_13FloatRegisterERKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2js4wasm9ABIResult4sizeEv,"ax",@progbits
	.hidden	_ZNK2js4wasm9ABIResult4sizeEv # -- Begin function _ZNK2js4wasm9ABIResult4sizeEv
	.globl	_ZNK2js4wasm9ABIResult4sizeEv
	.p2align	4, 0x90
	.type	_ZNK2js4wasm9ABIResult4sizeEv,@function
_ZNK2js4wasm9ABIResult4sizeEv:          # @_ZNK2js4wasm9ABIResult4sizeEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movl	(%rdi), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB57_2
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%ecx, %eax
.LBB57_2:
###SPA## trampoline_fmt_64
	movl	%eax, %ecx
	addb	$-124, %cl
	cmpb	$4, %cl
	jb	.LBB57_4
###SPA### trampoline_fmt_64
# %bb.3:
	cmpb	$108, %al
	jne	.LBB57_5
###SPA### trampoline_fmt_64
.LBB57_4:
###SPA## trampoline_fmt_64
	movl	$8, %eax
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB57_5:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.32(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$64, 0
	callq	abort@PLT
.Lfunc_end57:
	.size	_ZNK2js4wasm9ABIResult4sizeEv, .Lfunc_end57-_ZNK2js4wasm9ABIResult4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE,"ax",@progbits
	.hidden	_ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE # -- Begin function _ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE
	.globl	_ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE
	.p2align	4, 0x90
	.type	_ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE,@function
_ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE: # @_ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movzbl	%sil, %ecx
	movb	$108, %al
	cmpl	$123, %ecx
	jb	.LBB58_2
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%esi, %eax
.LBB58_2:
###SPA## trampoline_fmt_64
	addb	$-108, %al
	cmpb	$19, %al
	ja	.LBB58_7
###SPA### trampoline_fmt_64
# %bb.3:
	movzbl	%al, %eax
	leaq	.LJTI58_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB58_6:
###SPA## trampoline_fmt_64
	movl	%esi, 24(%rdi)
	movl	$0, 28(%rdi)
	movb	$0, 32(%rdi)
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB58_5:
###SPA## trampoline_fmt_64
	movl	%esi, 24(%rdi)
	movabsq	$137438953474, %rax     # imm = 0x2000000002
	movq	%rax, 28(%rdi)
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB58_4:
###SPA## trampoline_fmt_64
	movl	%esi, 24(%rdi)
	movq	$2, 28(%rdi)
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB58_8:
###SPA## trampoline_fmt_64
	movl	%esi, 24(%rdi)
	movl	$1, 28(%rdi)
	movb	$0, 32(%rdi)
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB58_7:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.32(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$98, 0
	callq	abort@PLT
.Lfunc_end58:
	.size	_ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE, .Lfunc_end58-_ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE
	.cfi_endproc
	.section	.rodata._ZN2js4wasm13ABIResultIter14settleRegisterENS0_7ValTypeE,"a",@progbits
	.p2align	2
.LJTI58_0:
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_5-.LJTI58_0
	.long	.LBB58_4-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
                                        # -- End function
	.section	.text._ZN2js4wasm13ABIResultIter10settleNextEv,"ax",@progbits
	.hidden	_ZN2js4wasm13ABIResultIter10settleNextEv # -- Begin function _ZN2js4wasm13ABIResultIter10settleNextEv
	.globl	_ZN2js4wasm13ABIResultIter10settleNextEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm13ABIResultIter10settleNextEv,@function
_ZN2js4wasm13ABIResultIter10settleNextEv: # @_ZN2js4wasm13ABIResultIter10settleNextEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	12(%rdi), %ecx
	movq	(%rdi), %rax
	movl	%eax, %edx
	andb	$3, %dl
	cmpb	$2, %dl
	je	.LBB59_4
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %dl
	jne	.LBB59_3
###SPA### trampoline_fmt_64
# %bb.2:
	shrq	$2, %rax
	testl	%ecx, %ecx
	je	.LBB59_6
###SPA### trampoline_fmt_64
.LBB59_15:
###SPA## trampoline_fmt_64
	movl	16(%rdi), %ecx
	movl	%eax, 24(%rdi)
	movl	$3, 28(%rdi)
	movl	%ecx, 32(%rdi)
	movzbl	%al, %esi
	movb	$108, %dl
	cmpl	$123, %esi
	jb	.LBB59_17
###SPA### trampoline_fmt_64
# %bb.16:
	movl	%eax, %edx
.LBB59_17:
###SPA## trampoline_fmt_64
	movl	%edx, %eax
	addb	$-124, %al
	cmpb	$4, %al
	jb	.LBB59_19
###SPA### trampoline_fmt_64
# %bb.18:
	cmpb	$108, %dl
	jne	.LBB59_21
###SPA### trampoline_fmt_64
.LBB59_19:
###SPA## trampoline_fmt_64
	addl	$8, %ecx
	movl	%ecx, 16(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB59_4:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%ecx, %edx
	notl	%edx
	addl	8(%rdi), %edx
	andq	$-4, %rax
	movq	(%rax), %rax
	movl	(%rax,%rdx,4), %eax
	testl	%ecx, %ecx
	jne	.LBB59_15
###SPA### trampoline_fmt_64
.LBB59_6:
###SPA## trampoline_fmt_64
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB59_8
###SPA### trampoline_fmt_64
# %bb.7:
	movl	%eax, %ecx
.LBB59_8:
###SPA## trampoline_fmt_64
	addb	$-108, %cl
	cmpb	$19, %cl
	ja	.LBB59_14
###SPA### trampoline_fmt_64
# %bb.9:
	movzbl	%cl, %ecx
	leaq	.LJTI59_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB59_13:
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movl	$0, 28(%rdi)
	movb	$0, 32(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB59_11:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movq	$2, 28(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB59_12:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movabsq	$137438953474, %rax     # imm = 0x2000000002
	movq	%rax, 28(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB59_10:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movl	$1, 28(%rdi)
	movb	$0, 32(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB59_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	.L.str.106(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1481, 0                # imm = 0x5C9
	callq	abort@PLT
.LBB59_14:
###SPA## trampoline_fmt_64
	leaq	.L.str.32(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$98, 0
	callq	abort@PLT
.LBB59_21:
###SPA## trampoline_fmt_64
	leaq	.L.str.32(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$64, 0
	callq	abort@PLT
.Lfunc_end59:
	.size	_ZN2js4wasm13ABIResultIter10settleNextEv, .Lfunc_end59-_ZN2js4wasm13ABIResultIter10settleNextEv
	.cfi_endproc
	.section	.rodata._ZN2js4wasm13ABIResultIter10settleNextEv,"a",@progbits
	.p2align	2
.LJTI59_0:
	.long	.LBB59_13-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_14-.LJTI59_0
	.long	.LBB59_12-.LJTI59_0
	.long	.LBB59_11-.LJTI59_0
	.long	.LBB59_10-.LJTI59_0
	.long	.LBB59_13-.LJTI59_0
                                        # -- End function
	.section	.text._ZN2js4wasm13ABIResultIter10settlePrevEv,"ax",@progbits
	.hidden	_ZN2js4wasm13ABIResultIter10settlePrevEv # -- Begin function _ZN2js4wasm13ABIResultIter10settlePrevEv
	.globl	_ZN2js4wasm13ABIResultIter10settlePrevEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm13ABIResultIter10settlePrevEv,@function
_ZN2js4wasm13ABIResultIter10settlePrevEv: # @_ZN2js4wasm13ABIResultIter10settlePrevEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	12(%rdi), %ecx
	movq	(%rdi), %rax
	movl	%eax, %edx
	andb	$3, %dl
	cmpb	$2, %dl
	je	.LBB60_4
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %dl
	jne	.LBB60_3
###SPA### trampoline_fmt_64
# %bb.2:
	shrq	$2, %rax
	jmp	.LBB60_5
.LBB60_4:
###SPA## trampoline_fmt_64
	andq	$-4, %rax
	movq	(%rax), %rax
	movl	(%rax,%rcx,4), %eax
.LBB60_5:
###SPA## trampoline_fmt_64
	movl	8(%rdi), %r8d
	addl	$1, %ecx
	movzbl	%al, %esi
	movb	$108, %dl
	cmpl	$123, %esi
	jb	.LBB60_7
###SPA### trampoline_fmt_64
# %bb.6:
	movl	%eax, %edx
.LBB60_7:
###SPA## trampoline_fmt_64
	cmpl	%ecx, %r8d
	jne	.LBB60_15
###SPA### trampoline_fmt_64
# %bb.8:
	addb	$-108, %dl
	cmpb	$19, %dl
	ja	.LBB60_14
###SPA### trampoline_fmt_64
# %bb.9:
	movzbl	%dl, %ecx
	leaq	.LJTI60_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB60_13:
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movl	$0, 28(%rdi)
	movb	$0, 32(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB60_15:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%edx, %ecx
	addb	$-124, %cl
	cmpb	$4, %cl
	jb	.LBB60_17
###SPA### trampoline_fmt_64
# %bb.16:
	cmpb	$108, %dl
	jne	.LBB60_19
###SPA### trampoline_fmt_64
.LBB60_17:
###SPA## trampoline_fmt_64
	movl	16(%rdi), %ecx
	addl	$-8, %ecx
	movl	%ecx, 16(%rdi)
	movl	%eax, 24(%rdi)
	movl	$3, 28(%rdi)
	movl	%ecx, 32(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB60_11:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movq	$2, 28(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB60_12:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movabsq	$137438953474, %rax     # imm = 0x2000000002
	movq	%rax, 28(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB60_10:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, 24(%rdi)
	movl	$1, 28(%rdi)
	movb	$0, 32(%rdi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB60_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	.L.str.106(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1481, 0                # imm = 0x5C9
	callq	abort@PLT
.LBB60_14:
###SPA## trampoline_fmt_64
	leaq	.L.str.32(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$98, 0
	callq	abort@PLT
.LBB60_19:
###SPA## trampoline_fmt_64
	leaq	.L.str.32(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$64, 0
	callq	abort@PLT
.Lfunc_end60:
	.size	_ZN2js4wasm13ABIResultIter10settlePrevEv, .Lfunc_end60-_ZN2js4wasm13ABIResultIter10settlePrevEv
	.cfi_endproc
	.section	.rodata._ZN2js4wasm13ABIResultIter10settlePrevEv,"a",@progbits
	.p2align	2
.LJTI60_0:
	.long	.LBB60_13-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_14-.LJTI60_0
	.long	.LBB60_12-.LJTI60_0
	.long	.LBB60_11-.LJTI60_0
	.long	.LBB60_10-.LJTI60_0
	.long	.LBB60_13-.LJTI60_0
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj
.LCPI61_0:
	.quad	9221120237041090560     # double NaN
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI61_1:
	.long	2143289344              # float NaN
	.section	.text._ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj,"ax",@progbits
	.hidden	_ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj
	.globl	_ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj
	.p2align	4, 0x90
	.type	_ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj,@function
_ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj: # @_ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %ebp
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movq	%rdx, 48(%rsp)          # 8-byte Spill
	movq	%rsi, 32(%rsp)          # 8-byte Spill
	movq	%rdi, %r13
	movq	192(%rsp), %rbx
	movq	%fs:40, %rax
	movq	%rax, 128(%rsp)
	movl	1316(%rdi), %esi
	movl	%esi, 44(%rsp)          # 4-byte Spill
	movl	%r8d, 40(%rsp)          # 4-byte Spill
	testb	%r8b, %r8b
	je	.LBB61_2
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$5, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit14MacroAssembler4PushENS0_8RegisterE
	movl	1316(%r13), %esi
.LBB61_2:
###SPA## trampoline_fmt_64
	shll	$8, %esi
	orl	$32, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit14MacroAssembler4PushENS0_5Imm32E
	movzbl	%bpl, %ebp
	movq	%r13, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit14MacroAssembler21pushFakeReturnAddressENS0_8RegisterE
	movl	%eax, (%rbx)
	movq	%r13, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit14MacroAssembler13loadJSContextENS0_8RegisterE
	leaq	736(%r13), %rax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	movq	744(%r13), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r13)
	jae	.LBB61_5
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB61_109
###SPA### trampoline_fmt_64
# %bb.4:
	movq	744(%r13), %rax
.LBB61_5:
###SPA## trampoline_fmt_64
	movq	736(%r13), %rcx
	movb	$72, (%rcx,%rax)
	movq	736(%r13), %rax
	movq	744(%r13), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r13)
	movb	$-117, 1(%rax,%rcx)
	movq	736(%r13), %rax
	movq	744(%r13), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r13)
	movb	$-20, 1(%rax,%rcx)
	addq	$1, 744(%r13)
	movq	%r13, %rdi
	movl	%ebp, %esi
	movl	%ebp, 20(%rsp)          # 4-byte Spill
	movl	%ebp, %edx
	callq	_ZN2js3jit14MacroAssembler13linkExitFrameENS0_8RegisterES2_
	movl	$8, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit14MacroAssembler4PushENS0_5Imm32E
	movl	$1, %esi
	movl	$5, %edx
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE
	movq	32(%rsp), %rdi          # 8-byte Reload
	callq	_ZL13StackArgBytesRKN2js4wasm8FuncTypeE
	movl	1316(%r13), %ebx
	addl	%eax, %ebx
	negl	%ebx
	andl	$15, %ebx
	addl	%eax, %ebx
	je	.LBB61_7
###SPA### trampoline_fmt_64
# %bb.6:
	movq	%r13, %rdi
	movl	%ebx, %esi
	callq	_ZN2js3jit14MacroAssembler15subFromStackPtrENS0_5Imm32E
	addl	%ebx, 1316(%r13)
.LBB61_7:
###SPA## trampoline_fmt_64
	movl	%ebx, 16(%rsp)          # 4-byte Spill
	leaq	112(%rsp), %rbp
	movq	%rbp, %rdi
	movq	32(%rsp), %rsi          # 8-byte Reload
	callq	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	leaq	64(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%rbp, 96(%rsp)
	movl	$0, 104(%rsp)
	movq	112(%rsp), %rax
	movq	8(%rax), %rdx
	movzbl	120(%rsp), %esi
	xorl	%ecx, %ecx
	movq	%rdx, %rdi
	addq	%rsi, %rdi
	jne	.LBB61_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	24(%rsp), %rbp          # 8-byte Reload
	movl	%ecx, %ecx
	addq	%rdx, %rsi
	cmpq	%rcx, %rsi
	jne	.LBB61_21
###SPA### trampoline_fmt_64
	jmp	.LBB61_66
.LBB61_9:
###SPA## trampoline_fmt_64
	testq	%rdx, %rdx
	movq	24(%rsp), %rbp          # 8-byte Reload
	je	.LBB61_15
###SPA### trampoline_fmt_64
# %bb.10:
	movq	(%rax), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB61_12
###SPA### trampoline_fmt_64
# %bb.11:
	movl	%eax, %ecx
.LBB61_12:
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	ja	.LBB61_20
###SPA### trampoline_fmt_64
# %bb.13:
	movzbl	%cl, %ecx
	leaq	.LJTI61_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB61_14:
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB61_20
.LBB61_15:
###SPA## trampoline_fmt_64
	movb	$24, %al
	jmp	.LBB61_20
.LBB61_16:
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB61_20
.LBB61_17:
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB61_20
.LBB61_18:
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB61_20
.LBB61_19:
###SPA## trampoline_fmt_64
	movb	$4, %al
.LBB61_20:
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	leaq	64(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	104(%rsp), %ecx
	movq	96(%rsp), %rsi
	movq	(%rsi), %rax
	movq	8(%rax), %rdx
	movzbl	8(%rsi), %esi
	movl	%ecx, %ecx
	addq	%rdx, %rsi
	cmpq	%rcx, %rsi
	je	.LBB61_66
###SPA### trampoline_fmt_64
.LBB61_21:
###SPA## trampoline_fmt_64
	leaq	.LJTI61_1(%rip), %r14
	leaq	64(%rsp), %r15
	jmp	.LBB61_31
	.p2align	4, 0x90
.LBB61_22:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax), %rax
	movl	(%rax,%rcx,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB61_24
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB61_31 Depth=1
	movl	%ecx, %eax
.LBB61_24:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %bl
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB61_64
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB61_31 Depth=1
	movzbl	%al, %eax
	leaq	.LJTI61_3(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB61_26:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %bl
	jmp	.LBB61_64
.LBB61_27:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movb	$5, %bl
	jmp	.LBB61_64
.LBB61_28:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %bl
	jmp	.LBB61_64
.LBB61_29:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %bl
	jmp	.LBB61_64
.LBB61_30:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movb	$4, %bl
	jmp	.LBB61_64
	.p2align	4, 0x90
.LBB61_31:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpl	$2, 80(%rsp)
	jne	.LBB61_36
###SPA### trampoline_fmt_64
# %bb.32:                               #   in Loop: Header=BB61_31 Depth=1
	movq	(%rbp), %rsi
	leaq	(%rcx,%rcx,2), %rdi
	movl	(%rsi,%rdi,4), %ebx
	cmpq	$4, %rbx
	ja	.LBB61_62
###SPA### trampoline_fmt_64
# %bb.33:                               #   in Loop: Header=BB61_31 Depth=1
	movl	88(%rsp), %r12d
	movslq	(%r14,%rbx,4), %rbx
	addq	%r14, %rbx
	jmpq	*%rbx
.LBB61_34:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movslq	4(%rsi,%rdi,4), %r15
	xorl	%eax, %eax
	testb	%al, %al
	jne	.LBB61_53
###SPA### trampoline_fmt_64
# %bb.35:                               #   in Loop: Header=BB61_31 Depth=1
	movw	$65, 56(%rsp)
	movb	$16, 58(%rsp)
	movl	%r12d, 60(%rsp)
	movq	%r13, %rdi
	movl	%r15d, %esi
	leaq	56(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
	jmp	.LBB61_54
	.p2align	4, 0x90
.LBB61_36:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rcx, %rdx
	je	.LBB61_62
###SPA### trampoline_fmt_64
# %bb.37:                               #   in Loop: Header=BB61_31 Depth=1
	movq	(%rax), %rax
	movl	(%rax,%rcx,4), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB61_39
###SPA### trampoline_fmt_64
# %bb.38:                               #   in Loop: Header=BB61_31 Depth=1
	movl	%eax, %ecx
.LBB61_39:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$123, %cl
	jne	.LBB61_62
###SPA### trampoline_fmt_64
	jmp	.LBB61_118
.LBB61_40:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rcx, %rdx
	je	.LBB61_116
###SPA### trampoline_fmt_64
# %bb.41:                               #   in Loop: Header=BB61_31 Depth=1
	movq	(%rax), %rax
	movl	(%rax,%rcx,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB61_43
###SPA### trampoline_fmt_64
# %bb.42:                               #   in Loop: Header=BB61_31 Depth=1
	movl	%ecx, %eax
.LBB61_43:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$124, %al
	je	.LBB61_55
###SPA### trampoline_fmt_64
# %bb.44:                               #   in Loop: Header=BB61_31 Depth=1
	cmpb	$125, %al
	jne	.LBB61_116
###SPA### trampoline_fmt_64
# %bb.45:                               #   in Loop: Header=BB61_31 Depth=1
	movl	4(%rsi,%rdi,4), %eax
	andl	$31, %eax
	movl	$2, %edx
	movl	$17, %ecx
	movl	$4, %r9d
	movq	8(%rsp), %rdi           # 8-byte Reload
	leaq	.L.str.103(%rip), %rsi
	jmp	.LBB61_56
.LBB61_46:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rcx, %rdx
	je	.LBB61_120
###SPA### trampoline_fmt_64
# %bb.47:                               #   in Loop: Header=BB61_31 Depth=1
	movq	4(%rsi,%rdi,4), %rdx
	movl	1316(%r13), %r8d
	movq	(%rax), %rax
	movl	(%rax,%rcx,4), %ecx
	movzbl	%cl, %esi
	movb	$108, %al
	cmpl	$123, %esi
	jb	.LBB61_49
###SPA### trampoline_fmt_64
# %bb.48:                               #   in Loop: Header=BB61_31 Depth=1
	movl	%ecx, %eax
.LBB61_49:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	addb	$-108, %al
	cmpb	$19, %al
	ja	.LBB61_119
###SPA### trampoline_fmt_64
# %bb.50:                               #   in Loop: Header=BB61_31 Depth=1
	movq	%rdx, %rcx
	shrq	$32, %rcx
	subl	44(%rsp), %r8d          # 4-byte Folded Reload
	addl	%ecx, %r8d
	movzbl	%al, %eax
	leaq	.LJTI61_2(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB61_51:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	andl	$31, %edx
	shll	$4, %edx
	orl	$1, %edx
	movw	%dx, 56(%rsp)
	movb	$16, 58(%rsp)
	movl	%r8d, 60(%rsp)
	movq	%r13, %rdi
	leaq	56(%rsp), %rbp
	movq	%rbp, %rsi
	movl	20(%rsp), %ebx          # 4-byte Reload
	movl	%ebx, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$65, 56(%rsp)
	movb	$16, 58(%rsp)
	movl	%r12d, 60(%rsp)
	movq	%r13, %rdi
	movl	%ebx, %esi
	movq	%rbp, %rdx
	movq	24(%rsp), %rbp          # 8-byte Reload
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB61_62
.LBB61_52:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movl	4(%rsi,%rdi,4), %esi
	movw	$65, 56(%rsp)
	movb	$16, 58(%rsp)
	movl	%r12d, 60(%rsp)
	movq	%r13, %rdi
	leaq	56(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB61_62
.LBB61_53:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movl	$11, %edx
	movq	%r13, %rdi
	movq	%r15, %rsi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movw	$65, 56(%rsp)
	movb	$16, 58(%rsp)
	movl	%r12d, 60(%rsp)
	movl	$11, %esi
	movq	%r13, %rdi
	leaq	56(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
.LBB61_54:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	leaq	64(%rsp), %r15
	jmp	.LBB61_62
.LBB61_55:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movl	4(%rsi,%rdi,4), %eax
	andl	$31, %eax
	movl	$3, %edx
	movl	$17, %ecx
	movl	$4, %r9d
	movq	8(%rsp), %rdi           # 8-byte Reload
	leaq	.L.str.62(%rip), %rsi
.LBB61_56:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movl	%r12d, %r8d
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	jmp	.LBB61_61
.LBB61_57:                              #   in Loop: Header=BB61_31 Depth=1
	.cfi_def_cfa_offset 192
###SPA## trampoline_fmt_64
	andl	$31, %edx
	shll	$4, %edx
	orl	$1, %edx
	movw	%dx, 56(%rsp)
	movb	$16, 58(%rsp)
	movl	%r8d, 60(%rsp)
	movq	%r13, %rdi
	leaq	56(%rsp), %r15
	movq	%r15, %rsi
	movl	20(%rsp), %ebx          # 4-byte Reload
	movl	%ebx, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$65, 56(%rsp)
	movb	$16, 58(%rsp)
	movl	%r12d, 60(%rsp)
	movq	%r13, %rdi
	movl	%ebx, %esi
	movq	%r15, %rdx
	leaq	64(%rsp), %r15
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB61_62
.LBB61_58:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%dl, %r9d
	movl	$3, %edx
	movl	$16, %ecx
	movq	8(%rsp), %rbx           # 8-byte Reload
	movq	%rbx, %rdi
	leaq	.L.str.62(%rip), %r15
	movq	%r15, %rsi
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	$3, %edx
	jmp	.LBB61_60
.LBB61_59:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%dl, %r9d
	movl	$2, %edx
	movl	$16, %ecx
	movq	8(%rsp), %rbx           # 8-byte Reload
	movq	%rbx, %rdi
	leaq	.L.str.103(%rip), %r15
	movq	%r15, %rsi
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	$2, %edx
.LBB61_60:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movl	$17, %ecx
	movl	$4, %r9d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	leaq	64(%rsp), %r15
	movl	%r12d, %r8d
	pushq	$15
	.cfi_adjust_cfa_offset 8
.LBB61_61:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	.p2align	4, 0x90
.LBB61_62:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movl	104(%rsp), %ecx
	addl	$1, %ecx
	movl	%ecx, 104(%rsp)
	movq	96(%rsp), %rsi
	movq	(%rsi), %rax
	movq	8(%rax), %rdx
	movzbl	8(%rsi), %esi
	addq	%rdx, %rsi
	cmpq	%rcx, %rsi
	je	.LBB61_65
###SPA### trampoline_fmt_64
# %bb.63:                               #   in Loop: Header=BB61_31 Depth=1
	movb	$24, %bl
	cmpq	%rcx, %rdx
	jne	.LBB61_22
###SPA### trampoline_fmt_64
.LBB61_64:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%bl, %esi
	movq	%r15, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	104(%rsp), %ecx
	movq	96(%rsp), %rsi
	movq	(%rsi), %rax
	movq	8(%rax), %rdx
	movzbl	8(%rsi), %esi
	addq	%rdx, %rsi
.LBB61_65:                              #   in Loop: Header=BB61_31 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rcx, %rsi
	jne	.LBB61_31
###SPA### trampoline_fmt_64
.LBB61_66:
###SPA## trampoline_fmt_64
	movq	48(%rsp), %rbx          # 8-byte Reload
	movq	48(%rbx), %rsi
	movl	$14, %edx
	movq	%r13, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movw	$225, 64(%rsp)
	movb	$16, 66(%rsp)
	movl	$0, 68(%rsp)
	leaq	64(%rsp), %rsi
	movl	$15, %edx
	movq	%r13, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	40(%rbx), %rbp
	movq	%rbp, %rdi
	callq	_ZNK2js4wasm4Code8bestTierEv
	movq	%rbp, %rdi
	movl	%eax, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	32(%rsp), %rbx          # 8-byte Reload
	movl	176(%rbx), %ecx
	movq	8(%rax), %rdx
	movq	16(%rax), %rax
	movq	8(%rdx), %rsi
	movq	64(%rdx), %rdx
	movl	(%rsi,%rcx,4), %ecx
	leaq	(%rcx,%rcx,8), %rsi
	leaq	(%rsi,%rsi,2), %rsi
	addq	%rcx, %rsi
	movzbl	20(%rdx,%rsi), %ebp
	addl	(%rdx,%rsi), %ebp
	addq	(%rax), %rbp
	leaq	64(%rsp), %rdi
	movq	%r13, %rsi
	callq	_ZN2js3jit14MacroAssembler31AutoProfilerCallInstrumentationC1ERS1_
	movq	%r13, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js3jit14MacroAssembler4callENS0_6ImmPtrE
	leaq	1312(%r13), %rbp
	movw	$80, 64(%rsp)
	movb	$16, 66(%rsp)
	movl	$0, 68(%rsp)
	leaq	64(%rsp), %rdx
	movl	$2989, %esi             # imm = 0xBAD
	movq	%r13, %rdi
	callq	_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE
	movl	$4, %esi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	cmpq	$0, 96(%rbx)
	je	.LBB61_73
###SPA### trampoline_fmt_64
# %bb.67:
	movq	88(%rbx), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	movl	16(%rsp), %ebx          # 4-byte Reload
	jb	.LBB61_69
###SPA### trampoline_fmt_64
# %bb.68:
	movl	%eax, %ecx
.LBB61_69:
###SPA## trampoline_fmt_64
	addb	$-108, %cl
	cmpb	$19, %cl
	ja	.LBB61_103
###SPA### trampoline_fmt_64
# %bb.70:
	movzbl	%cl, %ecx
	leaq	.LJTI61_4(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB61_71:
###SPA## trampoline_fmt_64
	movl	%eax, %ecx
	addb	$-111, %cl
	cmpb	$2, %cl
	jae	.LBB61_107
###SPA### trampoline_fmt_64
# %bb.72:
	movq	%r13, %rdi
	callq	_ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_
	jmp	.LBB61_103
.LBB61_73:
###SPA## trampoline_fmt_64
	movabsq	$-1829587348619264, %rax # imm = 0xFFF9800000000000
	movq	%rax, 64(%rsp)
	leaq	_ZN2js3jitL15JSReturnOperandE(%rip), %rdx
	leaq	64(%rsp), %rsi
	movq	%r13, %rdi
	callq	_ZN2js3jit14MacroAssembler9moveValueERKN2JS5ValueERKNS0_12ValueOperandE
	jmp	.LBB61_102
.LBB61_74:
###SPA## trampoline_fmt_64
	movl	$-2, 64(%rsp)
	movq	744(%r13), %rax
	movq	752(%r13), %rcx
	leaq	16(%rax), %rdx
	cmpb	$0, 1024(%r13)
	je	.LBB61_89
###SPA### trampoline_fmt_64
# %bb.75:
	cmpq	%rdx, %rcx
	jae	.LBB61_78
###SPA### trampoline_fmt_64
# %bb.76:
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB61_110
###SPA### trampoline_fmt_64
# %bb.77:
	movq	744(%r13), %rax
.LBB61_78:
###SPA## trampoline_fmt_64
	movq	736(%r13), %rcx
	movb	$-59, (%rcx,%rax)
	movq	744(%r13), %rax
	addq	$1, %rax
	movq	%rax, 744(%r13)
	movb	$-8, %bpl
	jmp	.LBB61_92
.LBB61_79:
###SPA## trampoline_fmt_64
	movl	$-2, 64(%rsp)
	cmpb	$0, 1024(%r13)
	movq	744(%r13), %rax
	je	.LBB61_93
###SPA### trampoline_fmt_64
# %bb.80:
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r13)
	jae	.LBB61_83
###SPA### trampoline_fmt_64
# %bb.81:
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB61_111
###SPA### trampoline_fmt_64
# %bb.82:
	movq	744(%r13), %rax
.LBB61_83:
###SPA## trampoline_fmt_64
	movq	736(%r13), %rcx
	movb	$-59, (%rcx,%rax)
	movq	744(%r13), %rax
	addq	$1, %rax
	movq	%rax, 744(%r13)
	movb	$-7, %bpl
	jmp	.LBB61_100
.LBB61_84:
###SPA## trampoline_fmt_64
	cmpb	$0, _ZN2js3jit10JitOptionsE+140(%rip)
	je	.LBB61_103
###SPA### trampoline_fmt_64
# %bb.85:
	movq	744(%r13), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r13)
	jae	.LBB61_88
###SPA### trampoline_fmt_64
# %bb.86:
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB61_112
###SPA### trampoline_fmt_64
# %bb.87:
	movq	744(%r13), %rax
.LBB61_88:
###SPA## trampoline_fmt_64
	movq	736(%r13), %rcx
	movb	$-117, (%rcx,%rax)
	movq	736(%r13), %rax
	movq	744(%r13), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r13)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%r13)
	jmp	.LBB61_103
.LBB61_89:
###SPA## trampoline_fmt_64
	movb	$15, %bpl
	cmpq	%rdx, %rcx
	jae	.LBB61_92
###SPA### trampoline_fmt_64
# %bb.90:
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB61_113
###SPA### trampoline_fmt_64
# %bb.91:
	movq	744(%r13), %rax
.LBB61_92:
###SPA## trampoline_fmt_64
	movq	736(%r13), %rcx
	movb	%bpl, (%rcx,%rax)
	movq	736(%r13), %rax
	movq	744(%r13), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r13)
	movb	$46, 1(%rax,%rcx)
	movq	736(%r13), %rax
	movq	744(%r13), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r13)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%r13)
	leaq	64(%rsp), %rbp
	movl	$11, %esi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movss	.LCPI61_1(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	xorl	%esi, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit17MacroAssemblerX6419loadConstantFloat32EfNS0_13FloatRegisterE
	jmp	.LBB61_101
.LBB61_93:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	cmpq	752(%r13), %rcx
	jbe	.LBB61_96
###SPA### trampoline_fmt_64
# %bb.94:
	movl	$1, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB61_114
###SPA### trampoline_fmt_64
# %bb.95:
	movq	744(%r13), %rax
.LBB61_96:
###SPA## trampoline_fmt_64
	movq	736(%r13), %rcx
	movb	$102, (%rcx,%rax)
	movq	744(%r13), %rax
	addq	$1, %rax
.LBB61_97:
###SPA## trampoline_fmt_64
	movq	%rax, 744(%r13)
	leaq	16(%rax), %rcx
	movb	$15, %bpl
	cmpq	%rcx, 752(%r13)
	jae	.LBB61_100
###SPA### trampoline_fmt_64
# %bb.98:
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB61_115
###SPA### trampoline_fmt_64
# %bb.99:
	movq	744(%r13), %rax
.LBB61_100:
###SPA## trampoline_fmt_64
	movq	736(%r13), %rcx
	movb	%bpl, (%rcx,%rax)
	movq	736(%r13), %rax
	movq	744(%r13), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r13)
	movb	$46, 1(%rax,%rcx)
	movq	736(%r13), %rax
	movq	744(%r13), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r13)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%r13)
	leaq	64(%rsp), %rbp
	movl	$11, %esi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movsd	.LCPI61_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movl	$32, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit17MacroAssemblerX6418loadConstantDoubleEdNS0_13FloatRegisterE
.LBB61_101:
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
.LBB61_102:
###SPA## trampoline_fmt_64
	movl	16(%rsp), %ebx          # 4-byte Reload
.LBB61_103:
###SPA## trampoline_fmt_64
	addl	$24, %ebx
	movq	%r13, %rdi
	movl	%ebx, %esi
	callq	_ZN2js3jit14MacroAssembler9freeStackEj
	cmpb	$0, 40(%rsp)            # 1-byte Folded Reload
	je	.LBB61_105
###SPA### trampoline_fmt_64
# %bb.104:
	movl	$5, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit14MacroAssembler3PopENS0_8RegisterE
.LBB61_105:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	128(%rsp), %rax
	jne	.LBB61_121
###SPA### trampoline_fmt_64
# %bb.106:
	addq	$136, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB61_107:
	.cfi_def_cfa_offset 192
###SPA## trampoline_fmt_64
	cmpb	$108, %al
	jne	.LBB61_103
###SPA### trampoline_fmt_64
# %bb.108:
	leaq	.L.str.44(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1596, 0                # imm = 0x63C
	callq	abort@PLT
.LBB61_109:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB61_5
.LBB61_110:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB61_78
.LBB61_111:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB61_83
.LBB61_112:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB61_88
.LBB61_113:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB61_92
.LBB61_114:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	xorl	%eax, %eax
	jmp	.LBB61_97
.LBB61_115:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB61_100
.LBB61_116:
###SPA## trampoline_fmt_64
	leaq	.L.str.37(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1481, 0                # imm = 0x5C9
	callq	abort@PLT
.LBB61_117:
###SPA## trampoline_fmt_64
	leaq	.L.str.40(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1525, 0                # imm = 0x5F5
	callq	abort@PLT
.LBB61_118:
###SPA## trampoline_fmt_64
	leaq	.L.str.35(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1450, 0                # imm = 0x5AA
	callq	abort@PLT
.LBB61_119:
###SPA## trampoline_fmt_64
	leaq	.L.str.39(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1519, 0                # imm = 0x5EF
	callq	abort@PLT
.LBB61_120:
###SPA## trampoline_fmt_64
	leaq	.L.str.38(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1516, 0                # imm = 0x5EC
	callq	abort@PLT
.LBB61_121:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB61_122:
###SPA## trampoline_fmt_64
	leaq	.L.str.44(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1600, 0                # imm = 0x640
	callq	abort@PLT
.Lfunc_end61:
	.size	_ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj, .Lfunc_end61-_ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj
	.cfi_endproc
	.section	.rodata._ZN2js4wasm25GenerateDirectCallFromJitERNS_3jit14MacroAssemblerERKNS0_10FuncExportERKNS0_8InstanceERKN7mozilla6VectorINS0_15JitCallStackArgELm4ENS_17SystemAllocPolicyEEEbNS1_8RegisterEPj,"a",@progbits
	.p2align	2
.LJTI61_0:
	.long	.LBB61_14-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_20-.LJTI61_0
	.long	.LBB61_17-.LJTI61_0
	.long	.LBB61_16-.LJTI61_0
	.long	.LBB61_18-.LJTI61_0
	.long	.LBB61_19-.LJTI61_0
.LJTI61_1:
	.long	.LBB61_34-.LJTI61_1
	.long	.LBB61_52-.LJTI61_1
	.long	.LBB61_40-.LJTI61_1
	.long	.LBB61_46-.LJTI61_1
	.long	.LBB61_117-.LJTI61_1
.LJTI61_2:
	.long	.LBB61_51-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_58-.LJTI61_2
	.long	.LBB61_59-.LJTI61_2
	.long	.LBB61_119-.LJTI61_2
	.long	.LBB61_57-.LJTI61_2
.LJTI61_3:
	.long	.LBB61_26-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_64-.LJTI61_3
	.long	.LBB61_28-.LJTI61_3
	.long	.LBB61_27-.LJTI61_3
	.long	.LBB61_29-.LJTI61_3
	.long	.LBB61_30-.LJTI61_3
.LJTI61_4:
	.long	.LBB61_71-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_122-.LJTI61_4
	.long	.LBB61_79-.LJTI61_4
	.long	.LBB61_74-.LJTI61_4
	.long	.LBB61_103-.LJTI61_4
	.long	.LBB61_84-.LJTI61_4
                                        # -- End function
	.section	.text._ZL13StackArgBytesRKN2js4wasm8FuncTypeE,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _ZL13StackArgBytesRKN2js4wasm8FuncTypeE
	.type	_ZL13StackArgBytesRKN2js4wasm8FuncTypeE,@function
_ZL13StackArgBytesRKN2js4wasm8FuncTypeE: # @_ZL13StackArgBytesRKN2js4wasm8FuncTypeE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rax
	movq	%fs:40, %rcx
	movq	%rcx, 72(%rsp)
	leaq	8(%rsp), %rbx
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	leaq	24(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%rbx, 56(%rsp)
	movl	$0, 64(%rsp)
	movq	8(%rsp), %rax
	movq	8(%rax), %rdx
	movzbl	16(%rsp), %esi
	movq	%rdx, %rcx
	addq	%rsi, %rcx
	jne	.LBB62_2
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	16(%rsp), %rcx
	xorl	%eax, %eax
	addq	%rdx, %rsi
	movl	%eax, %edx
	cmpq	%rdx, %rsi
	jne	.LBB62_15
###SPA### trampoline_fmt_64
	jmp	.LBB62_29
.LBB62_2:
###SPA## trampoline_fmt_64
	testq	%rdx, %rdx
	je	.LBB62_3
###SPA### trampoline_fmt_64
# %bb.4:
	movq	(%rax), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB62_6
###SPA### trampoline_fmt_64
# %bb.5:
	movl	%eax, %ecx
.LBB62_6:
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	ja	.LBB62_13
###SPA### trampoline_fmt_64
# %bb.7:
	movzbl	%cl, %ecx
	leaq	.LJTI62_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB62_12:
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB62_13
.LBB62_3:
###SPA## trampoline_fmt_64
	movb	$24, %al
	jmp	.LBB62_13
.LBB62_10:
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB62_13
.LBB62_11:
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB62_13
.LBB62_9:
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB62_13
.LBB62_8:
###SPA## trampoline_fmt_64
	movb	$4, %al
.LBB62_13:
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	leaq	24(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	64(%rsp), %eax
	movq	56(%rsp), %rbx
	movq	(%rbx), %rcx
	movq	8(%rcx), %rdx
	leaq	8(%rbx), %rcx
	movzbl	8(%rbx), %esi
	addq	%rdx, %rsi
	movl	%eax, %edx
	cmpq	%rdx, %rsi
	je	.LBB62_29
###SPA### trampoline_fmt_64
.LBB62_15:
###SPA## trampoline_fmt_64
	leaq	24(%rsp), %r14
	leaq	.LJTI62_1(%rip), %r15
	jmp	.LBB62_16
	.p2align	4, 0x90
.LBB62_18:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdx), %rcx
	movl	(%rcx,%rax,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB62_20
###SPA### trampoline_fmt_64
# %bb.19:                               #   in Loop: Header=BB62_16 Depth=1
	movl	%ecx, %eax
.LBB62_20:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %cl
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB62_27
###SPA### trampoline_fmt_64
# %bb.21:                               #   in Loop: Header=BB62_16 Depth=1
	movzbl	%al, %eax
	movslq	(%r15,%rax,4), %rax
	addq	%r15, %rax
	jmpq	*%rax
.LBB62_26:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %cl
	jmp	.LBB62_27
.LBB62_24:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movb	$5, %cl
	jmp	.LBB62_27
.LBB62_25:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %cl
	jmp	.LBB62_27
.LBB62_23:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %cl
	jmp	.LBB62_27
.LBB62_22:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movb	$4, %cl
	jmp	.LBB62_27
	.p2align	4, 0x90
.LBB62_16:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	addl	$1, %eax
	movl	%eax, 64(%rsp)
	movq	(%rbx), %rdx
	movq	8(%rdx), %rsi
	movzbl	(%rcx), %ecx
	addq	%rsi, %rcx
	cmpq	%rax, %rcx
	je	.LBB62_28
###SPA### trampoline_fmt_64
# %bb.17:                               #   in Loop: Header=BB62_16 Depth=1
	movb	$24, %cl
	cmpq	%rax, %rsi
	jne	.LBB62_18
###SPA### trampoline_fmt_64
.LBB62_27:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%cl, %esi
	movq	%r14, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	64(%rsp), %eax
	movq	56(%rsp), %rbx
.LBB62_28:                              #   in Loop: Header=BB62_16 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movzbl	8(%rbx), %edx
	addq	8(%rcx), %rdx
	leaq	8(%rbx), %rcx
	cmpq	%rax, %rdx
	jne	.LBB62_16
###SPA### trampoline_fmt_64
.LBB62_29:
###SPA## trampoline_fmt_64
	movl	32(%rsp), %eax
	movq	%fs:40, %rcx
	cmpq	72(%rsp), %rcx
	jne	.LBB62_31
###SPA### trampoline_fmt_64
# %bb.30:
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB62_31:
	.cfi_def_cfa_offset 112
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end62:
	.size	_ZL13StackArgBytesRKN2js4wasm8FuncTypeE, .Lfunc_end62-_ZL13StackArgBytesRKN2js4wasm8FuncTypeE
	.cfi_endproc
	.section	.rodata._ZL13StackArgBytesRKN2js4wasm8FuncTypeE,"a",@progbits
	.p2align	2
.LJTI62_0:
	.long	.LBB62_12-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_13-.LJTI62_0
	.long	.LBB62_11-.LJTI62_0
	.long	.LBB62_10-.LJTI62_0
	.long	.LBB62_9-.LJTI62_0
	.long	.LBB62_8-.LJTI62_0
.LJTI62_1:
	.long	.LBB62_26-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_27-.LJTI62_1
	.long	.LBB62_25-.LJTI62_1
	.long	.LBB62_24-.LJTI62_1
	.long	.LBB62_23-.LJTI62_1
	.long	.LBB62_22-.LJTI62_1
                                        # -- End function
	.section	.text._ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_
	.type	_ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_,@function
_ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_: # @_ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$56, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 48(%rsp)
	movb	$1, 32(%rsp)
	movl	$-2, 24(%rsp)
	movl	$-2, 16(%rsp)
	movl	$-2, 8(%rsp)
	movq	744(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rdi)
	jae	.LBB63_4
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB63_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	744(%rbx), %rax
.LBB63_4:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$72, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-123, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	leaq	24(%rsp), %r15
	movl	$5, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movabsq	$-1688849860263936, %rax # imm = 0xFFFA000000000000
	movq	%rax, 40(%rsp)
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %r12
	movq	%rbx, %rdi
	movq	%r12, %rdx
	callq	_ZN2js3jit14MacroAssembler9moveValueERKN2JS5ValueERKNS0_12ValueOperandE
	leaq	8(%rsp), %r14
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movw	$11, 40(%rsp)
	leaq	40(%rsp), %rsi
	movq	%rbx, %rdi
	movq	%r12, %rdx
	callq	_ZN2js3jit14MacroAssembler9moveValueERKNS0_20TypedOrValueRegisterERKNS0_12ValueOperandE
	movb	$14, 40(%rsp)
	movl	$40, 44(%rsp)
	leaq	16(%rsp), %r15
	movq	%r15, (%rsp)
	leaq	40(%rsp), %rcx
	movl	$4, %esi
	xorl	%edx, %edx
	movl	$3, %r8d
	xorl	%r9d, %r9d
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	32(%rsp), %edx
	movabsq	$137440002049, %rax     # imm = 0x2000100001
	movq	%rax, 40(%rsp)
	leaq	40(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	%fs:40, %rax
	cmpq	48(%rsp), %rax
	jne	.LBB63_6
###SPA### trampoline_fmt_64
# %bb.5:
	addq	$56, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB63_3:
	.cfi_def_cfa_offset 96
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB63_4
.LBB63_6:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end63:
	.size	_ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_, .Lfunc_end63-_ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE
.LCPI64_0:
	.zero	16
	.section	.text._ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE,"ax",@progbits
	.hidden	_ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE
	.globl	_ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE
	.p2align	4, 0x90
	.type	_ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE,@function
_ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE: # @_ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$2568, %rsp             # imm = 0xA08
	.cfi_def_cfa_offset 2624
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, 56(%rsp)          # 8-byte Spill
	movq	%fs:40, %rax
	movq	%rax, 2560(%rsp)
	movq	$0, 192(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 144(%rsp)
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	leaq	112(%rsp), %rbp
	movl	$4096, %esi             # imm = 0x1000
	movq	%rbp, %rdi
	callq	_ZN2js9LifoAlloc5resetEm
	movq	%rbp, 240(%rsp)
	leaq	248(%rsp), %rdi
	movq	%rbp, %rsi
	callq	_ZN2js9LifoAlloc4markEv
	leaq	352(%rsp), %rdi
	leaq	240(%rsp), %rsi
	callq	_ZN2js3jit14MacroAssemblerC2ENS1_9WasmTokenERNS0_13TempAllocatorE
	cmpq	$0, 8(%rbx)
	je	.LBB64_50
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	24(%r15), %rax
	movq	%rax, 40(%rsp)          # 8-byte Spill
	xorl	%r12d, %r12d
	leaq	352(%rsp), %r14
	leaq	288(%rsp), %r13
	movq	%rbx, 48(%rsp)          # 8-byte Spill
	.p2align	4, 0x90
.LBB64_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB64_35 Depth 2
###SPA## trampoline_fmt_64
	movq	%r15, %rbp
	movq	(%rbx), %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 80(%rsp)
	movl	$0, 96(%rsp)
	movq	56(%rsp), %rax          # 8-byte Reload
	movq	88(%rax), %rax
	movq	(%rax,%r12,8), %rax
	movl	176(%rax), %ecx
	movq	184(%rax), %rax
	movl	%ecx, 224(%rsp)
	movq	%rax, 232(%rsp)
	movq	$0, 288(%rsp)
	movq	%r14, %rdi
	leaq	224(%rsp), %rsi
	movq	%r13, %rdx
	leaq	80(%rsp), %rcx
	callq	_ZN2js4wasm24GenerateFunctionPrologueERNS_3jit14MacroAssemblerERKNS0_14FuncTypeIdDescERKN7mozilla5MaybeIjEEPNS0_11FuncOffsetsE
	leaq	(%r12,%r12,2), %rax
	shlq	$6, %rax
	movq	%rbx, 72(%rsp)          # 8-byte Spill
	movq	%rax, 64(%rsp)          # 8-byte Spill
	leaq	(%rbx,%rax), %r15
	movq	%r15, %rdi
	callq	_ZL13StackArgBytesRKN2js4wasm8FuncTypeE
                                        # kill: def $eax killed $eax def $rax
	movl	%eax, %ecx
	negl	%ecx
	andl	$15, %ecx
	leal	(%rcx,%rax), %ebx
	leal	(%rcx,%rax), %esi
	addl	$8, %esi
	xorl	%edx, %edx
	movq	%r14, %rdi
	movl	%esi, 36(%rsp)          # 4-byte Spill
	callq	_ZN2js3jit14MacroAssembler23wasmReserveStackCheckedEjNS_4wasm14BytecodeOffsetE
	movw	$65, 288(%rsp)
	movb	$16, 290(%rsp)
	movl	%ebx, 32(%rsp)          # 4-byte Spill
	movl	%ebx, 292(%rsp)
	movl	$14, %esi
	movq	%r14, %rdi
	movq	%r13, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	leaq	336(%rsp), %rbx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	movq	%r13, %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%rbx, %rsi
	movq	%rbx, 320(%rsp)
	movl	$0, 328(%rsp)
	movq	336(%rsp), %rax
	movq	8(%rax), %rdx
	movzbl	344(%rsp), %ebx
	movq	%rdx, %rcx
	addq	%rbx, %rcx
	jne	.LBB64_4
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB64_2 Depth=1
	xorl	%ecx, %ecx
	movq	%rbp, %r15
	leaq	.LJTI64_1(%rip), %rbp
	movl	%ecx, %edi
	addq	%rdx, %rbx
	cmpq	%rdi, %rbx
	jne	.LBB64_35
###SPA### trampoline_fmt_64
	jmp	.LBB64_42
	.p2align	4, 0x90
.LBB64_4:                               #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	testq	%rdx, %rdx
	je	.LBB64_10
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB64_2 Depth=1
	movq	(%rax), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB64_7
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB64_2 Depth=1
	movl	%eax, %ecx
.LBB64_7:                               #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	movq	%rbp, %r15
	ja	.LBB64_15
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB64_2 Depth=1
	movzbl	%cl, %ecx
	leaq	.LJTI64_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	leaq	.LJTI64_1(%rip), %rbp
	jmpq	*%rcx
.LBB64_9:                               #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB64_16
.LBB64_10:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$24, %al
	movq	%rbp, %r15
.LBB64_15:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	leaq	.LJTI64_1(%rip), %rbp
.LBB64_16:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	328(%rsp), %ecx
	movq	320(%rsp), %rsi
	movq	(%rsi), %rax
	movq	8(%rax), %rdx
	movzbl	8(%rsi), %ebx
	movl	%ecx, %edi
	addq	%rdx, %rbx
	cmpq	%rdi, %rbx
	je	.LBB64_42
###SPA### trampoline_fmt_64
	jmp	.LBB64_35
	.p2align	4, 0x90
.LBB64_17:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movq	(%rax), %rax
	movl	(%rax,%rdi,4), %edx
	movzbl	%dl, %esi
	movb	$108, %al
	cmpl	$123, %esi
	jb	.LBB64_19
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB64_35 Depth=2
	movl	%edx, %eax
.LBB64_19:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$3, %bl
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB64_37
###SPA### trampoline_fmt_64
# %bb.20:                               #   in Loop: Header=BB64_35 Depth=2
	movzbl	%al, %eax
	movslq	(%rbp,%rax,4), %rax
	addq	%rbp, %rax
	jmpq	*%rax
.LBB64_21:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$23, %bl
	jmp	.LBB64_37
	.p2align	4, 0x90
.LBB64_22:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movq	(%rax), %rax
	movl	(%rax,%rcx,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB64_24
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB64_35 Depth=2
	movl	%ecx, %eax
.LBB64_24:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$3, %bl
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB64_40
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB64_35 Depth=2
	movzbl	%al, %eax
	leaq	.LJTI64_2(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB64_26:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$23, %bl
	jmp	.LBB64_40
.LBB64_27:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$5, %bl
	jmp	.LBB64_37
.LBB64_28:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$5, %bl
	jmp	.LBB64_40
.LBB64_29:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$10, %bl
	jmp	.LBB64_37
.LBB64_30:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$10, %bl
	jmp	.LBB64_40
.LBB64_31:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$6, %bl
	jmp	.LBB64_37
.LBB64_32:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$6, %bl
	jmp	.LBB64_40
.LBB64_33:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$4, %bl
	jmp	.LBB64_37
.LBB64_34:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movb	$4, %bl
	jmp	.LBB64_40
	.p2align	4, 0x90
.LBB64_35:                              #   Parent Loop BB64_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	cmpl	$2, 304(%rsp)
	jne	.LBB64_38
###SPA### trampoline_fmt_64
# %bb.36:                               #   in Loop: Header=BB64_35 Depth=2
	movl	312(%rsp), %r8d
	leal	24(%r8), %ecx
	movb	$24, %bl
	cmpq	%rdi, %rdx
	jne	.LBB64_17
###SPA### trampoline_fmt_64
.LBB64_37:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	shlq	$32, %rcx
	orq	$5, %rcx
	shlq	$32, %r8
	orq	$4, %r8
	movzbl	%bl, %esi
	xorl	%edx, %edx
	movq	%r14, %rdi
	callq	_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_
	movl	328(%rsp), %ecx
	movq	320(%rsp), %rsi
.LBB64_38:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	addl	$1, %ecx
	movl	%ecx, 328(%rsp)
	movq	(%rsi), %rax
	movq	8(%rax), %rdx
	movzbl	8(%rsi), %ebx
	addq	%rdx, %rbx
	cmpq	%rcx, %rbx
	je	.LBB64_41
###SPA### trampoline_fmt_64
# %bb.39:                               #   in Loop: Header=BB64_35 Depth=2
	movb	$24, %bl
	cmpq	%rcx, %rdx
	jne	.LBB64_22
###SPA### trampoline_fmt_64
.LBB64_40:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movzbl	%bl, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	328(%rsp), %ecx
	movq	320(%rsp), %rsi
	movq	(%rsi), %rax
	movq	8(%rax), %rdx
	movzbl	8(%rsi), %ebx
	addq	%rdx, %rbx
.LBB64_41:                              #   in Loop: Header=BB64_35 Depth=2
###SPA## trampoline_fmt_64
	movq	%rcx, %rdi
	cmpq	%rcx, %rbx
	jne	.LBB64_35
###SPA### trampoline_fmt_64
.LBB64_42:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movl	$536870912, 216(%rsp)   # imm = 0x20000000
	movq	72(%rsp), %rax          # 8-byte Reload
	movq	64(%rsp), %rcx          # 8-byte Reload
	movl	176(%rax,%rcx), %eax
	movl	$1, 288(%rsp)
	movl	%eax, 296(%rsp)
	movq	%r14, %rdi
	leaq	216(%rsp), %rsi
	movq	%r13, %rdx
	callq	_ZN2js3jit14MacroAssembler14wasmCallImportERKNS_4wasm12CallSiteDescERKNS2_10CalleeDescE
	movw	$65, 288(%rsp)
	movb	$16, 290(%rsp)
	movl	32(%rsp), %eax          # 4-byte Reload
	movl	%eax, 292(%rsp)
	movl	$14, %edx
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$225, 288(%rsp)
	movb	$16, 290(%rsp)
	movl	$0, 292(%rsp)
	movl	$15, %edx
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movl	$10, %esi
	movl	$12, %edx
	movq	%r14, %rdi
	callq	_ZN2js3jit14MacroAssembler20switchToWasmTlsRealmENS0_8RegisterES2_
	movq	%r14, %rdi
	movl	36(%rsp), %esi          # 4-byte Reload
	leaq	80(%rsp), %rdx
	callq	_ZN2js4wasm24GenerateFunctionEpilogueERNS_3jit14MacroAssemblerEjPNS0_11FuncOffsetsE
	movl	1096(%rsp), %eax
	movl	%eax, 84(%rsp)
	cmpb	$0, 1368(%rsp)
	jne	.LBB64_53
###SPA### trampoline_fmt_64
# %bb.43:                               #   in Loop: Header=BB64_2 Depth=1
	movb	736(%rsp), %al
	testb	%al, %al
	je	.LBB64_53
###SPA### trampoline_fmt_64
# %bb.44:                               #   in Loop: Header=BB64_2 Depth=1
	movb	1016(%rsp), %al
	testb	%al, %al
	je	.LBB64_53
###SPA### trampoline_fmt_64
# %bb.45:                               #   in Loop: Header=BB64_2 Depth=1
	cmpb	$0, 1080(%rsp)
	je	.LBB64_53
###SPA### trampoline_fmt_64
# %bb.46:                               #   in Loop: Header=BB64_2 Depth=1
	movq	32(%r15), %rax
	cmpq	%rax, 40(%r15)
	jne	.LBB64_49
###SPA### trampoline_fmt_64
# %bb.47:                               #   in Loop: Header=BB64_2 Depth=1
	movl	$1, %esi
	movq	40(%rsp), %rdi          # 8-byte Reload
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB64_53
###SPA### trampoline_fmt_64
# %bb.48:                               #   in Loop: Header=BB64_2 Depth=1
	movq	32(%r15), %rax
.LBB64_49:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r15)
	movq	24(%r15), %rbx
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rbp
	addq	%rax, %rbp
	movl	96(%rsp), %eax
	movl	%eax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	xorl	%edx, %edx
	movq	%r13, %rdi
	movl	%r12d, %esi
	callq	_ZN2js4wasm9CodeRangeC1EjjNS0_11FuncOffsetsE
	movups	288(%rsp), %xmm0
	movups	297(%rsp), %xmm1
	movups	%xmm1, 9(%rbx,%rbp)
	movups	%xmm0, (%rbx,%rbp)
	addl	$1, %r12d
	movq	48(%rsp), %rbx          # 8-byte Reload
	cmpq	%r12, 8(%rbx)
	ja	.LBB64_2
###SPA### trampoline_fmt_64
	jmp	.LBB64_50
.LBB64_11:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB64_16
.LBB64_12:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB64_16
.LBB64_13:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB64_16
.LBB64_14:                              #   in Loop: Header=BB64_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$4, %al
	jmp	.LBB64_16
.LBB64_50:
###SPA## trampoline_fmt_64
	leaq	352(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssembler6finishEv
	cmpb	$0, 736(%rsp)
	je	.LBB64_53
###SPA### trampoline_fmt_64
# %bb.51:
	cmpb	$0, 1368(%rsp)
	leaq	248(%rsp), %rbp
	je	.LBB64_59
###SPA### trampoline_fmt_64
.LBB64_52:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
	jmp	.LBB64_54
.LBB64_53:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
	leaq	248(%rsp), %rbp
.LBB64_54:
###SPA## trampoline_fmt_64
	leaq	352(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssemblerD2Ev
	movq	240(%rsp), %rdi
	movups	(%rbp), %xmm0
	movups	16(%rbp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	callq	_ZN2js9LifoAlloc7releaseENS0_4MarkE
	movq	240(%rsp), %rdi
	cmpq	$0, 48(%rdi)
	jne	.LBB64_57
###SPA### trampoline_fmt_64
# %bb.55:
	cmpq	$52428801, 72(%rdi)     # imm = 0x3200001
	jb	.LBB64_57
###SPA### trampoline_fmt_64
# %bb.56:
	callq	_ZN2js9LifoAlloc7freeAllEv
.LBB64_57:
###SPA## trampoline_fmt_64
	leaq	112(%rsp), %rdi
	callq	_ZN2js9LifoAllocD2Ev
	movq	%fs:40, %rax
	cmpq	2560(%rsp), %rax
	jne	.LBB64_64
###SPA### trampoline_fmt_64
# %bb.58:
	movl	%ebx, %eax
	addq	$2568, %rsp             # imm = 0xA08
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB64_59:
	.cfi_def_cfa_offset 2624
###SPA## trampoline_fmt_64
	cmpb	$0, 1016(%rsp)
	je	.LBB64_52
###SPA### trampoline_fmt_64
# %bb.60:
	cmpb	$0, 1080(%rsp)
	je	.LBB64_52
###SPA### trampoline_fmt_64
# %bb.61:
	leaq	352(%rsp), %rsi
	movq	%r15, %rdi
	callq	_ZN2js4wasm12CompiledCode4swapERNS_3jit14MacroAssemblerE
	movl	%eax, %ebx
	jmp	.LBB64_54
.LBB64_64:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end64:
	.size	_ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE, .Lfunc_end64-_ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE
	.cfi_endproc
	.section	.rodata._ZN2js4wasm23GenerateImportFunctionsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEEPNS0_12CompiledCodeE,"a",@progbits
	.p2align	2
.LJTI64_0:
	.long	.LBB64_9-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_16-.LJTI64_0
	.long	.LBB64_12-.LJTI64_0
	.long	.LBB64_11-.LJTI64_0
	.long	.LBB64_13-.LJTI64_0
	.long	.LBB64_14-.LJTI64_0
.LJTI64_1:
	.long	.LBB64_21-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_37-.LJTI64_1
	.long	.LBB64_29-.LJTI64_1
	.long	.LBB64_27-.LJTI64_1
	.long	.LBB64_31-.LJTI64_1
	.long	.LBB64_33-.LJTI64_1
.LJTI64_2:
	.long	.LBB64_26-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_40-.LJTI64_2
	.long	.LBB64_30-.LJTI64_2
	.long	.LBB64_28-.LJTI64_2
	.long	.LBB64_32-.LJTI64_2
	.long	.LBB64_34-.LJTI64_2
                                        # -- End function
	.section	.text._ZN2js9LifoAllocD2Ev,"axG",@progbits,_ZN2js9LifoAllocD2Ev,comdat
	.hidden	_ZN2js9LifoAllocD2Ev    # -- Begin function _ZN2js9LifoAllocD2Ev
	.weak	_ZN2js9LifoAllocD2Ev
	.p2align	4, 0x90
	.type	_ZN2js9LifoAllocD2Ev,@function
_ZN2js9LifoAllocD2Ev:                   # @_ZN2js9LifoAllocD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	callq	_ZN2js9LifoAlloc7freeAllEv
	movq	32(%rbx), %r14
	movq	$0, 32(%rbx)
	testq	%r14, %r14
	je	.LBB65_2
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%r14, %rdi
	callq	_ZN2js6detail9BumpChunkD2Ev
	movq	%r14, %rdi
	callq	free@PLT
.LBB65_2:
###SPA## trampoline_fmt_64
	movq	16(%rbx), %r14
	movq	$0, 16(%rbx)
	testq	%r14, %r14
	je	.LBB65_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%r14, %rdi
	callq	_ZN2js6detail9BumpChunkD2Ev
	movq	%r14, %rdi
	callq	free@PLT
.LBB65_4:
###SPA## trampoline_fmt_64
	movq	(%rbx), %r14
	movq	$0, (%rbx)
	testq	%r14, %r14
	je	.LBB65_5
###SPA### trampoline_fmt_64
# %bb.6:
	movq	%r14, %rdi
	callq	_ZN2js6detail9BumpChunkD2Ev
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB65_5:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end65:
	.size	_ZN2js9LifoAllocD2Ev, .Lfunc_end65-_ZN2js9LifoAllocD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE,"ax",@progbits
	.hidden	_ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE # -- Begin function _ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE
	.globl	_ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE
	.p2align	4, 0x90
	.type	_ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE,@function
_ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE: # @_ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r12
	movq	%rcx, %rbx
	movl	%edx, %r13d
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 80(%rsp)
	movl	$0, 1316(%rdi)
	sarl	$3, %esi
	movl	%esi, 16(%rsp)
	movq	$0, 24(%rsp)
	je	.LBB66_4
###SPA### trampoline_fmt_64
# %bb.1:
	xorl	%eax, %eax
	.p2align	4, 0x90
.LBB66_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	shrl	$3, %esi
	addq	$1, %rax
	testl	%esi, %esi
	jne	.LBB66_2
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rax, 24(%rsp)
.LBB66_4:
###SPA## trampoline_fmt_64
	movabsq	$289099085197477126, %r15 # imm = 0x403161616160506
	leaq	32(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	leaq	16(%rsp), %rcx
	movq	%rcx, 64(%rsp)
	movl	$0, 72(%rsp)
	cmpq	$0, 24(%rsp)
	movq	%rbx, 8(%rsp)           # 8-byte Spill
	je	.LBB66_7
###SPA### trampoline_fmt_64
# %bb.5:
	movb	16(%rsp), %cl
	xorb	$4, %cl
	andb	$7, %cl
	movzbl	%cl, %eax
	movl	$227, %edx
	btl	%eax, %edx
	jae	.LBB66_55
###SPA### trampoline_fmt_64
# %bb.6:
	shlb	$3, %cl
	movq	%r15, %rax
	shrq	%cl, %rax
	movzbl	%al, %esi
	leaq	32(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	72(%rsp), %eax
	movq	64(%rsp), %rcx
	leaq	8(%rcx), %rdx
	movq	8(%rcx), %rsi
	movl	%eax, %edi
	cmpq	%rdi, %rsi
	jne	.LBB66_8
###SPA### trampoline_fmt_64
	jmp	.LBB66_20
.LBB66_7:
###SPA## trampoline_fmt_64
	leaq	24(%rsp), %rdx
	xorl	%esi, %esi
	xorl	%eax, %eax
	movl	%eax, %edi
	cmpq	%rdi, %rsi
	je	.LBB66_20
###SPA### trampoline_fmt_64
.LBB66_8:
###SPA## trampoline_fmt_64
	movl	$227, %ebx
	leaq	32(%rsp), %rbp
	.p2align	4, 0x90
.LBB66_9:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB66_13 Depth 2
                                        #     Child Loop BB66_16 Depth 2
###SPA## trampoline_fmt_64
	addl	$1, %eax
	movl	%eax, 72(%rsp)
	cmpq	%rax, (%rdx)
	je	.LBB66_19
###SPA### trampoline_fmt_64
# %bb.10:                               #   in Loop: Header=BB66_9 Depth=1
	movl	(%rcx), %ecx
	testl	%eax, %eax
	je	.LBB66_17
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB66_9 Depth=1
	leaq	-1(%rax), %rdx
	movq	%rax, %rsi
	andq	$7, %rsi
	je	.LBB66_15
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB66_9 Depth=1
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB66_13:                              #   Parent Loop BB66_9 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	shrl	$3, %ecx
	addq	$1, %rdi
	cmpq	%rdi, %rsi
	jne	.LBB66_13
###SPA### trampoline_fmt_64
# %bb.14:                               #   in Loop: Header=BB66_9 Depth=1
	subq	%rdi, %rax
.LBB66_15:                              #   in Loop: Header=BB66_9 Depth=1
###SPA## trampoline_fmt_64
	cmpq	$7, %rdx
	jb	.LBB66_17
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB66_16:                              #   Parent Loop BB66_9 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	shrl	$24, %ecx
	addq	$-8, %rax
	jne	.LBB66_16
###SPA### trampoline_fmt_64
.LBB66_17:                              #   in Loop: Header=BB66_9 Depth=1
###SPA## trampoline_fmt_64
	xorb	$4, %cl
	andb	$7, %cl
	movzbl	%cl, %eax
	btl	%eax, %ebx
	jae	.LBB66_55
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB66_9 Depth=1
	shlb	$3, %cl
	movq	%r15, %rax
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %rax
	movzbl	%al, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	72(%rsp), %eax
	movq	64(%rsp), %rcx
.LBB66_19:                              #   in Loop: Header=BB66_9 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rax, 8(%rcx)
	leaq	8(%rcx), %rdx
	jne	.LBB66_9
###SPA### trampoline_fmt_64
.LBB66_20:
###SPA## trampoline_fmt_64
	movl	40(%rsp), %eax
	movl	$8, %ebp
	subl	%eax, %ebp
	andl	$15, %ebp
	addl	%eax, %ebp
	movq	%r14, %rdi
	movl	%ebp, %esi
	movl	%r13d, %edx
	movq	%r12, %rcx
	callq	_ZN2js4wasm20GenerateExitPrologueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	leaq	32(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	leaq	16(%rsp), %rcx
	movq	%rcx, 64(%rsp)
	movl	$0, 72(%rsp)
	cmpq	$0, 24(%rsp)
	movl	%r13d, 4(%rsp)          # 4-byte Spill
	je	.LBB66_23
###SPA### trampoline_fmt_64
# %bb.21:
	movb	16(%rsp), %cl
	xorb	$4, %cl
	andb	$7, %cl
	movzbl	%cl, %eax
	movl	$227, %edx
	btl	%eax, %edx
	jae	.LBB66_55
###SPA### trampoline_fmt_64
# %bb.22:
	movq	%r12, %rbx
	shlb	$3, %cl
	movq	%r15, %rax
	shrq	%cl, %rax
	movzbl	%al, %esi
	leaq	32(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	72(%rsp), %eax
	movq	64(%rsp), %rcx
	movq	8(%rcx), %rsi
	movl	%eax, %edx
	cmpq	%rdx, %rsi
	jne	.LBB66_24
###SPA### trampoline_fmt_64
	jmp	.LBB66_46
.LBB66_23:
###SPA## trampoline_fmt_64
	movq	%r12, %rbx
	xorl	%esi, %esi
	xorl	%eax, %eax
	movl	%eax, %edx
	cmpq	%rdx, %rsi
	je	.LBB66_46
###SPA### trampoline_fmt_64
.LBB66_24:
###SPA## trampoline_fmt_64
	movl	$227, %r12d
	leaq	32(%rsp), %r13
	.p2align	4, 0x90
.LBB66_25:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB66_29 Depth 2
                                        #     Child Loop BB66_32 Depth 2
                                        #     Child Loop BB66_39 Depth 2
                                        #     Child Loop BB66_42 Depth 2
###SPA## trampoline_fmt_64
	cmpl	$2, 48(%rsp)
	jne	.LBB66_35
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB66_25 Depth=1
	movl	56(%rsp), %r8d
	movl	(%rcx), %ecx
	testl	%eax, %eax
	je	.LBB66_33
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB66_25 Depth=1
	leaq	-1(%rdx), %rax
	movq	%rdx, %rsi
	andq	$7, %rsi
	je	.LBB66_31
###SPA### trampoline_fmt_64
# %bb.28:                               #   in Loop: Header=BB66_25 Depth=1
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB66_29:                              #   Parent Loop BB66_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	shrl	$3, %ecx
	addq	$1, %rdi
	cmpq	%rdi, %rsi
	jne	.LBB66_29
###SPA### trampoline_fmt_64
# %bb.30:                               #   in Loop: Header=BB66_25 Depth=1
	subq	%rdi, %rdx
.LBB66_31:                              #   in Loop: Header=BB66_25 Depth=1
###SPA## trampoline_fmt_64
	cmpq	$7, %rax
	jb	.LBB66_33
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB66_32:                              #   Parent Loop BB66_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	shrl	$24, %ecx
	addq	$-8, %rdx
	jne	.LBB66_32
###SPA### trampoline_fmt_64
.LBB66_33:                              #   in Loop: Header=BB66_25 Depth=1
###SPA## trampoline_fmt_64
	xorb	$4, %cl
	andb	$7, %cl
	movzbl	%cl, %eax
	btl	%eax, %r12d
	jae	.LBB66_55
###SPA### trampoline_fmt_64
# %bb.34:                               #   in Loop: Header=BB66_25 Depth=1
	leal	24(%r8), %eax
	shlb	$3, %cl
	movq	%r15, %rdx
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %rdx
	shlq	$32, %rax
	orq	$5, %rax
	shlq	$32, %r8
	orq	$4, %r8
	movzbl	%dl, %esi
	movl	$10, %edx
	movq	%r14, %rdi
	movq	%rax, %rcx
	callq	_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_
	movl	72(%rsp), %eax
	movq	64(%rsp), %rcx
.LBB66_35:                              #   in Loop: Header=BB66_25 Depth=1
###SPA## trampoline_fmt_64
	addl	$1, %eax
	movl	%eax, 72(%rsp)
	cmpq	%rax, 8(%rcx)
	je	.LBB66_45
###SPA### trampoline_fmt_64
# %bb.36:                               #   in Loop: Header=BB66_25 Depth=1
	movl	(%rcx), %ecx
	testl	%eax, %eax
	je	.LBB66_43
###SPA### trampoline_fmt_64
# %bb.37:                               #   in Loop: Header=BB66_25 Depth=1
	leaq	-1(%rax), %rdx
	movq	%rax, %rsi
	andq	$7, %rsi
	je	.LBB66_41
###SPA### trampoline_fmt_64
# %bb.38:                               #   in Loop: Header=BB66_25 Depth=1
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB66_39:                              #   Parent Loop BB66_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	shrl	$3, %ecx
	addq	$1, %rdi
	cmpq	%rdi, %rsi
	jne	.LBB66_39
###SPA### trampoline_fmt_64
# %bb.40:                               #   in Loop: Header=BB66_25 Depth=1
	subq	%rdi, %rax
.LBB66_41:                              #   in Loop: Header=BB66_25 Depth=1
###SPA## trampoline_fmt_64
	cmpq	$7, %rdx
	jb	.LBB66_43
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB66_42:                              #   Parent Loop BB66_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	shrl	$24, %ecx
	addq	$-8, %rax
	jne	.LBB66_42
###SPA### trampoline_fmt_64
.LBB66_43:                              #   in Loop: Header=BB66_25 Depth=1
###SPA## trampoline_fmt_64
	xorb	$4, %cl
	andb	$7, %cl
	movzbl	%cl, %eax
	btl	%eax, %r12d
	jae	.LBB66_55
###SPA### trampoline_fmt_64
# %bb.44:                               #   in Loop: Header=BB66_25 Depth=1
	shlb	$3, %cl
	movq	%r15, %rax
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %rax
	movzbl	%al, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	72(%rsp), %eax
	movq	64(%rsp), %rcx
.LBB66_45:                              #   in Loop: Header=BB66_25 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rax, 8(%rcx)
	movq	%rax, %rdx
	jne	.LBB66_25
###SPA### trampoline_fmt_64
.LBB66_46:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	movq	8(%rsp), %rsi           # 8-byte Reload
	callq	_ZN2js3jit14MacroAssembler4callENS0_6ImmPtrE
	movq	%r14, %rdi
	movl	%ebp, %esi
	movl	4(%rsp), %edx           # 4-byte Reload
	movq	%rbx, %rcx
	callq	_ZN2js4wasm20GenerateExitEpilogueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	movl	744(%r14), %eax
	movl	%eax, 4(%rbx)
	cmpb	$0, 384(%r14)
	je	.LBB66_49
###SPA### trampoline_fmt_64
# %bb.47:
	cmpb	$0, 1016(%r14)
	je	.LBB66_51
###SPA### trampoline_fmt_64
.LBB66_49:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	cmpq	80(%rsp), %rcx
	jne	.LBB66_53
###SPA### trampoline_fmt_64
.LBB66_50:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB66_51:
	.cfi_def_cfa_offset 144
###SPA## trampoline_fmt_64
	cmpb	$0, 664(%r14)
	je	.LBB66_49
###SPA### trampoline_fmt_64
# %bb.52:
	cmpb	$0, 728(%r14)
	setne	%al
	movq	%fs:40, %rcx
	cmpq	80(%rsp), %rcx
	je	.LBB66_50
###SPA### trampoline_fmt_64
.LBB66_53:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB66_55:
###SPA## trampoline_fmt_64
	leaq	.L.str.299(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$4111, 0                # imm = 0x100F
	callq	abort@PLT
.Lfunc_end66:
	.size	_ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE, .Lfunc_end66-_ZN2js4wasm20GenerateBuiltinThunkERNS_3jit14MacroAssemblerENS1_15ABIFunctionTypeENS0_10ExitReasonEPvPNS0_15CallableOffsetsE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_
	.type	_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_,@function
_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_: # @_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	addb	$-3, %sil
	cmpb	$21, %sil
	ja	.LBB67_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%r8, %rbx
	movq	%rdi, %r14
	movq	%rcx, %r8
	shrq	$32, %r8
	movq	%rbx, %r15
	shrq	$32, %r15
	movzbl	%sil, %eax
	leaq	.LJTI67_0(%rip), %rsi
	movslq	(%rsi,%rax,4), %rax
	addq	%rsi, %rax
	jmpq	*%rax
.LBB67_2:
###SPA## trampoline_fmt_64
	andl	$31, %ecx
	shll	$4, %ecx
	orl	$1, %ecx
	movw	%cx, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	%r8d, 12(%rsp)
	movzbl	%dl, %ebp
	leaq	8(%rsp), %rsi
	movq	%r14, %rdi
	movl	%ebp, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	andl	$31, %ebx
	shll	$4, %ebx
	orl	$1, %ebx
	movw	%bx, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	%r15d, 12(%rsp)
	leaq	8(%rsp), %rdx
	movq	%r14, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB67_10
###SPA### trampoline_fmt_64
.LBB67_6:
###SPA## trampoline_fmt_64
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB67_9:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	andl	$31, %ecx
	shll	$4, %ecx
	orl	$1, %ecx
	movw	%cx, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	%r8d, 12(%rsp)
	movzbl	%dl, %ebp
	leaq	8(%rsp), %rsi
	movq	%r14, %rdi
	movl	%ebp, %edx
	callq	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	andl	$31, %ebx
	shll	$4, %ebx
	orl	$1, %ebx
	movw	%bx, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	%r15d, 12(%rsp)
	leaq	8(%rsp), %rdx
	movq	%r14, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	je	.LBB67_6
###SPA### trampoline_fmt_64
	jmp	.LBB67_10
.LBB67_3:
###SPA## trampoline_fmt_64
	addq	$736, %r14              # imm = 0x2E0
	movzbl	%cl, %r9d
	leaq	.L.str.103(%rip), %rbp
	movl	$2, %edx
	movl	$16, %ecx
	movq	%r14, %rdi
	movq	%rbp, %rsi
                                        # kill: def $r8d killed $r8d killed $r8
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movzbl	%bl, %r9d
	movl	$2, %edx
	jmp	.LBB67_4
.LBB67_7:
###SPA## trampoline_fmt_64
	addq	$736, %r14              # imm = 0x2E0
	movzbl	%cl, %r9d
	leaq	.L.str.62(%rip), %rbp
	movl	$3, %edx
	movl	$16, %ecx
	movq	%r14, %rdi
	movq	%rbp, %rsi
                                        # kill: def $r8d killed $r8d killed $r8
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movzbl	%bl, %r9d
	movl	$3, %edx
.LBB67_4:
###SPA## trampoline_fmt_64
	movl	$17, %ecx
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movl	%r15d, %r8d
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	je	.LBB67_6
###SPA### trampoline_fmt_64
.LBB67_10:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB67_8:
###SPA## trampoline_fmt_64
	leaq	.L.str.184(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1662, 0                # imm = 0x67E
	callq	abort@PLT
.Lfunc_end67:
	.size	_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_, .Lfunc_end67-_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_
	.cfi_endproc
	.section	.rodata._ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_,"a",@progbits
	.p2align	2
.LJTI67_0:
	.long	.LBB67_9-.LJTI67_0
	.long	.LBB67_2-.LJTI67_0
	.long	.LBB67_7-.LJTI67_0
	.long	.LBB67_3-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_2-.LJTI67_0
	.long	.LBB67_2-.LJTI67_0
	.long	.LBB67_2-.LJTI67_0
                                        # -- End function
	.section	.text._ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm,"ax",@progbits
	.hidden	_ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm # -- Begin function _ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm
	.globl	_ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm
	.p2align	4, 0x90
	.type	_ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm,@function
_ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm: # @_ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	$1, (%rsi)
	movq	$1, 120(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 112(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 104(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 96(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 88(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 80(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 72(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 64(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 56(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 48(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 40(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 24(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 16(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, 8(%rdi)
	movq	(%rsi), %rax
	addq	$1, %rax
	movq	%rax, (%rsi)
	movq	%rax, (%rdi)
	addq	$1, (%rsi)
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end68:
	.size	_ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm, .Lfunc_end68-_ZN2js4wasm28GenerateTrapExitMachineStateEPNS_3jit12MachineStateEPm
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
.LCPI69_0:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	255                     # 0xff
.LCPI69_3:
	.quad	3                       # 0x3
	.quad	8                       # 0x8
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI69_1:
	.quad	9221120237041090560     # double NaN
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI69_2:
	.long	2143289344              # float NaN
	.section	.text._ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE,"ax",@progbits
	.hidden	_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
	.globl	_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
	.p2align	4, 0x90
	.type	_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE,@function
_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE: # @_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$264, %rsp              # imm = 0x108
	.cfi_def_cfa_offset 320
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 64(%rsp)           # 8-byte Spill
	movl	%r8d, 40(%rsp)          # 4-byte Spill
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	movq	%rdx, %r14
	movq	%rsi, 56(%rsp)          # 8-byte Spill
	movq	%rdi, %r12
	movq	%fs:40, %rax
	movq	%rax, 256(%rsp)
	movq	$0, 80(%rsp)
	leaq	736(%rdi), %rbp
	leaq	744(%rdi), %rbx
	movq	744(%rdi), %rax
	testb	$15, %al
	jne	.LBB69_2
###SPA### trampoline_fmt_64
	jmp	.LBB69_7
	.p2align	4, 0x90
.LBB69_6:                               #   in Loop: Header=BB69_2 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rcx
	movb	$-12, (%rcx,%rax)
	movq	(%rbx), %rax
	addq	$1, %rax
	movq	%rax, (%rbx)
	testb	$15, %al
	je	.LBB69_7
###SPA### trampoline_fmt_64
.LBB69_2:                               # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_6
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB69_2 Depth=1
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB69_2 Depth=1
	movq	(%rbx), %rax
	jmp	.LBB69_6
.LBB69_5:                               #   in Loop: Header=BB69_2 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_6
.LBB69_7:
###SPA## trampoline_fmt_64
	movl	%eax, 80(%rsp)
	movl	$0, 1316(%r12)
	movw	$-4056, 104(%rsp)       # imm = 0xF028
	movq	$0, 112(%rsp)
	leaq	104(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler14PushRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	movl	1316(%r12), %r15d
	addl	$8, %r15d
	leaq	224(%rsp), %r13
	movq	%r13, %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movl	$22, %esi
	movq	%r13, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movq	%rdx, %r13
	testl	%eax, %eax
	je	.LBB69_8
###SPA### trampoline_fmt_64
# %bb.13:
	addl	%r15d, %r13d
	movw	$65, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	%r13d, 180(%rsp)
	leaq	176(%rsp), %rsi
	movl	$10, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	jmp	.LBB69_14
.LBB69_8:
###SPA## trampoline_fmt_64
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_12
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	(%rbx), %rax
.LBB69_12:
###SPA## trampoline_fmt_64
	movl	%r13d, %ecx
	shrb	$3, %cl
	movq	(%rbp), %rdx
	orb	$76, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbx)
	movq	(%rbp), %rcx
	movb	$-117, 1(%rcx,%rax)
	movq	(%rbx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbx)
	andb	$7, %r13b
	movq	(%rbp), %rcx
	orb	$-48, %r13b
	movb	%r13b, 1(%rcx,%rax)
	addq	$1, (%rbx)
.LBB69_14:
###SPA## trampoline_fmt_64
	leaq	224(%rsp), %rdi
	movl	$22, %esi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movq	%rdx, %r13
	testl	%eax, %eax
	je	.LBB69_15
###SPA### trampoline_fmt_64
# %bb.20:
	addl	%r13d, %r15d
	movw	$65, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	%r15d, 180(%rsp)
	leaq	176(%rsp), %rsi
	movl	$14, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	leaq	752(%r12), %rax
	movq	%rax, 48(%rsp)          # 8-byte Spill
	jmp	.LBB69_21
.LBB69_15:
###SPA## trampoline_fmt_64
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_19
###SPA### trampoline_fmt_64
# %bb.16:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_18
###SPA### trampoline_fmt_64
# %bb.17:
	movq	(%rbx), %rax
.LBB69_19:
###SPA## trampoline_fmt_64
	leaq	752(%r12), %rcx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movl	%r13d, %ecx
	shrb	$3, %cl
	movq	(%rbp), %rdx
	orb	$76, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbx)
	movq	(%rbp), %rcx
	movb	$-117, 1(%rcx,%rax)
	movq	(%rbx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbx)
	andb	$7, %r13b
	movq	(%rbp), %rcx
	orb	$-16, %r13b
	movb	%r13b, 1(%rcx,%rax)
	addq	$1, (%rbx)
.LBB69_21:
###SPA## trampoline_fmt_64
	movl	$14, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler4PushENS0_8RegisterE
	movl	$10, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler4PushENS0_8RegisterE
	movl	$0, 1316(%r12)
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_25
###SPA### trampoline_fmt_64
# %bb.22:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_24
###SPA### trampoline_fmt_64
# %bb.23:
	movq	(%rbx), %rax
.LBB69_25:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$76, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-117, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-28, 1(%rax,%rcx)
	movq	744(%r12), %rcx
	movq	752(%r12), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 744(%r12)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB69_29
###SPA### trampoline_fmt_64
# %bb.26:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_28
###SPA### trampoline_fmt_64
# %bb.27:
	movq	(%rbx), %rax
.LBB69_29:
###SPA## trampoline_fmt_64
	movq	%rbp, 8(%rsp)           # 8-byte Spill
	movq	736(%r12), %rcx
	movb	$72, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-125, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-28, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-16, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	movl	$12, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler4PushENS0_8RegisterE
	movl	1316(%r12), %ebp
	movq	%r14, %rdi
	callq	_ZL13StackArgBytesRKN2js4wasm8FuncTypeE
	addl	%eax, %ebp
	negl	%ebp
	andl	$15, %ebp
	addl	%eax, %ebp
	movq	%r12, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit14MacroAssembler15subFromStackPtrENS0_5Imm32E
	movl	%ebp, 32(%rsp)          # 4-byte Spill
	addl	%ebp, 1316(%r12)
	leaq	160(%rsp), %rbp
	movq	%rbp, %rdi
	movq	%r14, %rsi
	callq	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%rbp, 208(%rsp)
	movl	$0, 216(%rsp)
	movq	160(%rsp), %rax
	movq	8(%rax), %rcx
	movzbl	168(%rsp), %edx
	xorl	%r8d, %r8d
	movq	%rcx, %rsi
	addq	%rdx, %rsi
	movq	%r14, 24(%rsp)          # 8-byte Spill
	movq	%rbx, (%rsp)            # 8-byte Spill
	je	.LBB69_42
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rcx, %rcx
	je	.LBB69_31
###SPA### trampoline_fmt_64
# %bb.32:
	movq	(%rax), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB69_34
###SPA### trampoline_fmt_64
# %bb.33:
	movl	%eax, %ecx
.LBB69_34:
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	ja	.LBB69_41
###SPA### trampoline_fmt_64
# %bb.35:
	movzbl	%cl, %ecx
	leaq	.LJTI69_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB69_40:
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB69_41
.LBB69_31:
###SPA## trampoline_fmt_64
	movb	$24, %al
	jmp	.LBB69_41
.LBB69_38:
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB69_41
.LBB69_39:
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB69_41
.LBB69_37:
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB69_41
.LBB69_36:
###SPA## trampoline_fmt_64
	movb	$4, %al
.LBB69_41:
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	216(%rsp), %r8d
	movq	208(%rsp), %rdx
	movq	(%rdx), %rax
	movq	8(%rax), %rcx
	movzbl	8(%rdx), %edx
.LBB69_42:
###SPA## trampoline_fmt_64
	movl	%r8d, %esi
	addq	%rcx, %rdx
	cmpq	%rsi, %rdx
	je	.LBB69_91
###SPA### trampoline_fmt_64
# %bb.43:
	leaq	176(%rsp), %r14
	leaq	.LJTI69_2(%rip), %r13
	leaq	.LJTI69_1(%rip), %r15
	.p2align	4, 0x90
.LBB69_44:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movb	$24, %dl
	cmpq	%rsi, %rcx
	jne	.LBB69_45
###SPA### trampoline_fmt_64
.LBB69_54:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	192(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	ja	.LBB69_79
###SPA### trampoline_fmt_64
.LBB69_55:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	shll	$4, %r8d
	movslq	(%r13,%rax,4), %rax
	addq	%r13, %rax
	jmpq	*%rax
.LBB69_56:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	addb	$-3, %dl
	cmpb	$21, %dl
	ja	.LBB69_59
###SPA### trampoline_fmt_64
# %bb.57:                               #   in Loop: Header=BB69_44 Depth=1
	movzbl	%dl, %eax
	leaq	.LJTI69_4(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB69_58:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %edx
	movw	$161, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%r8d, 124(%rsp)
	movq	%r12, %rdi
	leaq	120(%rsp), %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	jmp	.LBB69_79
	.p2align	4, 0x90
.LBB69_45:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax), %rax
	movl	(%rax,%rsi,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB69_47
###SPA### trampoline_fmt_64
# %bb.46:                               #   in Loop: Header=BB69_44 Depth=1
	movl	%ecx, %eax
.LBB69_47:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %dl
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB69_54
###SPA### trampoline_fmt_64
# %bb.48:                               #   in Loop: Header=BB69_44 Depth=1
	movzbl	%al, %eax
	movslq	(%r15,%rax,4), %rax
	addq	%r15, %rax
	jmpq	*%rax
.LBB69_53:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %dl
	movl	192(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB69_55
###SPA### trampoline_fmt_64
	jmp	.LBB69_79
	.p2align	4, 0x90
.LBB69_60:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$6, %dl
	je	.LBB69_65
###SPA### trampoline_fmt_64
# %bb.61:                               #   in Loop: Header=BB69_44 Depth=1
	cmpb	$10, %dl
	je	.LBB69_66
###SPA### trampoline_fmt_64
# %bb.62:                               #   in Loop: Header=BB69_44 Depth=1
	movl	200(%rsp), %eax
	andl	$15, %eax
	movl	$3, %edx
	movl	$16, %ecx
	movl	$10, %r9d
	movq	8(%rsp), %rdi           # 8-byte Reload
	leaq	.L.str.62(%rip), %rsi
	jmp	.LBB69_63
	.p2align	4, 0x90
.LBB69_67:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	addb	$-4, %dl
	cmpb	$20, %dl
	ja	.LBB69_69
###SPA### trampoline_fmt_64
# %bb.68:                               #   in Loop: Header=BB69_44 Depth=1
	movzbl	%dl, %eax
	leaq	.LJTI69_3(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB69_76:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movw	$161, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%r8d, 124(%rsp)
	movl	$12, %edx
	movq	%r12, %rdi
	leaq	120(%rsp), %rbx
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movl	200(%rsp), %eax
	movw	$65, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%eax, 124(%rsp)
	jmp	.LBB69_71
.LBB69_65:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %eax
	andl	$15, %eax
	movl	$2, %edx
	movl	$16, %ecx
	movl	$10, %r9d
	movq	8(%rsp), %rdi           # 8-byte Reload
	leaq	.L.str.103(%rip), %rsi
.LBB69_63:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	jmp	.LBB69_64
.LBB69_51:                              #   in Loop: Header=BB69_44 Depth=1
	.cfi_def_cfa_offset 320
###SPA## trampoline_fmt_64
	movb	$5, %dl
	movl	192(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB69_55
###SPA### trampoline_fmt_64
	jmp	.LBB69_79
.LBB69_52:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %dl
	movl	192(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB69_55
###SPA### trampoline_fmt_64
	jmp	.LBB69_79
.LBB69_50:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %dl
	movl	192(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB69_55
###SPA### trampoline_fmt_64
	jmp	.LBB69_79
.LBB69_49:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$4, %dl
	movl	192(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB69_55
###SPA### trampoline_fmt_64
	jmp	.LBB69_79
.LBB69_78:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %edx
	movw	$161, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%r8d, 124(%rsp)
	movq	%r12, %rdi
	leaq	120(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	jmp	.LBB69_79
.LBB69_69:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movw	$161, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%r8d, 124(%rsp)
	movl	$12, %edx
	movq	%r12, %rdi
	movq	%r14, %rbx
	leaq	120(%rsp), %r14
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	movl	200(%rsp), %eax
	movw	$65, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%eax, 124(%rsp)
	movl	$12, %esi
	movq	%r12, %rdi
	movq	%r14, %rdx
	movq	%rbx, %r14
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB69_79
.LBB69_74:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	$2, %edx
	movl	$16, %ecx
	movl	$10, %r9d
	movq	8(%rsp), %rbp           # 8-byte Reload
	movq	%rbp, %rdi
	leaq	.L.str.103(%rip), %rbx
	movq	%rbx, %rsi
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	200(%rsp), %r8d
	movl	$2, %edx
	jmp	.LBB69_73
.LBB69_70:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %ebp
	movw	$161, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%r8d, 124(%rsp)
	movl	$12, %edx
	movq	%r12, %rdi
	leaq	120(%rsp), %rbx
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$65, 120(%rsp)
	movb	$16, 122(%rsp)
	movl	%ebp, 124(%rsp)
.LBB69_71:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	$12, %esi
	movq	%r12, %rdi
	movq	%rbx, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB69_79
.LBB69_72:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	$3, %edx
	movl	$16, %ecx
	movl	$10, %r9d
	movq	8(%rsp), %rbp           # 8-byte Reload
	movq	%rbp, %rdi
	leaq	.L.str.62(%rip), %rbx
	movq	%rbx, %rsi
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	200(%rsp), %r8d
	movl	$3, %edx
.LBB69_73:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	$17, %ecx
	movl	$4, %r9d
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	pushq	$15
	.cfi_adjust_cfa_offset 8
.LBB69_64:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.LBB69_79:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movl	216(%rsp), %ecx
	addl	$1, %ecx
	movl	%ecx, 216(%rsp)
	movq	208(%rsp), %rax
	movq	(%rax), %rdx
	movq	8(%rdx), %rsi
	movzbl	8(%rax), %eax
	addq	%rsi, %rax
	cmpq	%rcx, %rax
	je	.LBB69_91
###SPA### trampoline_fmt_64
# %bb.80:                               #   in Loop: Header=BB69_44 Depth=1
	movb	$24, %al
	cmpq	%rcx, %rsi
	jne	.LBB69_81
###SPA### trampoline_fmt_64
.LBB69_90:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	movq	%r14, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	216(%rsp), %esi
	movq	208(%rsp), %rdx
	movq	(%rdx), %rax
	movq	8(%rax), %rcx
	movzbl	8(%rdx), %edx
	addq	%rcx, %rdx
	movl	%esi, %r8d
	cmpq	%rsi, %rdx
	jne	.LBB69_44
###SPA### trampoline_fmt_64
	jmp	.LBB69_91
	.p2align	4, 0x90
.LBB69_81:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdx), %rax
	movl	(%rax,%rcx,4), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB69_83
###SPA### trampoline_fmt_64
# %bb.82:                               #   in Loop: Header=BB69_44 Depth=1
	movl	%eax, %ecx
.LBB69_83:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	ja	.LBB69_90
###SPA### trampoline_fmt_64
# %bb.84:                               #   in Loop: Header=BB69_44 Depth=1
	movzbl	%cl, %ecx
	leaq	.LJTI69_5(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB69_89:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB69_90
.LBB69_87:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB69_90
.LBB69_88:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB69_90
.LBB69_86:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB69_90
.LBB69_85:                              #   in Loop: Header=BB69_44 Depth=1
###SPA## trampoline_fmt_64
	movb	$4, %al
	jmp	.LBB69_90
.LBB69_91:
###SPA## trampoline_fmt_64
	movq	(%rsp), %rbp            # 8-byte Reload
	movq	(%rbp), %rax
	leaq	16(%rax), %rcx
	movq	48(%rsp), %rdx          # 8-byte Reload
	cmpq	%rcx, (%rdx)
	movq	24(%rsp), %rbx          # 8-byte Reload
	jae	.LBB69_95
###SPA### trampoline_fmt_64
# %bb.92:
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_94
###SPA### trampoline_fmt_64
# %bb.93:
	movq	(%rbp), %rax
.LBB69_95:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$51, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-19, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	movw	$225, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	$0, 180(%rsp)
	leaq	176(%rsp), %rsi
	movl	$15, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	72(%rsp), %rax          # 8-byte Reload
	cmpb	$0, 8(%rax)
	je	.LBB69_97
###SPA### trampoline_fmt_64
# %bb.96:
	movq	(%rax), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS0_6ImmPtrE
	jmp	.LBB69_108
.LBB69_97:
###SPA## trampoline_fmt_64
	movq	%rbp, %r15
	movl	176(%rbx), %r14d
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler13callWithPatchEv
	movq	%rax, %rbp
	movq	8(%r12), %rax
	cmpq	%rax, 16(%r12)
	jne	.LBB69_101
###SPA### trampoline_fmt_64
# %bb.98:
	movl	$1, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_99
###SPA### trampoline_fmt_64
# %bb.100:
	movq	8(%r12), %rax
.LBB69_101:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 8(%r12)
	movq	(%r12), %rcx
	shlq	$32, %rbp
	movq	%rbp, (%rcx,%rax,8)
	movb	$1, %al
.LBB69_102:
###SPA## trampoline_fmt_64
	andb	%al, 384(%r12)
	movq	32(%r12), %rax
	cmpq	%rax, 40(%r12)
	movq	%r15, %rbp
	jne	.LBB69_106
###SPA### trampoline_fmt_64
# %bb.103:
	leaq	24(%r12), %rdi
	movl	$1, %esi
	callq	_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_104
###SPA### trampoline_fmt_64
# %bb.105:
	movq	32(%r12), %rax
.LBB69_106:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r12)
	movq	24(%r12), %rcx
	movl	%r14d, (%rcx,%rax,4)
	movb	$1, %al
.LBB69_107:
###SPA## trampoline_fmt_64
	andb	%al, 384(%r12)
.LBB69_108:
###SPA## trampoline_fmt_64
	movl	32(%rsp), %esi          # 4-byte Reload
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler9freeStackEj
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler11PopStackPtrEv
	movl	_ZL22FramePushedBeforeAlign(%rip), %eax
	movl	%eax, 1316(%r12)
	movl	$10, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler3PopENS0_8RegisterE
	movl	$14, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler3PopENS0_8RegisterE
	leaq	88(%rbx), %rax
	movq	96(%rbx), %rcx
	cmpq	$1, %rcx
	movq	%r12, 32(%rsp)          # 8-byte Spill
	je	.LBB69_111
###SPA### trampoline_fmt_64
# %bb.109:
	testq	%rcx, %rcx
	jne	.LBB69_112
###SPA### trampoline_fmt_64
# %bb.110:
	movq	$0, 176(%rsp)
	xorl	%eax, %eax
	jmp	.LBB69_120
.LBB69_111:
###SPA## trampoline_fmt_64
	movq	(%rax), %rax
	movl	(%rax), %eax
	leaq	1(,%rax,4), %rax
	movq	%rax, 176(%rsp)
	movl	%eax, %ecx
	andb	$3, %cl
	je	.LBB69_114
###SPA### trampoline_fmt_64
.LBB69_115:
###SPA## trampoline_fmt_64
	cmpb	$2, %cl
	je	.LBB69_119
###SPA### trampoline_fmt_64
# %bb.116:
	cmpb	$1, %cl
	jne	.LBB69_118
###SPA### trampoline_fmt_64
# %bb.117:
	movl	$1, %eax
	jmp	.LBB69_120
.LBB69_112:
###SPA## trampoline_fmt_64
	orq	$2, %rax
	movq	%rax, 176(%rsp)
	movl	%eax, %ecx
	andb	$3, %cl
	jne	.LBB69_115
###SPA### trampoline_fmt_64
.LBB69_114:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB69_120
.LBB69_119:
###SPA## trampoline_fmt_64
	andq	$-4, %rax
	movl	8(%rax), %eax
.LBB69_120:
###SPA## trampoline_fmt_64
	movl	%eax, 184(%rsp)
	movaps	.LCPI69_0(%rip), %xmm0  # xmm0 = [0,0,0,255]
	movups	%xmm0, 188(%rsp)
	testl	%eax, %eax
	je	.LBB69_137
###SPA### trampoline_fmt_64
# %bb.121:
	leaq	176(%rsp), %rdi
	callq	_ZN2js4wasm13ABIResultIter10settleNextEv
	movl	184(%rsp), %r13d
	movl	188(%rsp), %r14d
	cmpl	%r13d, %r14d
	je	.LBB69_137
###SPA### trampoline_fmt_64
# %bb.122:
	leaq	.LJTI69_6(%rip), %rbx
	jmp	.LBB69_123
.LBB69_132:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	movl	208(%rsp), %ebx
	movl	$-2, 160(%rsp)
	movl	%ebx, %ebp
	andl	$31, %ebp
	movl	$1, %edx
	movl	$46, %ecx
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	%r15, %rdi
	leaq	.L.str.174(%rip), %rsi
	movl	%ebp, %r8d
	movl	%ebp, %r9d
	callq	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	movl	$11, %esi
	movq	32(%rsp), %r12          # 8-byte Reload
	movq	%r12, %rdi
	leaq	160(%rsp), %rax
	movq	%rax, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%r12, %rdi
	movsd	.LCPI69_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movl	%ebx, %esi
	callq	_ZN2js3jit17MacroAssemblerX6418loadConstantDoubleEdNS0_13FloatRegisterE
	movq	%r12, %rdi
	leaq	160(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	$3, %edx
	movl	$17, %ecx
	movl	$0, %r8d
	movl	$10, %r9d
	movq	%r15, %rdi
	leaq	.LJTI69_6(%rip), %rbx
	leaq	.L.str.62(%rip), %rsi
	pushq	%rbp
	jmp	.LBB69_131
.LBB69_130:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	movl	208(%rsp), %ebp
	movl	$-2, 160(%rsp)
	movl	%ebp, %r15d
	andl	$31, %r15d
	xorl	%edx, %edx
	movl	$46, %ecx
	movq	8(%rsp), %r12           # 8-byte Reload
	movq	%r12, %rdi
	leaq	.L.str.168(%rip), %rsi
	movl	%r15d, %r8d
	movl	%r15d, %r9d
	callq	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	movl	$11, %esi
	movq	32(%rsp), %rbx          # 8-byte Reload
	movq	%rbx, %rdi
	leaq	160(%rsp), %rax
	movq	%rax, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%rbx, %rdi
	movss	.LCPI69_2(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movl	%ebp, %esi
	callq	_ZN2js3jit17MacroAssemblerX6419loadConstantFloat32EfNS0_13FloatRegisterE
	movq	%rbx, %rdi
	leaq	160(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	$2, %edx
	movl	$17, %ecx
	movl	$0, %r8d
	movl	$10, %r9d
	movq	%r12, %rdi
	leaq	.L.str.103(%rip), %rsi
	pushq	%r15
	leaq	.LJTI69_6(%rip), %rbx
.LBB69_131:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rbp           # 8-byte Reload
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	addl	$1, %r14d
	movl	%r14d, 188(%rsp)
	cmpl	%r13d, %r14d
	jne	.LBB69_135
###SPA### trampoline_fmt_64
	jmp	.LBB69_136
.LBB69_128:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	movl	208(%rsp), %esi
	movw	$161, 160(%rsp)
	movb	$16, 162(%rsp)
	movl	$0, 164(%rsp)
	movq	32(%rsp), %rdi          # 8-byte Reload
	leaq	160(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	addl	$1, %r14d
	movl	%r14d, 188(%rsp)
	cmpl	%r13d, %r14d
	jne	.LBB69_135
###SPA### trampoline_fmt_64
	jmp	.LBB69_136
	.p2align	4, 0x90
.LBB69_123:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpl	$3, 204(%rsp)
	je	.LBB69_134
###SPA### trampoline_fmt_64
# %bb.124:                              #   in Loop: Header=BB69_123 Depth=1
	movl	200(%rsp), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB69_126
###SPA### trampoline_fmt_64
# %bb.125:                              #   in Loop: Header=BB69_123 Depth=1
	movl	%ecx, %eax
.LBB69_126:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	addb	$-108, %al
	cmpb	$19, %al
	ja	.LBB69_134
###SPA### trampoline_fmt_64
# %bb.127:                              #   in Loop: Header=BB69_123 Depth=1
	movzbl	%al, %eax
	movslq	(%rbx,%rax,4), %rax
	addq	%rbx, %rax
	jmpq	*%rax
.LBB69_133:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	movl	208(%rsp), %esi
	movw	$161, 160(%rsp)
	movb	$16, 162(%rsp)
	movl	$0, 164(%rsp)
	movq	32(%rsp), %rdi          # 8-byte Reload
	leaq	160(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	.p2align	4, 0x90
.LBB69_134:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	addl	$1, %r14d
	movl	%r14d, 188(%rsp)
	cmpl	%r13d, %r14d
	je	.LBB69_136
###SPA### trampoline_fmt_64
.LBB69_135:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	leaq	176(%rsp), %rdi
	callq	_ZN2js4wasm13ABIResultIter10settleNextEv
	movl	188(%rsp), %r13d
.LBB69_136:                             #   in Loop: Header=BB69_123 Depth=1
###SPA## trampoline_fmt_64
	movl	%r13d, %r14d
	movl	184(%rsp), %r13d
	cmpl	%r13d, %r14d
	jne	.LBB69_123
###SPA### trampoline_fmt_64
.LBB69_137:
###SPA## trampoline_fmt_64
	movl	$-2, 176(%rsp)
	movl	$-2, 160(%rsp)
	movq	(%rbp), %rax
	leaq	16(%rax), %rcx
	movq	48(%rsp), %rdx          # 8-byte Reload
	cmpq	%rcx, (%rdx)
	movq	8(%rsp), %rbx           # 8-byte Reload
	movq	32(%rsp), %r12          # 8-byte Reload
	jae	.LBB69_141
###SPA### trampoline_fmt_64
# %bb.138:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_140
###SPA### trampoline_fmt_64
# %bb.139:
	movq	(%rbp), %rax
.LBB69_141:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$72, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-123, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-19, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	leaq	176(%rsp), %rdx
	movl	$4, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_145
###SPA### trampoline_fmt_64
# %bb.142:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_144
###SPA### trampoline_fmt_64
# %bb.143:
	movq	(%rbp), %rax
.LBB69_145:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$51, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	leaq	160(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	leaq	176(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_149
###SPA### trampoline_fmt_64
# %bb.146:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_148
###SPA### trampoline_fmt_64
# %bb.147:
	movq	(%rbp), %rax
.LBB69_149:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$-72, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$1, 1(%rax,%rcx)
	addq	$4, 744(%r12)
	leaq	160(%rsp), %r14
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movw	$-4056, 88(%rsp)        # imm = 0xF028
	movq	$0, 96(%rsp)
	leaq	88(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler13PopRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_153
###SPA### trampoline_fmt_64
# %bb.150:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_152
###SPA### trampoline_fmt_64
# %bb.151:
	movq	(%rbp), %rax
.LBB69_153:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$-61, (%rcx,%rax)
	movq	744(%r12), %rax
	addq	$1, %rax
	movq	%rax, 744(%r12)
	movl	%eax, 84(%rsp)
	cmpb	$0, 384(%r12)
	je	.LBB69_472
###SPA### trampoline_fmt_64
# %bb.154:
	cmpb	$0, 1016(%r12)
	je	.LBB69_155
###SPA### trampoline_fmt_64
.LBB69_472:
###SPA## trampoline_fmt_64
	xorl	%edi, %edi
.LBB69_473:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	256(%rsp), %rax
	jne	.LBB69_475
###SPA### trampoline_fmt_64
.LBB69_474:
###SPA## trampoline_fmt_64
	movl	%edi, %eax
	addq	$264, %rsp              # imm = 0x108
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB69_155:
	.cfi_def_cfa_offset 320
###SPA## trampoline_fmt_64
	cmpb	$0, 664(%r12)
	je	.LBB69_472
###SPA### trampoline_fmt_64
# %bb.156:
	cmpb	$0, 728(%r12)
	je	.LBB69_472
###SPA### trampoline_fmt_64
# %bb.157:
	movq	24(%rsp), %rax          # 8-byte Reload
	movl	176(%rax), %r15d
	movq	64(%rsp), %rbx          # 8-byte Reload
	movq	8(%rbx), %rax
	cmpq	%rax, 16(%rbx)
	jne	.LBB69_160
###SPA### trampoline_fmt_64
# %bb.158:
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_472
###SPA### trampoline_fmt_64
# %bb.159:
	movq	8(%rbx), %rax
.LBB69_160:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 8(%rbx)
	movq	(%rbx), %rbx
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rbp
	addq	%rax, %rbp
	movq	80(%rsp), %rcx
	leaq	176(%rsp), %rdi
	movl	$1, %esi
	movl	%r15d, %edx
	callq	_ZN2js4wasm9CodeRangeC1ENS1_4KindEjNS0_7OffsetsE
	movups	176(%rsp), %xmm0
	movups	185(%rsp), %xmm1
	movups	%xmm1, 9(%rbx,%rbp)
	movups	%xmm0, (%rbx,%rbp)
	movb	$1, %dil
	cmpb	$0, 40(%rsp)            # 1-byte Folded Reload
	jne	.LBB69_473
###SPA### trampoline_fmt_64
# %bb.161:
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	8(%rax), %rax
	testq	%rax, %rax
	je	.LBB69_166
###SPA### trampoline_fmt_64
# %bb.162:
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	(%rcx), %rcx
	shlq	$2, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB69_164:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movzbl	(%rcx,%rdx), %esi
	cmpl	$122, %esi
	ja	.LBB69_163
###SPA### trampoline_fmt_64
# %bb.165:                              #   in Loop: Header=BB69_164 Depth=1
	cmpl	$111, %esi
	jne	.LBB69_473
###SPA### trampoline_fmt_64
.LBB69_163:                             #   in Loop: Header=BB69_164 Depth=1
###SPA## trampoline_fmt_64
	addq	$4, %rdx
	cmpq	%rdx, %rax
	jne	.LBB69_164
###SPA### trampoline_fmt_64
.LBB69_166:
###SPA## trampoline_fmt_64
	movq	24(%rsp), %rbx          # 8-byte Reload
	movq	96(%rbx), %rax
	testq	%rax, %rax
	je	.LBB69_171
###SPA### trampoline_fmt_64
# %bb.167:
	movq	88(%rbx), %rcx
	leaq	(,%rax,4), %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB69_169:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpb	$108, (%rcx,%rsi)
	je	.LBB69_473
###SPA### trampoline_fmt_64
# %bb.168:                              #   in Loop: Header=BB69_169 Depth=1
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB69_169
###SPA### trampoline_fmt_64
# %bb.170:
	cmpq	$1, %rax
	movq	24(%rsp), %rbx          # 8-byte Reload
	ja	.LBB69_473
###SPA### trampoline_fmt_64
.LBB69_171:
###SPA## trampoline_fmt_64
	leaq	80(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js4wasm24GenerateJitEntryPrologueERNS_3jit14MacroAssemblerEPNS0_7OffsetsE
	movq	%rbx, %rdi
	callq	_ZL13StackArgBytesRKN2js4wasm8FuncTypeE
	movl	%eax, %r15d
	leaq	248(%rsp), %rax
	movq	%rax, 224(%rsp)
	movw	$5635, 248(%rsp)        # imm = 0x1603
	movb	$22, 250(%rsp)
	movaps	.LCPI69_3(%rip), %xmm0  # xmm0 = [3,8]
	movups	%xmm0, 232(%rsp)
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	leaq	224(%rsp), %rdi
	movq	%rdi, 208(%rsp)
	movl	$0, 216(%rsp)
	cmpq	$0, 232(%rsp)
	je	.LBB69_172
###SPA### trampoline_fmt_64
# %bb.173:
	movq	224(%rsp), %rax
	movzbl	(%rax), %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	216(%rsp), %eax
	movq	208(%rsp), %rdi
	leaq	8(%rdi), %rcx
	movq	8(%rdi), %rdx
	movl	%eax, %esi
	cmpq	%rsi, %rdx
	jne	.LBB69_175
###SPA### trampoline_fmt_64
	jmp	.LBB69_179
.LBB69_172:
###SPA## trampoline_fmt_64
	leaq	232(%rsp), %rcx
	xorl	%edx, %edx
	xorl	%eax, %eax
	movl	%eax, %esi
	cmpq	%rsi, %rdx
	je	.LBB69_179
###SPA### trampoline_fmt_64
.LBB69_175:
###SPA## trampoline_fmt_64
	leaq	176(%rsp), %rbp
	.p2align	4, 0x90
.LBB69_176:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	addl	$1, %eax
	movl	%eax, 216(%rsp)
	cmpq	%rax, (%rcx)
	je	.LBB69_178
###SPA### trampoline_fmt_64
# %bb.177:                              #   in Loop: Header=BB69_176 Depth=1
	movq	(%rdi), %rcx
	movzbl	(%rcx,%rax), %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	216(%rsp), %eax
	movq	208(%rsp), %rdi
.LBB69_178:                             #   in Loop: Header=BB69_176 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rax, 8(%rdi)
	leaq	8(%rdi), %rcx
	jne	.LBB69_176
###SPA### trampoline_fmt_64
.LBB69_179:
###SPA## trampoline_fmt_64
	leaq	1016(%r12), %rax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movl	184(%rsp), %eax
	cmpl	%eax, %r15d
	cmovbl	%eax, %r15d
	movl	1316(%r12), %ebx
	leal	(%rbx,%r15), %ebp
	negl	%ebp
	andl	$15, %ebp
	addq	%r15, %rbp
	movq	%r12, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit14MacroAssembler15subFromStackPtrENS0_5Imm32E
	addl	%ebp, 1316(%r12)
	movq	%r12, %rdi
	movq	%rbp, 40(%rsp)          # 8-byte Spill
	movl	%ebp, %esi
	callq	_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj
	movb	$0, 152(%rsp)
	movl	$-2, 120(%rsp)
	movq	24(%rsp), %rax          # 8-byte Reload
	cmpq	$0, 8(%rax)
	je	.LBB69_185
###SPA### trampoline_fmt_64
# %bb.180:
	movl	%r15d, %eax
	addb	%bl, %al
	negb	%al
	movzbl	%al, %eax
	andl	$15, %eax
	leal	(%r15,%rax), %r15d
	addl	$40, %r15d
	xorl	%eax, %eax
	movl	$1, %r13d
	leaq	176(%rsp), %rbx
	jmp	.LBB69_181
	.p2align	4, 0x90
.LBB69_309:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movzbl	152(%rsp), %eax
	addl	$8, %r15d
	addq	$1, %r13
.LBB69_181:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movb	$4, 160(%rsp)
	movl	%r15d, 164(%rsp)
	movq	160(%rsp), %rcx
	movq	%rcx, %rdx
	movabsq	$-4294967296, %rsi      # imm = 0xFFFFFFFF00000000
	andq	%rsi, %rdx
	andq	$31, %rcx
	shlq	$4, %rcx
	orq	%rdx, %rcx
	orq	$1048577, %rcx          # imm = 0x100001
	movq	%rcx, 176(%rsp)
	movzbl	%al, %edx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movl	$-2, 104(%rsp)
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	(%rax), %rax
	movl	-4(%rax,%r13,4), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB69_183
###SPA### trampoline_fmt_64
# %bb.182:                              #   in Loop: Header=BB69_181 Depth=1
	movl	%eax, %ecx
.LBB69_183:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	addb	$-108, %cl
	cmpb	$19, %cl
	ja	.LBB69_311
###SPA### trampoline_fmt_64
# %bb.184:                              #   in Loop: Header=BB69_181 Depth=1
	movzbl	%cl, %ecx
	leaq	.LJTI69_7(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB69_235:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$11, %edx
	movq	%r12, %rdi
	leaq	152(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_239
###SPA### trampoline_fmt_64
# %bb.236:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_238
###SPA### trampoline_fmt_64
# %bb.237:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_239:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131056, 1(%rax,%rcx)   # imm = 0x1FFF0
	addq	$4, 744(%r12)
	movl	$6, %esi
	movq	%r12, %rdi
	leaq	104(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movl	$-2, 88(%rsp)
	movl	$-2, 144(%rsp)
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movl	$11, %edx
	movq	%r12, %rdi
	leaq	152(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_243
###SPA### trampoline_fmt_64
# %bb.240:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_242
###SPA### trampoline_fmt_64
# %bb.241:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_243:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131057, 1(%rax,%rcx)   # imm = 0x1FFF1
	addq	$4, 744(%r12)
	movl	$5, %esi
	movq	%r12, %rdi
	leaq	144(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movzbl	152(%rsp), %ebx
	movq	744(%r12), %rax
	leaq	1(%rax), %rcx
	cmpq	752(%r12), %rcx
	jbe	.LBB69_246
###SPA### trampoline_fmt_64
# %bb.244:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$1, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_247
###SPA### trampoline_fmt_64
# %bb.245:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_246:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	(%rcx), %rcx
	movb	$102, (%rcx,%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
	addq	$1, %rax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_252
###SPA### trampoline_fmt_64
.LBB69_249:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_251
###SPA### trampoline_fmt_64
# %bb.250:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_252:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$69, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$15, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$87, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-64, 1(%rax,%rcx)
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rax
	movq	%rax, 744(%r12)
	addq	$2, %rcx
	cmpq	752(%r12), %rcx
	jbe	.LBB69_255
###SPA### trampoline_fmt_64
# %bb.253:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$1, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_256
###SPA### trampoline_fmt_64
# %bb.254:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_255:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	(%rcx), %rcx
	movb	$-14, (%rcx,%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
	addq	$1, %rax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_261
###SPA### trampoline_fmt_64
.LBB69_258:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_260
###SPA### trampoline_fmt_64
# %bb.259:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_261:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	%ebx, %ecx
	shrb	$3, %cl
	movq	736(%r12), %rdx
	orb	$68, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$15, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$42, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	andb	$7, %bl
	orb	$-64, %bl
	movb	%bl, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	movq	%r12, %rdi
	leaq	88(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%r12, %rdi
	leaq	144(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	$-2, 136(%rsp)
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	leaq	176(%rsp), %rbx
	jae	.LBB69_265
###SPA### trampoline_fmt_64
# %bb.262:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_264
###SPA### trampoline_fmt_64
# %bb.263:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_265:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131059, 1(%rax,%rcx)   # imm = 0x1FFF3
	addq	$4, 744(%r12)
	movl	$5, %esi
	movq	%r12, %rdi
	movl	%r15d, %ebp
	leaq	136(%rsp), %r15
	movq	%r15, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movabsq	$9221120237041090560, %rax # imm = 0x7FF8000000000000
	movq	%rax, 176(%rsp)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	leaq	160(%rsp), %rdx
	callq	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	movq	%r12, %rdi
	leaq	104(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%r12, %rdi
	movq	%r15, %rsi
	movl	%ebp, %r15d
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	$-2, 128(%rsp)
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_269
###SPA### trampoline_fmt_64
# %bb.266:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_268
###SPA### trampoline_fmt_64
# %bb.267:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_269:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131060, 1(%rax,%rcx)   # imm = 0x1FFF4
	addq	$4, 744(%r12)
	movl	$5, %esi
	movq	%r12, %rdi
	leaq	128(%rsp), %rbp
	movq	%rbp, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	$0, 176(%rsp)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	leaq	160(%rsp), %rdx
	callq	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	movq	%r12, %rdi
	leaq	104(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%r12, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_273
###SPA### trampoline_fmt_64
# %bb.270:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_272
###SPA### trampoline_fmt_64
# %bb.271:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_273:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131058, 1(%rax,%rcx)   # imm = 0x1FFF2
	addq	$4, 744(%r12)
	movl	$5, %esi
	movq	%r12, %rdi
	leaq	120(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movzbl	152(%rsp), %ebx
	movq	744(%r12), %rax
	leaq	1(%rax), %rcx
	cmpq	752(%r12), %rcx
	jbe	.LBB69_276
###SPA### trampoline_fmt_64
# %bb.274:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$1, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_277
###SPA### trampoline_fmt_64
# %bb.275:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_276:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	(%rcx), %rcx
	movb	$102, (%rcx,%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
	addq	$1, %rax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_282
###SPA### trampoline_fmt_64
.LBB69_279:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_281
###SPA### trampoline_fmt_64
# %bb.280:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_282:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$69, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$15, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$87, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-64, 1(%rax,%rcx)
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rax
	movq	%rax, 744(%r12)
	addq	$2, %rcx
	cmpq	752(%r12), %rcx
	jbe	.LBB69_285
###SPA### trampoline_fmt_64
# %bb.283:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$1, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_286
###SPA### trampoline_fmt_64
# %bb.284:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_285:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	(%rcx), %rcx
	movb	$-14, (%rcx,%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
	addq	$1, %rax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_291
###SPA### trampoline_fmt_64
.LBB69_288:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_290
###SPA### trampoline_fmt_64
# %bb.289:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_291:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	%ebx, %ecx
	shrb	$3, %cl
	movq	736(%r12), %rdx
	orb	$68, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$15, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$42, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	andb	$7, %bl
	orb	$-64, %bl
	movb	%bl, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	movq	%r12, %rdi
	leaq	88(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	164(%rsp), %r8d
	movzbl	160(%rsp), %r9d
	movl	$3, %edx
	movl	$17, %ecx
	movq	8(%rsp), %rdi           # 8-byte Reload
	leaq	.L.str.62(%rip), %rsi
	pushq	$8
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	leaq	176(%rsp), %rbx
	movq	(%rsp), %rax            # 8-byte Reload
	movl	(%rax), %eax
	andl	$15, %eax
	jne	.LBB69_307
###SPA### trampoline_fmt_64
	jmp	.LBB69_308
.LBB69_205:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$11, %edx
	movq	%r12, %rdi
	leaq	152(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_209
###SPA### trampoline_fmt_64
# %bb.206:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_208
###SPA### trampoline_fmt_64
# %bb.207:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_209:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131057, 1(%rax,%rcx)   # imm = 0x1FFF1
	addq	$4, 744(%r12)
	movl	$4, %esi
	movq	%r12, %rdi
	leaq	104(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movl	$-2, 88(%rsp)
	movl	$-2, 144(%rsp)
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_213
###SPA### trampoline_fmt_64
# %bb.210:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_212
###SPA### trampoline_fmt_64
# %bb.211:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_213:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	%r13, 48(%rsp)          # 8-byte Spill
	movl	%r15d, %ebp
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131056, 1(%rax,%rcx)   # imm = 0x1FFF0
	addq	$4, 744(%r12)
	movl	$7, %esi
	movq	%r12, %rdi
	leaq	144(%rsp), %r13
	movq	%r13, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movzbl	152(%rsp), %r8d
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movl	$1, %edx
	movl	$110, %ecx
	movl	$16, %r9d
	movq	16(%rsp), %rdi          # 8-byte Reload
	leaq	.L.str.210(%rip), %rsi
	pushq	$8
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	$40, %esi
	movl	$10, %edx
	movq	%r12, %rdi
	leaq	120(%rsp), %rcx
	callq	_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE
	movq	%r12, %rdi
	leaq	88(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%r12, %rdi
	movq	%r13, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	$-2, 136(%rsp)
	movl	$-2, 128(%rsp)
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_217
###SPA### trampoline_fmt_64
# %bb.214:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_216
###SPA### trampoline_fmt_64
# %bb.215:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_217:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131059, 1(%rax,%rcx)   # imm = 0x1FFF3
	addq	$4, 744(%r12)
	movl	$4, %esi
	movq	%r12, %rdi
	leaq	136(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	movl	%ebp, %r15d
	movq	48(%rsp), %r13          # 8-byte Reload
	jae	.LBB69_221
###SPA### trampoline_fmt_64
# %bb.218:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_220
###SPA### trampoline_fmt_64
# %bb.219:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_221:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131060, 1(%rax,%rcx)   # imm = 0x1FFF4
	addq	$4, 744(%r12)
	movl	$5, %esi
	movq	%r12, %rdi
	leaq	128(%rsp), %rbp
	movq	%rbp, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%r12, %rdi
	leaq	136(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movabsq	$-2111062325329920, %rax # imm = 0xFFF8800000000000
	movq	%rax, 176(%rsp)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	leaq	160(%rsp), %rdx
	callq	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	movq	%r12, %rdi
	leaq	104(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%r12, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_225
###SPA### trampoline_fmt_64
# %bb.222:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_224
###SPA### trampoline_fmt_64
# %bb.223:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_225:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131058, 1(%rax,%rcx)   # imm = 0x1FFF2
	addq	$4, 744(%r12)
	movl	$5, %esi
	movq	%r12, %rdi
	leaq	120(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movzbl	152(%rsp), %ebx
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_229
###SPA### trampoline_fmt_64
# %bb.226:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_228
###SPA### trampoline_fmt_64
# %bb.227:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_229:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	%ebx, %ecx
	shrb	$3, %cl
	movq	736(%r12), %rdx
	orb	$68, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-117, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	andb	$7, %bl
	orb	$-48, %bl
	movb	%bl, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	movq	%r12, %rdi
	leaq	88(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	160(%rsp), %eax
	movl	164(%rsp), %ecx
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	%ecx, 180(%rsp)
	movl	$10, %esi
	movq	%r12, %rdi
	leaq	176(%rsp), %rbx
	movq	%rbx, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	movzbl	160(%rsp), %eax
	andq	$31, %rax
	shlq	$4, %rax
	movl	164(%rsp), %ecx
	shlq	$32, %rcx
	orq	%rax, %rcx
	movabsq	$17179869184, %rdx      # imm = 0x400000000
	addq	%rdx, %rcx
	addq	$1048577, %rcx          # imm = 0x100001
	movabsq	$-4294967296, %rdx      # imm = 0xFFFFFFFF00000000
	andq	%rdx, %rcx
	orq	%rax, %rcx
	orq	$1048577, %rcx          # imm = 0x100001
	movq	%rcx, 176(%rsp)
	movl	$-491520, %esi          # imm = 0xFFF88000
	movq	%r12, %rdi
	movq	%rbx, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	movq	(%rsp), %rax            # 8-byte Reload
	movl	(%rax), %eax
	andl	$15, %eax
	jne	.LBB69_307
###SPA### trampoline_fmt_64
	jmp	.LBB69_308
.LBB69_230:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$11, %edx
	movq	%r12, %rdi
	leaq	152(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_234
###SPA### trampoline_fmt_64
# %bb.231:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_233
###SPA### trampoline_fmt_64
# %bb.232:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_234:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131065, 1(%rax,%rcx)   # imm = 0x1FFF9
	addq	$4, 744(%r12)
	movl	$5, %esi
	movq	%r12, %rdi
	leaq	120(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%r12, %rdi
	leaq	104(%rsp), %rsi
	jmp	.LBB69_305
.LBB69_292:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$111, %al
	je	.LBB69_296
###SPA### trampoline_fmt_64
# %bb.293:                              #   in Loop: Header=BB69_181 Depth=1
	cmpb	$108, %al
	je	.LBB69_295
###SPA### trampoline_fmt_64
# %bb.294:                              #   in Loop: Header=BB69_181 Depth=1
	cmpb	$112, %al
	jne	.LBB69_306
###SPA### trampoline_fmt_64
	jmp	.LBB69_295
.LBB69_296:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$11, %edx
	movq	%r12, %rdi
	leaq	152(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_300
###SPA### trampoline_fmt_64
# %bb.297:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_299
###SPA### trampoline_fmt_64
# %bb.298:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_300:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131068, 1(%rax,%rcx)   # imm = 0x1FFFC
	addq	$4, 744(%r12)
	movl	$4, %esi
	movq	%r12, %rdi
	leaq	104(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_304
###SPA### trampoline_fmt_64
# %bb.301:                              #   in Loop: Header=BB69_181 Depth=1
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_303
###SPA### trampoline_fmt_64
# %bb.302:                              #   in Loop: Header=BB69_181 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_304:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$65, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-127, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-5, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movl	$131060, 1(%rax,%rcx)   # imm = 0x1FFF4
	addq	$4, 744(%r12)
	movl	$4, %esi
	movq	%r12, %rdi
	leaq	104(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%r12, %rdi
	leaq	120(%rsp), %rsi
.LBB69_305:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
.LBB69_306:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rsp), %rax            # 8-byte Reload
	movl	(%rax), %eax
	andl	$15, %eax
	je	.LBB69_308
###SPA### trampoline_fmt_64
.LBB69_307:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	subl	%eax, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi
.LBB69_308:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	leaq	104(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	24(%rsp), %rax          # 8-byte Reload
	cmpq	8(%rax), %r13
	jb	.LBB69_309
###SPA### trampoline_fmt_64
	jmp	.LBB69_185
.LBB69_238:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_239
.LBB69_242:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_243
.LBB69_247:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	xorl	%eax, %eax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_249
###SPA### trampoline_fmt_64
	jmp	.LBB69_252
.LBB69_251:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_252
.LBB69_256:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	xorl	%eax, %eax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_258
###SPA### trampoline_fmt_64
	jmp	.LBB69_261
.LBB69_260:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_261
.LBB69_264:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_265
.LBB69_268:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_269
.LBB69_272:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_273
.LBB69_277:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	xorl	%eax, %eax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_279
###SPA### trampoline_fmt_64
	jmp	.LBB69_282
.LBB69_281:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_282
.LBB69_286:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	xorl	%eax, %eax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_288
###SPA### trampoline_fmt_64
	jmp	.LBB69_291
.LBB69_290:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_291
.LBB69_208:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_209
.LBB69_212:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_213
.LBB69_216:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_217
.LBB69_220:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_221
.LBB69_224:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_225
.LBB69_228:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_229
.LBB69_233:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_234
.LBB69_299:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_300
.LBB69_303:                             #   in Loop: Header=BB69_181 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_304
.LBB69_185:
###SPA## trampoline_fmt_64
	movl	$-2, 144(%rsp)
	leaq	144(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	%r14, %rdi
	movq	24(%rsp), %rsi          # 8-byte Reload
	callq	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%r14, 208(%rsp)
	movl	$0, 216(%rsp)
	movq	160(%rsp), %rsi
	movq	8(%rsi), %rax
	movzbl	168(%rsp), %ecx
	xorl	%edx, %edx
	movq	%rax, %rdi
	addq	%rcx, %rdi
	je	.LBB69_198
###SPA### trampoline_fmt_64
# %bb.186:
	testq	%rax, %rax
	je	.LBB69_187
###SPA### trampoline_fmt_64
# %bb.188:
	movq	(%rsi), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB69_190
###SPA### trampoline_fmt_64
# %bb.189:
	movl	%eax, %ecx
.LBB69_190:
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	ja	.LBB69_197
###SPA### trampoline_fmt_64
# %bb.191:
	movzbl	%cl, %ecx
	leaq	.LJTI69_8(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB69_196:
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB69_197
.LBB69_187:
###SPA## trampoline_fmt_64
	movb	$24, %al
	jmp	.LBB69_197
.LBB69_194:
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB69_197
.LBB69_195:
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB69_197
.LBB69_193:
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB69_197
.LBB69_192:
###SPA## trampoline_fmt_64
	movb	$4, %al
.LBB69_197:
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	216(%rsp), %edx
	movq	208(%rsp), %r14
	movq	(%r14), %rax
	movq	8(%rax), %rax
	movzbl	8(%r14), %ecx
.LBB69_198:
###SPA## trampoline_fmt_64
	addq	%rax, %rcx
	movl	%edx, %eax
	cmpq	%rax, %rcx
	je	.LBB69_312
###SPA### trampoline_fmt_64
# %bb.199:
	movq	40(%rsp), %r13          # 8-byte Reload
	addq	$40, %r13
	leaq	.LJTI69_9(%rip), %r15
.LBB69_200:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	leal	(%r13,%rax,8), %r8d
	movb	$4, 88(%rsp)
	movl	%r8d, 92(%rsp)
	movq	(%r14), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB69_354
###SPA### trampoline_fmt_64
# %bb.201:                              #   in Loop: Header=BB69_200 Depth=1
	movl	192(%rsp), %ebx
	movq	(%rcx), %rcx
	movl	(%rcx,%rax,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB69_203
###SPA### trampoline_fmt_64
# %bb.202:                              #   in Loop: Header=BB69_200 Depth=1
	movl	%ecx, %eax
.LBB69_203:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB69_327
###SPA### trampoline_fmt_64
# %bb.204:                              #   in Loop: Header=BB69_200 Depth=1
	movzbl	%al, %eax
	movslq	(%r15,%rax,4), %rax
	addq	%r15, %rax
	jmpq	*%rax
.LBB69_351:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$2, %ebx
	jne	.LBB69_352
###SPA### trampoline_fmt_64
# %bb.353:                              #   in Loop: Header=BB69_200 Depth=1
	movl	$10, %edx
	movq	%r12, %rdi
	leaq	88(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE
	movl	200(%rsp), %eax
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%eax, 108(%rsp)
	movl	$10, %esi
	movq	%r12, %rdi
	jmp	.LBB69_331
.LBB69_327:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %al
	cmpl	$2, %ebx
	je	.LBB69_329
###SPA### trampoline_fmt_64
# %bb.328:                              #   in Loop: Header=BB69_200 Depth=1
	movzbl	200(%rsp), %eax
.LBB69_329:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%r8d, 108(%rsp)
	movzbl	%al, %ebp
	movq	%r12, %rdi
	leaq	104(%rsp), %rsi
	movl	%ebp, %edx
	callq	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	cmpl	$2, %ebx
	jne	.LBB69_356
###SPA### trampoline_fmt_64
# %bb.330:                              #   in Loop: Header=BB69_200 Depth=1
	movl	200(%rsp), %eax
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%eax, 108(%rsp)
	movq	%r12, %rdi
	movl	%ebp, %esi
.LBB69_331:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	leaq	104(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB69_356
.LBB69_334:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$2, %ebx
	jne	.LBB69_335
###SPA### trampoline_fmt_64
# %bb.336:                              #   in Loop: Header=BB69_200 Depth=1
	movl	$3, %edx
	movl	$16, %ecx
	movl	$4, %r9d
	movq	8(%rsp), %rbx           # 8-byte Reload
	movq	%rbx, %rdi
	leaq	.L.str.62(%rip), %rsi
	pushq	$8
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	744(%r12), %rax
	leaq	1(%rax), %rcx
	cmpq	752(%r12), %rcx
	jbe	.LBB69_339
###SPA### trampoline_fmt_64
# %bb.337:                              #   in Loop: Header=BB69_200 Depth=1
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_340
###SPA### trampoline_fmt_64
# %bb.338:                              #   in Loop: Header=BB69_200 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
	movq	8(%rsp), %rbx           # 8-byte Reload
.LBB69_339:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-14, (%rcx,%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
	addq	$1, %rax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_345
###SPA### trampoline_fmt_64
.LBB69_342:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_344
###SPA### trampoline_fmt_64
# %bb.343:                              #   in Loop: Header=BB69_200 Depth=1
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rax
.LBB69_345:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	(%rdi), %rcx
	movb	$69, (%rcx,%rax)
	movq	(%rsp), %rdx            # 8-byte Reload
	movq	(%rdx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	(%rdi), %rcx
	movb	$15, 1(%rcx,%rax)
	movq	(%rdx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	(%rdi), %rcx
	movb	$90, 1(%rcx,%rax)
	movq	(%rdx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	(%rdi), %rcx
	movb	$-64, 1(%rcx,%rax)
	addq	$1, (%rdx)
	movl	200(%rsp), %r8d
	movl	$2, %edx
	movl	$17, %ecx
	movl	$4, %r9d
	leaq	.L.str.103(%rip), %rsi
	jmp	.LBB69_349
.LBB69_346:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$2, %ebx
	jne	.LBB69_347
###SPA### trampoline_fmt_64
# %bb.348:                              #   in Loop: Header=BB69_200 Depth=1
	movl	$3, %edx
	movl	$16, %ecx
	movl	$4, %r9d
	movq	8(%rsp), %rbx           # 8-byte Reload
	movq	%rbx, %rdi
	leaq	.L.str.62(%rip), %rbp
	movq	%rbp, %rsi
	pushq	$8
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	200(%rsp), %r8d
	movl	$3, %edx
	movl	$17, %ecx
	movl	$4, %r9d
	movq	%rbx, %rdi
	movq	%rbp, %rsi
.LBB69_349:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	pushq	$8
	.cfi_adjust_cfa_offset 8
	jmp	.LBB69_350
.LBB69_332:                             #   in Loop: Header=BB69_200 Depth=1
	.cfi_def_cfa_offset 320
###SPA## trampoline_fmt_64
	cmpl	$2, %ebx
	jne	.LBB69_355
###SPA### trampoline_fmt_64
# %bb.333:                              #   in Loop: Header=BB69_200 Depth=1
	movl	200(%rsp), %ebp
	movl	152(%rsp), %ebx
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%r8d, 108(%rsp)
	movl	$9, %ecx
	movq	%r12, %rdi
	leaq	104(%rsp), %r14
	movq	%r14, %rsi
	movl	%ebx, %edx
	callq	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	movl	$10, %edx
	movq	%r12, %rdi
	movl	%ebx, %esi
	callq	_ZN2js3jit14MacroAssembler12loadBigInt64ENS0_8RegisterENS0_10Register64E
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%ebp, 108(%rsp)
	movl	$10, %esi
	movq	%r12, %rdi
	movq	%r14, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB69_356
.LBB69_352:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %edx
	movq	%r12, %rdi
	leaq	88(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE
	jmp	.LBB69_356
.LBB69_335:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %ebx
	andl	$15, %ebx
	movl	$3, %edx
	movl	$16, %ecx
	movl	$4, %r9d
	movq	8(%rsp), %rbp           # 8-byte Reload
	movq	%rbp, %rdi
	leaq	.L.str.62(%rip), %rsi
	pushq	$8
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$8, %rsp
	.cfi_adjust_cfa_offset -8
	movl	$3, %edx
	movl	$90, %ecx
	movl	$8, %r8d
	movq	%rbp, %rdi
	leaq	.L.str.224(%rip), %rsi
	movl	%ebx, %r9d
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	jmp	.LBB69_356
.LBB69_347:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %eax
	andl	$15, %eax
	movl	$3, %edx
	movl	$16, %ecx
	movl	$4, %r9d
	movq	8(%rsp), %rdi           # 8-byte Reload
	leaq	.L.str.62(%rip), %rsi
	pushq	%rax
	.cfi_adjust_cfa_offset 8
.LBB69_350:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	jmp	.LBB69_356
.LBB69_355:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movl	200(%rsp), %ebx
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%r8d, 108(%rsp)
	movl	$10, %edx
	movl	$9, %ecx
	movq	%r12, %rdi
	leaq	104(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	movl	$10, %esi
	movq	%r12, %rdi
	movl	%ebx, %edx
	callq	_ZN2js3jit14MacroAssembler12loadBigInt64ENS0_8RegisterENS0_10Register64E
.LBB69_356:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movl	216(%rsp), %ecx
	addl	$1, %ecx
	movl	%ecx, 216(%rsp)
	movq	208(%rsp), %rax
	movq	(%rax), %rdx
	movq	8(%rdx), %rsi
	movzbl	8(%rax), %eax
	addq	%rsi, %rax
	cmpq	%rcx, %rax
	je	.LBB69_312
###SPA### trampoline_fmt_64
# %bb.357:                              #   in Loop: Header=BB69_200 Depth=1
	movb	$24, %al
	cmpq	%rcx, %rsi
	jne	.LBB69_358
###SPA### trampoline_fmt_64
.LBB69_367:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	216(%rsp), %eax
	movq	208(%rsp), %r14
	movq	(%r14), %rcx
	movzbl	8(%r14), %edx
	addq	8(%rcx), %rdx
	cmpq	%rax, %rdx
	jne	.LBB69_200
###SPA### trampoline_fmt_64
	jmp	.LBB69_312
.LBB69_358:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdx), %rax
	movl	(%rax,%rcx,4), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB69_360
###SPA### trampoline_fmt_64
# %bb.359:                              #   in Loop: Header=BB69_200 Depth=1
	movl	%eax, %ecx
.LBB69_360:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	ja	.LBB69_367
###SPA### trampoline_fmt_64
# %bb.361:                              #   in Loop: Header=BB69_200 Depth=1
	movzbl	%cl, %ecx
	leaq	.LJTI69_10(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB69_366:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB69_367
.LBB69_364:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB69_367
.LBB69_365:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB69_367
.LBB69_363:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB69_367
.LBB69_362:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movb	$4, %al
	jmp	.LBB69_367
.LBB69_340:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	xorl	%eax, %eax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_342
###SPA### trampoline_fmt_64
	jmp	.LBB69_345
.LBB69_344:                             #   in Loop: Header=BB69_200 Depth=1
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	(%rsp), %rax            # 8-byte Reload
	movq	$0, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_345
.LBB69_312:
###SPA## trampoline_fmt_64
	movw	$225, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	$0, 180(%rsp)
	leaq	176(%rsp), %rsi
	movl	$15, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	72(%rsp), %rax          # 8-byte Reload
	cmpb	$0, 8(%rax)
	je	.LBB69_314
###SPA### trampoline_fmt_64
# %bb.313:
	movq	(%rax), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS0_6ImmPtrE
	movq	24(%rsp), %r14          # 8-byte Reload
	movq	(%rsp), %r15            # 8-byte Reload
	movq	8(%rsp), %r13           # 8-byte Reload
	jmp	.LBB69_325
.LBB69_314:
###SPA## trampoline_fmt_64
	movq	24(%rsp), %r14          # 8-byte Reload
	movl	176(%r14), %ebx
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler13callWithPatchEv
	movq	%rax, %rbp
	movq	8(%r12), %rax
	cmpq	%rax, 16(%r12)
	movq	(%rsp), %r15            # 8-byte Reload
	movq	8(%rsp), %r13           # 8-byte Reload
	jne	.LBB69_318
###SPA### trampoline_fmt_64
# %bb.315:
	movl	$1, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_316
###SPA### trampoline_fmt_64
# %bb.317:
	movq	8(%r12), %rax
.LBB69_318:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 8(%r12)
	movq	(%r12), %rcx
	shlq	$32, %rbp
	movq	%rbp, (%rcx,%rax,8)
	movb	$1, %al
	andb	%al, 384(%r12)
	movq	32(%r12), %rax
	cmpq	%rax, 40(%r12)
	jne	.LBB69_323
###SPA### trampoline_fmt_64
.LBB69_320:
###SPA## trampoline_fmt_64
	leaq	24(%r12), %rdi
	movl	$1, %esi
	callq	_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_321
###SPA### trampoline_fmt_64
# %bb.322:
	movq	32(%r12), %rax
.LBB69_323:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r12)
	movq	24(%r12), %rcx
	movl	%ebx, (%rcx,%rax,4)
	movb	$1, %al
.LBB69_324:
###SPA## trampoline_fmt_64
	andb	%al, 384(%r12)
.LBB69_325:
###SPA## trampoline_fmt_64
	movl	$-2, 88(%rsp)
	movw	$80, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	$0, 180(%rsp)
	leaq	176(%rsp), %rdx
	movl	$2989, %esi             # imm = 0xBAD
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE
	leaq	88(%rsp), %rdx
	movl	$4, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%r12, %rdi
	movq	40(%rsp), %rsi          # 8-byte Reload
                                        # kill: def $esi killed $esi killed $rsi
	callq	_ZN2js3jit14MacroAssembler9freeStackEj
	cmpq	$0, 96(%r14)
	je	.LBB69_326
###SPA### trampoline_fmt_64
# %bb.368:
	movq	88(%r14), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB69_370
###SPA### trampoline_fmt_64
# %bb.369:
	movl	%eax, %ecx
.LBB69_370:
###SPA## trampoline_fmt_64
	addb	$-108, %cl
	cmpb	$19, %cl
	ja	.LBB69_417
###SPA### trampoline_fmt_64
# %bb.371:
	movzbl	%cl, %ecx
	leaq	.LJTI69_11(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB69_413:
###SPA## trampoline_fmt_64
	movl	%eax, %ecx
	addb	$-111, %cl
	cmpb	$2, %cl
	jae	.LBB69_414
###SPA### trampoline_fmt_64
# %bb.416:
	xorl	%esi, %esi
	movq	%r12, %rdi
	callq	_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj
	movq	%r12, %rdi
	callq	_ZL23UnboxAnyrefIntoValueRegRN2js3jit14MacroAssemblerENS0_8RegisterES3_NS0_12ValueOperandES3_
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_418
###SPA### trampoline_fmt_64
	jmp	.LBB69_421
.LBB69_326:
###SPA## trampoline_fmt_64
	movabsq	$-1829587348619264, %rax # imm = 0xFFF9800000000000
	movq	%rax, 176(%rsp)
	leaq	_ZN2js3jitL15JSReturnOperandE(%rip), %rdx
	leaq	176(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler9moveValueERKN2JS5ValueERKNS0_12ValueOperandE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_418
###SPA### trampoline_fmt_64
	jmp	.LBB69_421
.LBB69_374:
###SPA## trampoline_fmt_64
	movl	$-2, 176(%rsp)
	movq	744(%r12), %rax
	movq	752(%r12), %rcx
	leaq	16(%rax), %rdx
	cmpb	$0, 1024(%r12)
	je	.LBB69_375
###SPA### trampoline_fmt_64
# %bb.379:
	cmpq	%rdx, %rcx
	jae	.LBB69_383
###SPA### trampoline_fmt_64
# %bb.380:
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_382
###SPA### trampoline_fmt_64
# %bb.381:
	movq	(%r15), %rax
.LBB69_383:
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movb	$-59, (%rcx,%rax)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, (%r15)
	movb	$-8, %bl
	jmp	.LBB69_384
.LBB69_395:
###SPA## trampoline_fmt_64
	movl	$-2, 176(%rsp)
	cmpb	$0, 1024(%r12)
	movq	744(%r12), %rax
	je	.LBB69_396
###SPA### trampoline_fmt_64
# %bb.405:
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_409
###SPA### trampoline_fmt_64
# %bb.406:
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_408
###SPA### trampoline_fmt_64
# %bb.407:
	movq	(%r15), %rax
.LBB69_409:
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movb	$-59, (%rcx,%rax)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, (%r15)
	movb	$-7, %bl
	jmp	.LBB69_410
.LBB69_411:
###SPA## trampoline_fmt_64
	leaq	88(%rsp), %r9
	movl	$0, %esi
	xorl	%edx, %edx
	movl	$10, %ecx
	movq	%r12, %rdi
	movq	%r14, %r8
	callq	_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE
	movl	$9, %esi
	movl	$10, %edx
	jmp	.LBB69_373
.LBB69_372:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	xorl	%edx, %edx
.LBB69_373:
###SPA## trampoline_fmt_64
	movl	$1, %ecx
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX648boxValueE11JSValueTypeNS0_8RegisterES3_
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_418
###SPA### trampoline_fmt_64
	jmp	.LBB69_421
.LBB69_375:
###SPA## trampoline_fmt_64
	movb	$15, %bl
	cmpq	%rdx, %rcx
	jae	.LBB69_384
###SPA### trampoline_fmt_64
# %bb.376:
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_378
###SPA### trampoline_fmt_64
# %bb.377:
	movq	(%r15), %rax
.LBB69_384:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	%bl, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$46, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	leaq	176(%rsp), %rbx
	movl	$11, %esi
	movq	%r12, %rdi
	movq	%rbx, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movss	.LCPI69_2(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	xorl	%esi, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX6419loadConstantFloat32EfNS0_13FloatRegisterE
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	744(%r12), %rax
	leaq	1(%rax), %rcx
	cmpq	752(%r12), %rcx
	jbe	.LBB69_387
###SPA### trampoline_fmt_64
# %bb.385:
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_388
###SPA### trampoline_fmt_64
# %bb.386:
	movq	(%r15), %rax
.LBB69_387:
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movb	$-13, (%rcx,%rax)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_393
###SPA### trampoline_fmt_64
.LBB69_390:
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_392
###SPA### trampoline_fmt_64
# %bb.391:
	movq	(%r15), %rax
.LBB69_393:
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movb	$15, (%rcx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movq	(%r13), %rcx
	movb	$90, 1(%rcx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movq	(%r13), %rcx
	movb	$-64, 1(%rcx,%rax)
	addq	$1, (%r15)
	jmp	.LBB69_394
.LBB69_396:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	cmpq	752(%r12), %rcx
	jbe	.LBB69_399
###SPA### trampoline_fmt_64
# %bb.397:
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_400
###SPA### trampoline_fmt_64
# %bb.398:
	movq	(%r15), %rax
.LBB69_399:
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movb	$102, (%rcx,%rax)
	movq	(%r15), %rax
	addq	$1, %rax
.LBB69_401:
###SPA## trampoline_fmt_64
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	movb	$15, %bl
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_410
###SPA### trampoline_fmt_64
# %bb.402:
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_404
###SPA### trampoline_fmt_64
# %bb.403:
	movq	(%r15), %rax
.LBB69_410:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	%bl, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$46, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	leaq	176(%rsp), %rbx
	movl	$11, %esi
	movq	%r12, %rdi
	movq	%rbx, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movsd	.LCPI69_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movl	$32, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX6418loadConstantDoubleEdNS0_13FloatRegisterE
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
.LBB69_394:
###SPA## trampoline_fmt_64
	leaq	.L.str.210(%rip), %rsi
	movl	$1, %edx
	movl	$126, %ecx
	movl	$1, %r8d
	xorl	%r9d, %r9d
	movq	%r13, %rdi
	callq	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE
.LBB69_417:
###SPA## trampoline_fmt_64
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_421
###SPA### trampoline_fmt_64
.LBB69_418:
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_420
###SPA### trampoline_fmt_64
# %bb.419:
	movq	(%r15), %rax
.LBB69_421:
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movb	$-61, (%rcx,%rax)
	addq	$1, (%r15)
	cmpq	$0, 8(%r14)
	je	.LBB69_461
###SPA### trampoline_fmt_64
# %bb.422:
	leaq	120(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	40(%rsp), %rax          # 8-byte Reload
	movl	%eax, 1316(%r12)
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	leaq	224(%rsp), %rax
	movq	%rax, 208(%rsp)
	movl	$0, 216(%rsp)
	cmpq	$0, 232(%rsp)
	je	.LBB69_424
###SPA### trampoline_fmt_64
# %bb.423:
	movq	224(%rsp), %rax
	movzbl	(%rax), %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB69_424:
###SPA## trampoline_fmt_64
	cmpl	$0, 192(%rsp)
	je	.LBB69_425
###SPA### trampoline_fmt_64
# %bb.434:
	movl	200(%rsp), %ebx
	movq	56(%rsp), %rbp          # 8-byte Reload
	movslq	%ebp, %rax
	cmpq	%rbp, %rax
	jne	.LBB69_436
###SPA### trampoline_fmt_64
# %bb.435:
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%ebx, 108(%rsp)
	leaq	104(%rsp), %rdx
	movq	%r12, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
	jmp	.LBB69_437
.LBB69_425:
###SPA## trampoline_fmt_64
	movb	200(%rsp), %bl
	movq	56(%rsp), %rsi          # 8-byte Reload
	testq	%rsi, %rsi
	je	.LBB69_426
###SPA### trampoline_fmt_64
# %bb.433:
	movzbl	%bl, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	jmp	.LBB69_437
.LBB69_436:
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movl	$11, %edx
	movq	%r12, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%ebx, 108(%rsp)
	leaq	104(%rsp), %rdx
	movl	$11, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB69_437
.LBB69_426:
###SPA## trampoline_fmt_64
	movq	744(%r12), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r12)
	jae	.LBB69_429
###SPA### trampoline_fmt_64
# %bb.427:
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_428
###SPA### trampoline_fmt_64
.LBB69_429:
###SPA## trampoline_fmt_64
	cmpb	$7, %bl
	ja	.LBB69_431
###SPA### trampoline_fmt_64
.LBB69_430:
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
	jmp	.LBB69_432
.LBB69_414:
###SPA## trampoline_fmt_64
	cmpb	$108, %al
	jne	.LBB69_417
###SPA### trampoline_fmt_64
# %bb.415:
	leaq	.L.str.205(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1301, 0                # imm = 0x515
	callq	abort@PLT
.LBB69_24:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_25
.LBB69_28:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_29
.LBB69_94:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_95
.LBB69_140:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_141
.LBB69_144:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_145
.LBB69_148:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_149
.LBB69_152:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_153
.LBB69_11:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_12
.LBB69_18:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB69_19
.LBB69_99:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB69_102
.LBB69_104:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB69_107
.LBB69_420:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_421
.LBB69_316:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	andb	%al, 384(%r12)
	movq	32(%r12), %rax
	cmpq	%rax, 40(%r12)
	je	.LBB69_320
###SPA### trampoline_fmt_64
	jmp	.LBB69_323
.LBB69_321:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB69_324
.LBB69_388:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	xorl	%eax, %eax
	movq	%rax, 744(%r12)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_390
###SPA### trampoline_fmt_64
	jmp	.LBB69_393
.LBB69_392:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_393
.LBB69_428:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	cmpb	$7, %bl
	jbe	.LBB69_430
###SPA### trampoline_fmt_64
.LBB69_431:
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	shrb	$3, %al
	movl	%eax, %ecx
	shlb	$2, %cl
	movq	(%r15), %rdx
	movq	(%r13), %rsi
	orb	%al, %cl
	orb	$64, %cl
	movb	%cl, (%rsi,%rdx)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, (%r15)
.LBB69_432:
###SPA## trampoline_fmt_64
	movq	(%r13), %rcx
	movb	$51, (%rcx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movl	%ebx, %ecx
	andb	$7, %cl
	movq	(%r13), %rdx
	shlb	$3, %bl
	orb	%cl, %bl
	orb	$-64, %bl
	movb	%bl, 1(%rdx,%rax)
	addq	$1, (%r15)
.LBB69_437:
###SPA## trampoline_fmt_64
	movl	216(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 216(%rsp)
	movq	208(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB69_439
###SPA### trampoline_fmt_64
# %bb.438:
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB69_439:
###SPA## trampoline_fmt_64
	cmpl	$0, 192(%rsp)
	je	.LBB69_440
###SPA### trampoline_fmt_64
# %bb.445:
	movl	200(%rsp), %eax
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%eax, 108(%rsp)
	leaq	104(%rsp), %rdx
	movl	$14, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB69_446
.LBB69_440:
###SPA## trampoline_fmt_64
	movb	200(%rsp), %bl
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_444
###SPA### trampoline_fmt_64
# %bb.441:
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_443
###SPA### trampoline_fmt_64
# %bb.442:
	movq	(%r15), %rax
.LBB69_444:
###SPA## trampoline_fmt_64
	movl	%ebx, %ecx
	shrb	%cl
	orb	$73, %cl
	movq	(%r13), %rdx
	andb	$125, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movq	(%r13), %rcx
	movb	$-117, 1(%rcx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movq	(%r13), %rcx
	shlb	$3, %bl
	orb	$-58, %bl
	movb	%bl, 1(%rcx,%rax)
	addq	$1, (%r15)
.LBB69_446:
###SPA## trampoline_fmt_64
	movl	216(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 216(%rsp)
	movq	208(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB69_448
###SPA### trampoline_fmt_64
# %bb.447:
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB69_448:
###SPA## trampoline_fmt_64
	movl	1316(%r12), %eax
	addl	$40, %eax
	cmpl	$0, 192(%rsp)
	je	.LBB69_449
###SPA### trampoline_fmt_64
# %bb.450:
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%eax, 108(%rsp)
	leaq	104(%rsp), %rsi
	movl	$10, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
	movl	200(%rsp), %eax
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%eax, 108(%rsp)
	leaq	104(%rsp), %rdx
	movl	$10, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB69_451
.LBB69_449:
###SPA## trampoline_fmt_64
	movl	200(%rsp), %edx
	movw	$65, 104(%rsp)
	movb	$16, 106(%rsp)
	movl	%eax, 108(%rsp)
	leaq	104(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
.LBB69_451:
###SPA## trampoline_fmt_64
	movl	216(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 216(%rsp)
	movq	208(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB69_453
###SPA### trampoline_fmt_64
# %bb.452:
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	leaq	176(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB69_453:
###SPA## trampoline_fmt_64
	cmpb	$0, 184(%r14)
	je	.LBB69_454
###SPA### trampoline_fmt_64
# %bb.455:
	movl	$33, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jb	.LBB69_457
###SPA### trampoline_fmt_64
	jmp	.LBB69_460
.LBB69_454:
###SPA## trampoline_fmt_64
	movl	$33, %edi
	callq	_ZN2js4wasm21SymbolicAddressTargetENS0_15SymbolicAddressE
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZN2js3jit14MacroAssembler4callENS0_6ImmPtrE
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB69_460
###SPA### trampoline_fmt_64
.LBB69_457:
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	%r13, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_459
###SPA### trampoline_fmt_64
# %bb.458:
	movq	(%r15), %rax
.LBB69_460:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$-123, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	leaq	144(%rsp), %rdx
	movl	$5, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
.LBB69_461:
###SPA## trampoline_fmt_64
	leaq	88(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	40(%rsp), %rbx          # 8-byte Reload
	movl	%ebx, 1316(%r12)
	movq	%r12, %rdi
	movl	%ebx, %esi
	callq	_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj
	movq	%r12, %rdi
	movl	%ebx, %esi
	callq	_ZN2js3jit14MacroAssembler9freeStackEj
	movw	$225, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	$32, 180(%rsp)
	leaq	176(%rsp), %rsi
	movl	$10, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movl	$10, %esi
	movl	$10, %edx
	movl	$7, %ecx
	movq	%r12, %rdi
	callq	_ZN2js3jit14MacroAssembler25enterFakeExitFrameForWasmENS0_8RegisterES2_NS0_13ExitFrameTypeE
	movw	$225, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	$16, 180(%rsp)
	leaq	176(%rsp), %rsi
	movl	$10, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$161, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	$24, 180(%rsp)
	leaq	176(%rsp), %rsi
	movl	$10, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$160, 176(%rsp)
	movb	$16, 178(%rsp)
	movl	$0, 180(%rsp)
	leaq	176(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE
	movl	744(%r12), %eax
	movl	%eax, 84(%rsp)
	xorl	%ebx, %ebx
	cmpb	$0, 1016(%r12)
	jne	.LBB69_465
###SPA### trampoline_fmt_64
# %bb.462:
	movb	384(%r12), %al
	testb	%al, %al
	je	.LBB69_465
###SPA### trampoline_fmt_64
# %bb.463:
	movb	664(%r12), %al
	testb	%al, %al
	je	.LBB69_465
###SPA### trampoline_fmt_64
# %bb.464:
	cmpb	$0, 728(%r12)
	setne	%bl
.LBB69_465:
###SPA## trampoline_fmt_64
	movq	224(%rsp), %rdi
	leaq	248(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB69_467
###SPA### trampoline_fmt_64
# %bb.466:
	callq	free@PLT
.LBB69_467:
###SPA## trampoline_fmt_64
	testb	%bl, %bl
	je	.LBB69_472
###SPA### trampoline_fmt_64
# %bb.468:
	movl	176(%r14), %r14d
	movq	64(%rsp), %rbx          # 8-byte Reload
	movq	8(%rbx), %rax
	cmpq	%rax, 16(%rbx)
	jne	.LBB69_471
###SPA### trampoline_fmt_64
# %bb.469:
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB69_472
###SPA### trampoline_fmt_64
# %bb.470:
	movq	8(%rbx), %rax
.LBB69_471:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 8(%rbx)
	movq	(%rbx), %rbp
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rbx
	addq	%rax, %rbx
	movq	80(%rsp), %rcx
	leaq	176(%rsp), %rdi
	movl	$2, %esi
	movl	%r14d, %edx
	callq	_ZN2js4wasm9CodeRangeC1ENS1_4KindEjNS0_7OffsetsE
	movups	176(%rsp), %xmm0
	movups	185(%rsp), %xmm1
	movups	%xmm1, 9(%rbp,%rbx)
	movups	%xmm0, (%rbp,%rbx)
	movb	$1, %dil
	movq	%fs:40, %rax
	cmpq	256(%rsp), %rax
	je	.LBB69_474
###SPA### trampoline_fmt_64
.LBB69_475:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB69_459:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_460
.LBB69_443:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_444
.LBB69_382:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_383
.LBB69_408:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_409
.LBB69_378:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_384
.LBB69_400:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	xorl	%eax, %eax
	jmp	.LBB69_401
.LBB69_404:
###SPA## trampoline_fmt_64
	movq	16(%rsp), %rax          # 8-byte Reload
	movb	$1, (%rax)
	movq	$0, (%r15)
	xorl	%eax, %eax
	jmp	.LBB69_410
.LBB69_77:
###SPA## trampoline_fmt_64
	leaq	.L.str.198(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$440, 0                 # imm = 0x1B8
	callq	abort@PLT
.LBB69_129:
###SPA## trampoline_fmt_64
	leaq	.L.str.201(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$466, 0                 # imm = 0x1D2
	callq	abort@PLT
.LBB69_59:
###SPA## trampoline_fmt_64
	leaq	.L.str.196(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$347, 0                 # imm = 0x15B
	callq	abort@PLT
.LBB69_75:
###SPA## trampoline_fmt_64
	leaq	.L.str.197(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$424, 0                 # imm = 0x1A8
	callq	abort@PLT
.LBB69_66:
###SPA## trampoline_fmt_64
	leaq	.L.str.197(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$377, 0                 # imm = 0x179
	callq	abort@PLT
.LBB69_118:
###SPA## trampoline_fmt_64
	leaq	.L.str.106(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1467, 0                # imm = 0x5BB
	callq	abort@PLT
.LBB69_311:
###SPA## trampoline_fmt_64
	leaq	.L.str.203(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1143, 0                # imm = 0x477
	callq	abort@PLT
.LBB69_310:
###SPA## trampoline_fmt_64
	leaq	.L.str.203(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1140, 0                # imm = 0x474
	callq	abort@PLT
.LBB69_354:
###SPA## trampoline_fmt_64
	leaq	.L.str.204(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1223, 0                # imm = 0x4C7
	callq	abort@PLT
.LBB69_295:
###SPA## trampoline_fmt_64
	leaq	.L.str.203(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1133, 0                # imm = 0x46D
	callq	abort@PLT
.LBB69_412:
###SPA## trampoline_fmt_64
	leaq	.L.str.44(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1287, 0                # imm = 0x507
	callq	abort@PLT
.Lfunc_end69:
	.size	_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE, .Lfunc_end69-_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
	.cfi_endproc
	.section	.rodata._ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE,"a",@progbits
	.p2align	2
.LJTI69_0:
	.long	.LBB69_40-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_41-.LJTI69_0
	.long	.LBB69_39-.LJTI69_0
	.long	.LBB69_38-.LJTI69_0
	.long	.LBB69_37-.LJTI69_0
	.long	.LBB69_36-.LJTI69_0
.LJTI69_1:
	.long	.LBB69_53-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_54-.LJTI69_1
	.long	.LBB69_52-.LJTI69_1
	.long	.LBB69_51-.LJTI69_1
	.long	.LBB69_50-.LJTI69_1
	.long	.LBB69_49-.LJTI69_1
.LJTI69_2:
	.long	.LBB69_77-.LJTI69_2
	.long	.LBB69_56-.LJTI69_2
	.long	.LBB69_60-.LJTI69_2
	.long	.LBB69_67-.LJTI69_2
.LJTI69_3:
	.long	.LBB69_70-.LJTI69_3
	.long	.LBB69_72-.LJTI69_3
	.long	.LBB69_74-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_75-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_69-.LJTI69_3
	.long	.LBB69_76-.LJTI69_3
	.long	.LBB69_76-.LJTI69_3
.LJTI69_4:
	.long	.LBB69_78-.LJTI69_4
	.long	.LBB69_58-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_59-.LJTI69_4
	.long	.LBB69_58-.LJTI69_4
	.long	.LBB69_58-.LJTI69_4
.LJTI69_5:
	.long	.LBB69_89-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_90-.LJTI69_5
	.long	.LBB69_88-.LJTI69_5
	.long	.LBB69_87-.LJTI69_5
	.long	.LBB69_86-.LJTI69_5
	.long	.LBB69_85-.LJTI69_5
.LJTI69_6:
	.long	.LBB69_133-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_134-.LJTI69_6
	.long	.LBB69_129-.LJTI69_6
	.long	.LBB69_132-.LJTI69_6
	.long	.LBB69_130-.LJTI69_6
	.long	.LBB69_133-.LJTI69_6
	.long	.LBB69_128-.LJTI69_6
.LJTI69_7:
	.long	.LBB69_292-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_311-.LJTI69_7
	.long	.LBB69_310-.LJTI69_7
	.long	.LBB69_235-.LJTI69_7
	.long	.LBB69_235-.LJTI69_7
	.long	.LBB69_230-.LJTI69_7
	.long	.LBB69_205-.LJTI69_7
.LJTI69_8:
	.long	.LBB69_196-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_197-.LJTI69_8
	.long	.LBB69_195-.LJTI69_8
	.long	.LBB69_194-.LJTI69_8
	.long	.LBB69_193-.LJTI69_8
	.long	.LBB69_192-.LJTI69_8
.LJTI69_9:
	.long	.LBB69_351-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_327-.LJTI69_9
	.long	.LBB69_354-.LJTI69_9
	.long	.LBB69_346-.LJTI69_9
	.long	.LBB69_334-.LJTI69_9
	.long	.LBB69_332-.LJTI69_9
.LJTI69_10:
	.long	.LBB69_366-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_367-.LJTI69_10
	.long	.LBB69_365-.LJTI69_10
	.long	.LBB69_364-.LJTI69_10
	.long	.LBB69_363-.LJTI69_10
	.long	.LBB69_362-.LJTI69_10
.LJTI69_11:
	.long	.LBB69_413-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_417-.LJTI69_11
	.long	.LBB69_412-.LJTI69_11
	.long	.LBB69_395-.LJTI69_11
	.long	.LBB69_374-.LJTI69_11
	.long	.LBB69_411-.LJTI69_11
	.long	.LBB69_372-.LJTI69_11
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE
.LCPI70_0:
	.quad	4                       # 0x4
	.quad	8                       # 0x8
.LCPI70_1:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	255                     # 0xff
.LCPI70_2:
	.quad	1                       # 0x1
	.quad	8                       # 0x8
.LCPI70_3:
	.zero	16
	.section	.text._ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE,"ax",@progbits
	.hidden	_ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE
	.globl	_ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE
	.p2align	4, 0x90
	.type	_ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE,@function
_ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE: # @_ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$2712, %rsp             # imm = 0xA98
	.cfi_def_cfa_offset 2768
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r13
	movq	%rdx, 120(%rsp)         # 8-byte Spill
	movq	%rsi, %r15
	movq	%rdi, 136(%rsp)         # 8-byte Spill
	movq	%fs:40, %rax
	movq	%rax, 2704(%rsp)
	movq	$0, 272(%rsp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, 224(%rsp)
	movdqa	%xmm0, 208(%rsp)
	movdqa	%xmm0, 192(%rsp)
	leaq	192(%rsp), %rbx
	movl	$4096, %esi             # imm = 0x1000
	movq	%rbx, %rdi
	callq	_ZN2js9LifoAlloc5resetEm
	movq	%rbx, 328(%rsp)
	leaq	336(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN2js9LifoAlloc4markEv
	leaq	424(%rsp), %rbx
	leaq	328(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssemblerC2ENS1_9WasmTokenERNS0_13TempAllocatorE
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js4wasm12CompiledCode4swapERNS_3jit14MacroAssemblerE
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$-2, 184(%rsp)
	cmpq	$0, 8(%r15)
	movq	%r13, 80(%rsp)          # 8-byte Spill
	je	.LBB70_238
###SPA### trampoline_fmt_64
# %bb.2:
	leaq	24(%r13), %rax
	movq	%rax, 104(%rsp)         # 8-byte Spill
	xorl	%r12d, %r12d
	leaq	376(%rsp), %rbx
	movl	$1, %eax
	movd	%eax, %xmm0
	movdqa	%xmm0, 144(%rsp)        # 16-byte Spill
	movq	%r15, 112(%rsp)         # 8-byte Spill
	.p2align	4, 0x90
.LBB70_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB70_7 Depth 2
                                        #     Child Loop BB70_54 Depth 2
                                        #     Child Loop BB70_75 Depth 2
                                        #     Child Loop BB70_79 Depth 2
                                        #     Child Loop BB70_91 Depth 2
                                        #     Child Loop BB70_143 Depth 2
###SPA## trampoline_fmt_64
	movq	(%r15), %r14
	leaq	(%r12,%r12,2), %rax
	shlq	$6, %rax
	movq	%rax, 64(%rsp)          # 8-byte Spill
	movq	$0, 168(%rsp)
	movl	$0, 176(%rsp)
	movl	$0, 1740(%rsp)
	leaq	2696(%rsp), %rax
	movq	%rax, 2672(%rsp)
	movl	$369301014, 2696(%rsp)  # imm = 0x16031616
	movdqa	.LCPI70_0(%rip), %xmm0  # xmm0 = [4,8]
	movdqu	%xmm0, 2680(%rsp)
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	leaq	2672(%rsp), %rax
	movq	%rax, 408(%rsp)
	movl	$0, 416(%rsp)
	cmpq	$0, 2680(%rsp)
	je	.LBB70_5
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB70_3 Depth=1
	movq	2672(%rsp), %rax
	movzbl	(%rax), %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	416(%rsp), %eax
	movq	408(%rsp), %rcx
	leaq	8(%rcx), %rdx
	movq	8(%rcx), %rsi
	jmp	.LBB70_6
	.p2align	4, 0x90
.LBB70_5:                               #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	2680(%rsp), %rdx
	xorl	%esi, %esi
	movq	%rax, %rcx
	xorl	%eax, %eax
.LBB70_6:                               #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	64(%rsp), %rdi          # 8-byte Reload
	leaq	(%r14,%rdi), %rbp
	movl	%eax, %edi
	cmpq	%rdi, %rsi
	je	.LBB70_10
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB70_7:                               #   Parent Loop BB70_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	addl	$1, %eax
	movl	%eax, 416(%rsp)
	cmpq	%rax, (%rdx)
	je	.LBB70_9
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB70_7 Depth=2
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	416(%rsp), %eax
	movq	408(%rsp), %rcx
.LBB70_9:                               #   in Loop: Header=BB70_7 Depth=2
###SPA## trampoline_fmt_64
	cmpq	%rax, 8(%rcx)
	leaq	8(%rcx), %rdx
	jne	.LBB70_7
###SPA### trampoline_fmt_64
.LBB70_10:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%r14, 88(%rsp)          # 8-byte Spill
	movl	384(%rsp), %eax
	movl	%eax, %r15d
	negl	%r15d
	andl	$7, %r15d
	addl	%eax, %r15d
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	movq	376(%rsp), %rax
	movzbl	384(%rsp), %r13d
	addq	8(%rax), %r13
	movl	%r13d, %eax
	movq	%rax, 72(%rsp)          # 8-byte Spill
	cmpq	$1, %rax
	movl	$1, %eax
	cmoval	%r13d, %eax
	leal	(%r15,%rax,8), %eax
	movl	$8, %esi
	subl	%eax, %esi
	andl	$15, %esi
	addl	%eax, %esi
	movl	$6, %edx
	leaq	424(%rsp), %r14
	movq	%r14, %rdi
	movl	%esi, 96(%rsp)          # 4-byte Spill
	leaq	168(%rsp), %rcx
	callq	_ZN2js4wasm20GenerateExitPrologueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	leaq	184(%rsp), %rax
	movq	%rax, (%rsp)
	movl	$10, %ecx
	movl	$12, %r8d
	xorl	%r9d, %r9d
	movq	%r14, %rdi
	movq	%rbp, 128(%rsp)         # 8-byte Spill
	movq	%rbp, %rsi
	movq	%r15, 56(%rsp)          # 8-byte Spill
	movl	%r15d, %edx
	callq	_ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	leaq	2672(%rsp), %rax
	movq	%rax, 408(%rsp)
	movl	$0, 416(%rsp)
	cmpq	$0, 2680(%rsp)
	je	.LBB70_12
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB70_3 Depth=1
	movq	2672(%rsp), %rax
	movzbl	(%rax), %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB70_12:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$0, 392(%rsp)
	leaq	2632(%rsp), %r14
	movq	%r12, %rbp
	je	.LBB70_14
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB70_3 Depth=1
	movw	$225, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movl	$16, 2636(%rsp)
	movl	$10, %edx
	leaq	424(%rsp), %rbx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movl	400(%rsp), %eax
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movl	%eax, 2636(%rsp)
	movl	$10, %esi
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB70_15
	.p2align	4, 0x90
.LBB70_14:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	400(%rsp), %edx
	movw	$225, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movl	$16, 2636(%rsp)
	leaq	424(%rsp), %rbx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
.LBB70_15:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	416(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 416(%rsp)
	movq	408(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB70_17
###SPA### trampoline_fmt_64
# %bb.16:                               #   in Loop: Header=BB70_3 Depth=1
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	leaq	376(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB70_17:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$0, 392(%rsp)
	je	.LBB70_19
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB70_3 Depth=1
	movl	400(%rsp), %eax
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movl	%eax, 2636(%rsp)
	movq	%rbx, %rdi
	movl	%ebp, %esi
	movq	%r14, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	jmp	.LBB70_28
	.p2align	4, 0x90
.LBB70_19:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	400(%rsp), %bl
	testl	%ebp, %ebp
	je	.LBB70_21
###SPA### trampoline_fmt_64
# %bb.20:                               #   in Loop: Header=BB70_3 Depth=1
	movzbl	%bl, %edx
	leaq	424(%rsp), %rbx
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	jmp	.LBB70_28
.LBB70_21:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1168(%rsp), %rax
	addq	$16, %rax
	cmpq	%rax, 1176(%rsp)
	jae	.LBB70_23
###SPA### trampoline_fmt_64
# %bb.22:                               #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_25
###SPA### trampoline_fmt_64
.LBB70_23:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$7, %bl
	ja	.LBB70_26
###SPA### trampoline_fmt_64
.LBB70_24:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1168(%rsp), %rax
	jmp	.LBB70_27
.LBB70_25:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	cmpb	$7, %bl
	jbe	.LBB70_24
###SPA### trampoline_fmt_64
.LBB70_26:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	shrb	$3, %al
	movl	%eax, %ecx
	shlb	$2, %cl
	movq	1160(%rsp), %rdx
	movq	1168(%rsp), %rsi
	orb	%al, %cl
	orb	$64, %cl
	movb	%cl, (%rdx,%rsi)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
.LBB70_27:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$51, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movl	%ebx, %edx
	andb	$7, %dl
	shlb	$3, %bl
	orb	%dl, %bl
	orb	$-64, %bl
	movb	%bl, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rbx
	.p2align	4, 0x90
.LBB70_28:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	416(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 416(%rsp)
	movq	408(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB70_30
###SPA### trampoline_fmt_64
# %bb.29:                               #   in Loop: Header=BB70_3 Depth=1
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	leaq	376(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB70_30:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$0, 392(%rsp)
	je	.LBB70_32
###SPA### trampoline_fmt_64
# %bb.31:                               #   in Loop: Header=BB70_3 Depth=1
	movl	400(%rsp), %eax
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movl	%eax, 2636(%rsp)
	movq	%rbx, %rdi
	movl	%r13d, %esi
	movq	%r14, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	jmp	.LBB70_34
	.p2align	4, 0x90
.LBB70_32:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	400(%rsp), %bl
	movq	72(%rsp), %rsi          # 8-byte Reload
	testq	%rsi, %rsi
	je	.LBB70_94
###SPA### trampoline_fmt_64
# %bb.33:                               #   in Loop: Header=BB70_3 Depth=1
	movzbl	%bl, %edx
	leaq	424(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
.LBB70_34:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	80(%rsp), %r13          # 8-byte Reload
	leaq	376(%rsp), %r12
.LBB70_35:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	416(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 416(%rsp)
	movq	408(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB70_37
###SPA### trampoline_fmt_64
# %bb.36:                               #   in Loop: Header=BB70_3 Depth=1
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB70_37:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$0, 392(%rsp)
	je	.LBB70_39
###SPA### trampoline_fmt_64
# %bb.38:                               #   in Loop: Header=BB70_3 Depth=1
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movq	56(%rsp), %rax          # 8-byte Reload
	movl	%eax, 2636(%rsp)
	movl	$10, %edx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
	movl	400(%rsp), %eax
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movl	%eax, 2636(%rsp)
	movl	$10, %esi
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB70_40
	.p2align	4, 0x90
.LBB70_39:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	400(%rsp), %edx
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movq	56(%rsp), %rax          # 8-byte Reload
	movl	%eax, 2636(%rsp)
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
.LBB70_40:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	416(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 416(%rsp)
	movq	408(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB70_42
###SPA### trampoline_fmt_64
# %bb.41:                               #   in Loop: Header=BB70_3 Depth=1
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB70_42:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	88(%rsp), %rax          # 8-byte Reload
	movq	64(%rsp), %rdx          # 8-byte Reload
	leaq	(%rax,%rdx), %rcx
	addq	$88, %rcx
	movq	96(%rax,%rdx), %rax
	cmpq	$1, %rax
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	je	.LBB70_45
###SPA### trampoline_fmt_64
# %bb.43:                               #   in Loop: Header=BB70_3 Depth=1
	testq	%rax, %rax
	jne	.LBB70_49
###SPA### trampoline_fmt_64
# %bb.44:                               #   in Loop: Header=BB70_3 Depth=1
	movq	$0, 2632(%rsp)
	jmp	.LBB70_50
	.p2align	4, 0x90
.LBB70_45:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx), %rax
	movl	(%rax), %eax
	leaq	1(,%rax,4), %rax
	movq	%rax, 2632(%rsp)
	movl	%eax, %ecx
	andb	$3, %cl
	je	.LBB70_50
###SPA### trampoline_fmt_64
.LBB70_46:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$2, %cl
	je	.LBB70_51
###SPA### trampoline_fmt_64
# %bb.47:                               #   in Loop: Header=BB70_3 Depth=1
	cmpb	$1, %cl
	jne	.LBB70_410
###SPA### trampoline_fmt_64
# %bb.48:                               #   in Loop: Header=BB70_3 Depth=1
	movq	%rbp, %r12
	movl	$255, 2656(%rsp)
	movdqa	144(%rsp), %xmm0        # 16-byte Reload
	movdqu	%xmm0, 2640(%rsp)
	jmp	.LBB70_52
	.p2align	4, 0x90
.LBB70_49:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rcx, %rax
	orq	$2, %rax
	movq	%rax, 2632(%rsp)
	movl	%eax, %ecx
	andb	$3, %cl
	jne	.LBB70_46
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB70_50:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %r12
	movl	$255, 2656(%rsp)
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 2640(%rsp)
	jmp	.LBB70_59
	.p2align	4, 0x90
.LBB70_51:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %r12
	andq	$-4, %rax
	movl	8(%rax), %eax
	movl	%eax, 2640(%rsp)
	movdqa	.LCPI70_1(%rip), %xmm0  # xmm0 = [0,0,0,255]
	movdqu	%xmm0, 2644(%rsp)
	testl	%eax, %eax
	je	.LBB70_59
###SPA### trampoline_fmt_64
.LBB70_52:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	callq	_ZN2js4wasm13ABIResultIter10settleNextEv
	movl	2640(%rsp), %eax
	movl	2644(%rsp), %ecx
	cmpl	%eax, %ecx
	je	.LBB70_59
###SPA### trampoline_fmt_64
# %bb.53:                               #   in Loop: Header=BB70_3 Depth=1
	movl	$255, %ebp
	.p2align	4, 0x90
.LBB70_54:                              #   Parent Loop BB70_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	cmpl	$3, 2660(%rsp)
	je	.LBB70_56
###SPA### trampoline_fmt_64
# %bb.55:                               #   in Loop: Header=BB70_54 Depth=2
	movl	2656(%rsp), %ebp
.LBB70_56:                              #   in Loop: Header=BB70_54 Depth=2
###SPA## trampoline_fmt_64
	addl	$1, %ecx
	movl	%ecx, 2644(%rsp)
	cmpl	%eax, %ecx
	je	.LBB70_58
###SPA### trampoline_fmt_64
# %bb.57:                               #   in Loop: Header=BB70_54 Depth=2
	movq	%r14, %rdi
	callq	_ZN2js4wasm13ABIResultIter10settleNextEv
	movl	2640(%rsp), %eax
	movl	2644(%rsp), %ecx
	cmpl	%eax, %ecx
	jne	.LBB70_54
###SPA### trampoline_fmt_64
.LBB70_58:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%bpl, %ecx
	cmpl	$255, %ecx
	jne	.LBB70_112
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB70_59:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$24, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_62
###SPA### trampoline_fmt_64
# %bb.60:                               #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_303
###SPA### trampoline_fmt_64
# %bb.61:                               #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_62:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	movq	%rbx, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
.LBB70_63:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$6, %edx
	movq	%rbx, %rdi
	movl	96(%rsp), %esi          # 4-byte Reload
	leaq	168(%rsp), %rcx
	callq	_ZN2js4wasm20GenerateExitEpilogueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	movl	1168(%rsp), %eax
	movl	%eax, 172(%rsp)
	xorl	%ebx, %ebx
	cmpb	$0, 1440(%rsp)
	jne	.LBB70_98
###SPA### trampoline_fmt_64
# %bb.64:                               #   in Loop: Header=BB70_3 Depth=1
	movb	808(%rsp), %al
	testb	%al, %al
	movq	88(%rsp), %r14          # 8-byte Reload
	je	.LBB70_67
###SPA### trampoline_fmt_64
# %bb.65:                               #   in Loop: Header=BB70_3 Depth=1
	movb	1088(%rsp), %al
	testb	%al, %al
	je	.LBB70_67
###SPA### trampoline_fmt_64
# %bb.66:                               #   in Loop: Header=BB70_3 Depth=1
	cmpb	$0, 1152(%rsp)
	setne	%bl
.LBB70_67:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	2672(%rsp), %rdi
	leaq	2696(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB70_69
###SPA### trampoline_fmt_64
.LBB70_68:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB70_69:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	testb	%bl, %bl
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.70:                               #   in Loop: Header=BB70_3 Depth=1
	movq	32(%r13), %rax
	cmpq	%rax, 40(%r13)
	jne	.LBB70_73
###SPA### trampoline_fmt_64
# %bb.71:                               #   in Loop: Header=BB70_3 Depth=1
	movl	$1, %esi
	movq	104(%rsp), %rdi         # 8-byte Reload
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.72:                               #   in Loop: Header=BB70_3 Depth=1
	movq	32(%r13), %rax
.LBB70_73:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r13)
	movq	24(%r13), %r15
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rbp
	addq	%rax, %rbp
	movq	168(%rsp), %rcx
	movl	176(%rsp), %r8d
	movl	$3, %esi
	leaq	376(%rsp), %rdi
	movl	%r12d, %edx
	callq	_ZN2js4wasm9CodeRangeC1ENS1_4KindEjNS0_15CallableOffsetsE
	movdqu	376(%rsp), %xmm0
	movups	385(%rsp), %xmm1
	movups	%xmm1, 9(%r15,%rbp)
	movdqu	%xmm0, (%r15,%rbp)
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	8(%r14,%rax), %rax
	testq	%rax, %rax
	leaq	424(%rsp), %rbx
	je	.LBB70_77
###SPA### trampoline_fmt_64
# %bb.74:                               #   in Loop: Header=BB70_3 Depth=1
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	shlq	$2, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB70_75:                              #   Parent Loop BB70_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	cmpb	$108, (%rcx,%rdx)
	je	.LBB70_83
###SPA### trampoline_fmt_64
# %bb.76:                               #   in Loop: Header=BB70_75 Depth=2
	addq	$4, %rdx
	cmpq	%rdx, %rax
	jne	.LBB70_75
###SPA### trampoline_fmt_64
.LBB70_77:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	64(%rsp), %rax          # 8-byte Reload
	addq	%r14, %rax
	addq	$96, %rax
	movq	%rax, 56(%rsp)          # 8-byte Spill
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB70_84
###SPA### trampoline_fmt_64
# %bb.78:                               #   in Loop: Header=BB70_3 Depth=1
	movq	64(%rsp), %rcx          # 8-byte Reload
	movq	88(%r14,%rcx), %rcx
	leaq	(,%rax,4), %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB70_79:                              #   Parent Loop BB70_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movzbl	(%rcx,%rsi), %edi
	cmpl	$122, %edi
	ja	.LBB70_81
###SPA### trampoline_fmt_64
# %bb.80:                               #   in Loop: Header=BB70_79 Depth=2
	cmpl	$111, %edi
	jne	.LBB70_83
###SPA### trampoline_fmt_64
.LBB70_81:                              #   in Loop: Header=BB70_79 Depth=2
###SPA## trampoline_fmt_64
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB70_79
###SPA### trampoline_fmt_64
# %bb.82:                               #   in Loop: Header=BB70_3 Depth=1
	cmpq	$1, %rax
	jbe	.LBB70_84
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB70_83:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	112(%rsp), %r15         # 8-byte Reload
	leal	1(%r12), %r12d
	cmpq	%r12, 8(%r15)
	leaq	376(%rsp), %rbx
	ja	.LBB70_3
###SPA### trampoline_fmt_64
	jmp	.LBB70_238
	.p2align	4, 0x90
.LBB70_84:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, 96(%rsp)          # 8-byte Spill
	movq	64(%rsp), %rax          # 8-byte Reload
	addq	%rax, %r14
	addq	$8, %r14
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, 2672(%rsp)
	movl	$0, 2688(%rsp)
	movl	$0, 1740(%rsp)
	movl	(%r14), %eax
	leal	(,%rax,8), %ecx
	movl	$8, %edx
	subl	%ecx, %edx
	andl	$8, %edx
	movq	%rbx, %rbp
	leal	(%rdx,%rax,8), %ebx
	shll	$8, %ebx
	leal	(%rdx,%rax,8), %esi
	addl	$40, %esi
	movq	%rbp, %rdi
	leaq	2672(%rsp), %rdx
	callq	_ZN2js4wasm23GenerateJitExitPrologueERNS_3jit14MacroAssemblerEjPNS0_15CallableOffsetsE
	addl	$4096, %ebx             # imm = 0x1000
	orl	$72, %ebx
	movslq	%ebx, %rax
	cmpq	%rbx, %rax
	jne	.LBB70_87
###SPA### trampoline_fmt_64
# %bb.85:                               #   in Loop: Header=BB70_3 Depth=1
	movw	$65, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$0, 380(%rsp)
	movq	%rbp, %rdi
	movl	%ebx, %esi
	leaq	376(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
	movl	(%r14), %ebx
	movslq	%ebx, %rax
	cmpq	%rbx, %rax
	je	.LBB70_88
###SPA### trampoline_fmt_64
.LBB70_86:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	424(%rsp), %r15
	movq	%r15, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movl	$11, %edx
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movw	$65, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$16, 380(%rsp)
	movl	$11, %esi
	movq	%r15, %rdi
	leaq	376(%rsp), %rbx
	movq	%rbx, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB70_89
.LBB70_87:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movl	$11, %edx
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movw	$65, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$0, 380(%rsp)
	movl	$11, %esi
	movq	%rbp, %rdi
	leaq	376(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movl	(%r14), %ebx
	movslq	%ebx, %rax
	cmpq	%rbx, %rax
	jne	.LBB70_86
###SPA### trampoline_fmt_64
.LBB70_88:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movw	$65, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$16, 380(%rsp)
	leaq	424(%rsp), %rdi
	movl	%ebx, %esi
	movq	%rdi, %r15
	leaq	376(%rsp), %rbx
	movq	%rbx, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
.LBB70_89:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movabsq	$-1829587348619264, %rax # imm = 0xFFF9800000000000
	movq	%rax, 376(%rsp)
	movb	$4, 2632(%rsp)
	movl	$24, 2636(%rsp)
	movq	%r15, %rdi
	movq	%rbx, %rsi
	leaq	2632(%rsp), %rbp
	movq	%rbp, %rdx
	callq	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	leaq	184(%rsp), %rax
	movq	%rax, (%rsp)
	movl	$32, %edx
	movl	$12, %ecx
	movl	$10, %r8d
	movl	$1, %r9d
	movq	%r15, %rdi
	movq	128(%rsp), %r13         # 8-byte Reload
	movq	%r13, %rsi
	callq	_ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE
	movl	(%r14), %eax
	leal	32(,%rax,8), %r12d
	movw	$65, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	%r12d, 380(%rsp)
	movl	$14, %esi
	movq	%r15, %rdi
	movq	%rbx, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movq	88(%rsp), %rax          # 8-byte Reload
	movq	64(%rsp), %rcx          # 8-byte Reload
	movl	176(%rax,%rcx), %eax
	movl	$128, %ecx
	addl	%ecx, %eax
	movw	$225, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	%eax, 380(%rsp)
	movl	$10, %edx
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$65, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$8, 380(%rsp)
	movl	$10, %esi
	movq	%r15, %rdi
	movq	%rbx, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movw	$161, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$32, 380(%rsp)
	movl	$12, %edx
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE
	movl	$-2, 312(%rsp)
	movl	(%r14), %esi
	movl	$12, %edx
	leaq	1160(%rsp), %rdi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE
	movl	$7, %esi
	movq	%r15, %rdi
	leaq	312(%rsp), %r15
	movq	%r15, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	(%r14), %rax
	movq	%rbp, %r14
	testq	%rax, %rax
	je	.LBB70_93
###SPA### trampoline_fmt_64
# %bb.90:                               #   in Loop: Header=BB70_3 Depth=1
	movq	(%r13), %rcx
	shlq	$2, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB70_91:                              #   Parent Loop BB70_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movzbl	(%rcx,%rdx), %esi
	addl	$-111, %esi
	cmpl	$1, %esi
	jbe	.LBB70_99
###SPA### trampoline_fmt_64
# %bb.92:                               #   in Loop: Header=BB70_91 Depth=2
	addq	$4, %rdx
	cmpq	%rdx, %rax
	jne	.LBB70_91
###SPA### trampoline_fmt_64
.LBB70_93:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	88(%rsp), %rax          # 8-byte Reload
	movq	64(%rsp), %rcx          # 8-byte Reload
	addq	%rcx, %rax
	addq	$176, %rax
	movl	(%rax), %eax
	addl	$120, %eax
	movw	$225, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	%eax, 380(%rsp)
	movl	$10, %edx
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	376(%rsp), %rbx
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$161, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$96, 380(%rsp)
	movl	$10, %edx
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	jmp	.LBB70_100
.LBB70_94:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1168(%rsp), %rax
	addq	$16, %rax
	cmpq	%rax, 1176(%rsp)
	movq	80(%rsp), %r13          # 8-byte Reload
	jae	.LBB70_96
###SPA### trampoline_fmt_64
# %bb.95:                               #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_305
###SPA### trampoline_fmt_64
.LBB70_96:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$7, %bl
	leaq	376(%rsp), %r12
	ja	.LBB70_306
###SPA### trampoline_fmt_64
.LBB70_97:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1168(%rsp), %rax
	jmp	.LBB70_307
.LBB70_98:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	88(%rsp), %r14          # 8-byte Reload
	movq	2672(%rsp), %rdi
	leaq	2696(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB70_68
###SPA### trampoline_fmt_64
	jmp	.LBB70_69
.LBB70_99:                              #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$10, %esi
	movl	$10, %edx
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler14loadJitCodeRawENS0_8RegisterES2_
	leaq	376(%rsp), %rbx
.LBB70_100:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$-2, 304(%rsp)
	movq	%rbp, %rdi
	leaq	304(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	$10, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler24callAndPushReturnAddressENS0_8RegisterE
	movl	1168(%rsp), %eax
	movl	%eax, 2684(%rsp)
	movw	$65, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	%r12d, 380(%rsp)
	movl	$14, %edx
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	movq	80(%rsp), %r13          # 8-byte Reload
	jae	.LBB70_103
###SPA### trampoline_fmt_64
# %bb.101:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_304
###SPA### trampoline_fmt_64
# %bb.102:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_103:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$72, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-117, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-20, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	1740(%rsp), %esi
	movl	$5, %edx
	leaq	1160(%rsp), %rdi
	callq	_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE
	movl	1168(%rsp), %eax
	movl	%eax, 2688(%rsp)
	movl	$8, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler15subFromStackPtrENS0_5Imm32E
	movl	1740(%rsp), %r12d
	addl	$8, %r12d
	movl	%r12d, 1740(%rsp)
	movl	$-2, 296(%rsp)
	movq	56(%rsp), %rax          # 8-byte Reload
	cmpq	$0, (%rax)
	je	.LBB70_139
###SPA### trampoline_fmt_64
# %bb.104:                              #   in Loop: Header=BB70_3 Depth=1
	movq	72(%rsp), %rax          # 8-byte Reload
	movq	(%rax), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB70_106
###SPA### trampoline_fmt_64
# %bb.105:                              #   in Loop: Header=BB70_3 Depth=1
	movl	%eax, %ecx
.LBB70_106:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	addb	$-108, %cl
	cmpb	$19, %cl
	ja	.LBB70_139
###SPA### trampoline_fmt_64
# %bb.107:                              #   in Loop: Header=BB70_3 Depth=1
	movzbl	%cl, %ecx
	leaq	.LJTI70_1(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB70_108:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$111, %al
	je	.LBB70_129
###SPA### trampoline_fmt_64
# %bb.109:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$108, %al
	je	.LBB70_111
###SPA### trampoline_fmt_64
# %bb.110:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$112, %al
	jne	.LBB70_139
###SPA### trampoline_fmt_64
	jmp	.LBB70_111
.LBB70_112:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$108, %al
	cmpl	$123, %ecx
	jb	.LBB70_114
###SPA### trampoline_fmt_64
# %bb.113:                              #   in Loop: Header=BB70_3 Depth=1
	movl	%ebp, %eax
.LBB70_114:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	addb	$-108, %al
	cmpb	$19, %al
	ja	.LBB70_63
###SPA### trampoline_fmt_64
# %bb.115:                              #   in Loop: Header=BB70_3 Depth=1
	movzbl	%al, %eax
	leaq	.LJTI70_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB70_116:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$111, %bpl
	je	.LBB70_291
###SPA### trampoline_fmt_64
# %bb.117:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$112, %bpl
	je	.LBB70_290
###SPA### trampoline_fmt_64
# %bb.118:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$108, %bpl
	jne	.LBB70_63
###SPA### trampoline_fmt_64
	jmp	.LBB70_119
.LBB70_120:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$1, %esi
	movl	$32, %edx
	movl	$5, %r8d
	jmp	.LBB70_127
.LBB70_121:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	296(%rsp), %rax
	movq	%rax, 24(%rsp)
	movl	$2, 40(%rsp)
	movl	$2, 32(%rsp)
	movl	$0, 16(%rsp)
	movl	$32, 8(%rsp)
	movl	$16, (%rsp)
	movl	$1, %esi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	leaq	424(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssembler17convertValueToIntENS0_12ValueOperandEPNS0_11MDefinitionEPNS0_5LabelES6_S6_NS0_8RegisterENS0_13FloatRegisterES7_S6_NS0_21IntConversionBehaviorENS0_22IntConversionInputKindE
	jmp	.LBB70_139
.LBB70_122:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_125
###SPA### trampoline_fmt_64
# %bb.123:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_309
###SPA### trampoline_fmt_64
# %bb.124:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_125:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-52, (%rcx,%rax)
	addq	$1, 1168(%rsp)
	jmp	.LBB70_139
.LBB70_126:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$1, %esi
	xorl	%edx, %edx
	movl	$6, %r8d
.LBB70_127:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	424(%rsp), %rdi
	leaq	296(%rsp), %rcx
	callq	_ZN2js3jit14MacroAssembler27convertValueToFloatingPointENS0_12ValueOperandENS0_13FloatRegisterEPNS0_5LabelENS0_7MIRTypeE
	jmp	.LBB70_139
.LBB70_128:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	424(%rsp), %rdi
	leaq	296(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	jmp	.LBB70_139
.LBB70_129:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 288(%rsp)
	movl	$-2, 376(%rsp)
	movl	$-2, 2632(%rsp)
	movl	$-2, 320(%rsp)
	movl	$11, %edx
	leaq	424(%rsp), %rdi
	leaq	288(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_132
###SPA### trampoline_fmt_64
# %bb.130:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_317
###SPA### trampoline_fmt_64
# %bb.131:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_132:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$65, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-127, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-5, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movl	$131068, 1(%rax,%rcx)   # imm = 0x1FFFC
	addq	$4, 1168(%rsp)
	movl	$4, %esi
	leaq	424(%rsp), %rdi
	movq	%r14, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_135
###SPA### trampoline_fmt_64
# %bb.133:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_318
###SPA### trampoline_fmt_64
# %bb.134:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_135:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$65, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-127, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-5, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movl	$131060, 1(%rax,%rcx)   # imm = 0x1FFF4
	addq	$4, 1168(%rsp)
	movl	$4, %esi
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	376(%rsp), %rbx
	movq	%rbx, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%rbp, %rdi
	leaq	296(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_138
###SPA### trampoline_fmt_64
# %bb.136:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_319
###SPA### trampoline_fmt_64
# %bb.137:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_138:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$72, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$51, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	320(%rsp), %rbx
	movq	%rbx, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%rbp, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	xorl	%edx, %edx
	movl	$12, %ecx
	movq	%rbp, %rdi
	leaq	288(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	.p2align	4, 0x90
.LBB70_139:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$-2, 288(%rsp)
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	288(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	1740(%rsp), %esi
	movq	%rbp, %rdi
	leaq	2672(%rsp), %rdx
	callq	_ZN2js4wasm23GenerateJitExitEpilogueERNS_3jit14MacroAssemblerEjPNS0_15CallableOffsetsE
	movq	%rbp, %rdi
	movq	%r15, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movw	$225, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$16, 380(%rsp)
	movl	$10, %edx
	movq	%rbp, %rdi
	leaq	376(%rsp), %rbx
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movw	$161, 376(%rsp)
	movb	$16, 378(%rsp)
	movl	$16, 380(%rsp)
	movl	$10, %edx
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	%rbp, %rdi
	leaq	304(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movl	296(%rsp), %eax
	cmpl	$-3, %eax
	ja	.LBB70_230
###SPA### trampoline_fmt_64
# %bb.140:                              #   in Loop: Header=BB70_3 Depth=1
	andl	$1, %eax
	jne	.LBB70_230
###SPA### trampoline_fmt_64
# %bb.141:                              #   in Loop: Header=BB70_3 Depth=1
	leaq	424(%rsp), %rdi
	leaq	296(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	%r12d, 1740(%rsp)
	leaq	2656(%rsp), %rax
	movq	%rax, 2632(%rsp)
	movb	$22, 2656(%rsp)
	movdqa	.LCPI70_2(%rip), %xmm0  # xmm0 = [1,8]
	movdqu	%xmm0, 2640(%rsp)
	leaq	376(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%r14, 408(%rsp)
	movl	$0, 416(%rsp)
	cmpq	$0, 2640(%rsp)
	je	.LBB70_150
###SPA### trampoline_fmt_64
# %bb.142:                              #   in Loop: Header=BB70_3 Depth=1
	movq	2632(%rsp), %rax
	movzbl	(%rax), %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	416(%rsp), %eax
	movq	408(%rsp), %rcx
	leaq	8(%rcx), %rdx
	movq	8(%rcx), %rsi
	movl	%eax, %edi
	cmpq	%rdi, %rsi
	je	.LBB70_146
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB70_143:                             #   Parent Loop BB70_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	addl	$1, %eax
	movl	%eax, 416(%rsp)
	cmpq	%rax, (%rdx)
	je	.LBB70_145
###SPA### trampoline_fmt_64
# %bb.144:                              #   in Loop: Header=BB70_143 Depth=2
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	leaq	376(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	416(%rsp), %eax
	movq	408(%rsp), %rcx
.LBB70_145:                             #   in Loop: Header=BB70_143 Depth=2
###SPA## trampoline_fmt_64
	cmpq	%rax, 8(%rcx)
	leaq	8(%rcx), %rdx
	jne	.LBB70_143
###SPA### trampoline_fmt_64
.LBB70_146:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	384(%rsp), %eax
	movl	%eax, %ecx
	negl	%ecx
	andl	$7, %ecx
	addl	%eax, %ecx
	movq	%rcx, %r15
	movq	%rcx, %rax
	shlq	$32, %rax
	orq	$1048641, %rax          # imm = 0x100041
	movq	%rax, 376(%rsp)
	movl	$1, %esi
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	376(%rsp), %rbx
	movq	%rbx, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movl	$4, %esi
	movl	$12, %edx
	movq	%rbp, %rdi
	callq	_ZN2js4wasm9SetExitFPERNS_3jit14MacroAssemblerENS0_10ExitReasonENS1_8RegisterE
	movq	%rbx, %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%r14, 408(%rsp)
	movq	%rbx, %r14
	movl	$0, 416(%rsp)
	cmpq	$0, 2640(%rsp)
	je	.LBB70_148
###SPA### trampoline_fmt_64
# %bb.147:                              #   in Loop: Header=BB70_3 Depth=1
	movq	2632(%rsp), %rax
	movzbl	(%rax), %esi
	movq	%r14, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB70_148:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$0, 392(%rsp)
	je	.LBB70_151
###SPA### trampoline_fmt_64
# %bb.149:                              #   in Loop: Header=BB70_3 Depth=1
	movw	$65, 320(%rsp)
	movb	$16, 322(%rsp)
	movq	%r15, %rax
	movl	%eax, 324(%rsp)
	movl	$12, %edx
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	320(%rsp), %rbx
	movq	%rbx, %rsi
	callq	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
	movl	400(%rsp), %eax
	movw	$65, 320(%rsp)
	movb	$16, 322(%rsp)
	movl	%eax, 324(%rsp)
	movl	$12, %esi
	movq	%rbp, %rdi
	movq	%rbx, %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB70_152
.LBB70_150:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	leaq	2640(%rsp), %rdx
	movq	%r14, %rcx
	xorl	%eax, %eax
	movl	%eax, %edi
	cmpq	%rdi, %rsi
	jne	.LBB70_143
###SPA### trampoline_fmt_64
	jmp	.LBB70_146
.LBB70_151:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	400(%rsp), %edx
	movw	$65, 320(%rsp)
	movb	$16, 322(%rsp)
	movq	%r15, %rax
	movl	%eax, 324(%rsp)
	leaq	424(%rsp), %rdi
	leaq	320(%rsp), %rsi
	callq	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
.LBB70_152:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	416(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 416(%rsp)
	movq	408(%rsp), %rcx
	cmpq	%rax, 8(%rcx)
	je	.LBB70_154
###SPA### trampoline_fmt_64
# %bb.153:                              #   in Loop: Header=BB70_3 Depth=1
	movq	(%rcx), %rcx
	movzbl	(%rcx,%rax), %esi
	movq	%r14, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
.LBB70_154:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	56(%rsp), %rax          # 8-byte Reload
	cmpq	$0, (%rax)
	je	.LBB70_228
###SPA### trampoline_fmt_64
# %bb.155:                              #   in Loop: Header=BB70_3 Depth=1
	movq	72(%rsp), %rax          # 8-byte Reload
	movq	(%rax), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB70_157
###SPA### trampoline_fmt_64
# %bb.156:                              #   in Loop: Header=BB70_3 Depth=1
	movl	%eax, %ecx
.LBB70_157:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	addb	$-108, %cl
	cmpb	$19, %cl
	ja	.LBB70_412
###SPA### trampoline_fmt_64
# %bb.158:                              #   in Loop: Header=BB70_3 Depth=1
	movzbl	%cl, %ecx
	leaq	.LJTI70_2(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB70_159:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$32, %esi
	leaq	424(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_162
###SPA### trampoline_fmt_64
# %bb.160:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_308
###SPA### trampoline_fmt_64
# %bb.161:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_162:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	leaq	424(%rsp), %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	cmpb	$0, 1448(%rsp)
	movq	1168(%rsp), %rax
	je	.LBB70_179
###SPA### trampoline_fmt_64
# %bb.163:                              #   in Loop: Header=BB70_3 Depth=1
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_166
###SPA### trampoline_fmt_64
# %bb.164:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_310
###SPA### trampoline_fmt_64
# %bb.165:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_166:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-59, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-5, 1(%rax,%rcx)
	jmp	.LBB70_186
.LBB70_167:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$111, %al
	je	.LBB70_224
###SPA### trampoline_fmt_64
# %bb.168:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$108, %al
	je	.LBB70_170
###SPA### trampoline_fmt_64
# %bb.169:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$112, %al
	jne	.LBB70_228
###SPA### trampoline_fmt_64
	jmp	.LBB70_170
.LBB70_171:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$31, %esi
	leaq	424(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_174
###SPA### trampoline_fmt_64
# %bb.172:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_311
###SPA### trampoline_fmt_64
# %bb.173:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_174:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movw	$65, 320(%rsp)
	movb	$16, 322(%rsp)
	movl	%r15d, 324(%rsp)
	xorl	%edx, %edx
	movq	%rbp, %rdi
	leaq	320(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	jmp	.LBB70_228
.LBB70_175:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$34, %esi
	leaq	424(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_178
###SPA### trampoline_fmt_64
# %bb.176:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_312
###SPA### trampoline_fmt_64
# %bb.177:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_178:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	leaq	424(%rsp), %rbp
	movq	%rbp, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movw	$65, 320(%rsp)
	movb	$16, 322(%rsp)
	movl	%r15d, 324(%rsp)
	movl	$12, %edx
	movl	$9, %ecx
	movq	%rbp, %rdi
	leaq	320(%rsp), %rsi
	callq	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	movl	$12, %esi
	xorl	%edx, %edx
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler12loadBigInt64ENS0_8RegisterENS0_10Register64E
	jmp	.LBB70_228
.LBB70_179:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	cmpq	1176(%rsp), %rcx
	jbe	.LBB70_182
###SPA### trampoline_fmt_64
# %bb.180:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$1, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_315
###SPA### trampoline_fmt_64
# %bb.181:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_182:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-14, (%rcx,%rax)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_185
###SPA### trampoline_fmt_64
.LBB70_183:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_316
###SPA### trampoline_fmt_64
# %bb.184:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_185:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$15, (%rcx,%rax)
.LBB70_186:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$16, 1(%rax,%rcx)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	testl	%r15d, %r15d
	je	.LBB70_189
###SPA### trampoline_fmt_64
# %bb.187:                              #   in Loop: Header=BB70_3 Depth=1
	movsbl	%r15b, %edx
	movq	%r15, %rbx
	movq	1160(%rsp), %rcx
	cmpl	%ebx, %edx
	jne	.LBB70_190
###SPA### trampoline_fmt_64
# %bb.188:                              #   in Loop: Header=BB70_3 Depth=1
	movb	$68, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	%bl, 1(%rax,%rcx)
	movl	$1, %eax
	jmp	.LBB70_191
.LBB70_189:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$4, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rcx)
	movl	$1, %eax
	jmp	.LBB70_191
.LBB70_190:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$-124, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rcx)
	shrl	$24, %ebx
	movb	%bl, 4(%rax,%rcx)
	movl	$4, %eax
.LBB70_191:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	addq	1168(%rsp), %rax
	movq	%rax, 1168(%rsp)
	movq	72(%rsp), %rcx          # 8-byte Reload
	movq	(%rcx), %rcx
	cmpb	$125, (%rcx)
	jne	.LBB70_228
###SPA### trampoline_fmt_64
# %bb.192:                              #   in Loop: Header=BB70_3 Depth=1
	leaq	1(%rax), %rcx
	cmpq	1176(%rsp), %rcx
	jbe	.LBB70_195
###SPA### trampoline_fmt_64
# %bb.193:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$1, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_313
###SPA### trampoline_fmt_64
# %bb.194:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_195:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-14, (%rcx,%rax)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_198
###SPA### trampoline_fmt_64
.LBB70_196:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_314
###SPA### trampoline_fmt_64
# %bb.197:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_198:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$15, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$90, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	jmp	.LBB70_228
.LBB70_199:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$28, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_202
###SPA### trampoline_fmt_64
# %bb.200:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_320
###SPA### trampoline_fmt_64
# %bb.201:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_202:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	movq	%rbx, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	cmpb	$0, 1448(%rsp)
	movq	1168(%rsp), %rax
	je	.LBB70_268
###SPA### trampoline_fmt_64
# %bb.203:                              #   in Loop: Header=BB70_3 Depth=1
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_206
###SPA### trampoline_fmt_64
# %bb.204:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_326
###SPA### trampoline_fmt_64
# %bb.205:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_206:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-59, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-5, 1(%rax,%rcx)
	jmp	.LBB70_275
.LBB70_207:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$25, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_210
###SPA### trampoline_fmt_64
# %bb.208:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_321
###SPA### trampoline_fmt_64
# %bb.209:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_210:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	movq	%rbx, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movq	56(%rsp), %rax          # 8-byte Reload
	movl	%eax, 2636(%rsp)
	xorl	%edx, %edx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	jmp	.LBB70_63
.LBB70_211:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$27, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	%rbx, %rdi
	leaq	184(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	jmp	.LBB70_63
.LBB70_212:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$28, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_215
###SPA### trampoline_fmt_64
# %bb.213:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_322
###SPA### trampoline_fmt_64
# %bb.214:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_215:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	movq	%rbx, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	cmpb	$0, 1448(%rsp)
	movq	1168(%rsp), %rax
	je	.LBB70_279
###SPA### trampoline_fmt_64
# %bb.216:                              #   in Loop: Header=BB70_3 Depth=1
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_219
###SPA### trampoline_fmt_64
# %bb.217:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_327
###SPA### trampoline_fmt_64
# %bb.218:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_219:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-59, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-5, 1(%rax,%rcx)
	jmp	.LBB70_286
.LBB70_220:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$26, %esi
	jmp	.LBB70_221
.LBB70_224:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$36, %esi
	leaq	424(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_227
###SPA### trampoline_fmt_64
# %bb.225:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_325
###SPA### trampoline_fmt_64
# %bb.226:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_227:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	movq	%rbx, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
.LBB70_228:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$12, %esi
	leaq	424(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN2js4wasm11ClearExitFPERNS_3jit14MacroAssemblerENS1_8RegisterE
	movq	%rbx, %rdi
	leaq	288(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movl	$0, 1740(%rsp)
	movq	2632(%rsp), %rdi
	leaq	2656(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB70_230
###SPA### trampoline_fmt_64
# %bb.229:                              #   in Loop: Header=BB70_3 Depth=1
	callq	free@PLT
.LBB70_230:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	1168(%rsp), %eax
	movl	%eax, 2676(%rsp)
	cmpb	$0, 808(%rsp)
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.231:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$0, 1440(%rsp)
	jne	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.232:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$0, 1088(%rsp)
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.233:                              #   in Loop: Header=BB70_3 Depth=1
	cmpb	$0, 1152(%rsp)
	movq	112(%rsp), %r15         # 8-byte Reload
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.234:                              #   in Loop: Header=BB70_3 Depth=1
	movq	32(%r13), %rax
	cmpq	%rax, 40(%r13)
	jne	.LBB70_237
###SPA### trampoline_fmt_64
# %bb.235:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$1, %esi
	movq	104(%rsp), %rdi         # 8-byte Reload
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.236:                              #   in Loop: Header=BB70_3 Depth=1
	movq	32(%r13), %rax
.LBB70_237:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r13)
	movq	24(%r13), %r14
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rbp
	addq	%rax, %rbp
	movl	2688(%rsp), %eax
	movl	%eax, 16(%rsp)
	movaps	2672(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	376(%rsp), %rdi
	movq	96(%rsp), %r12          # 8-byte Reload
	movl	%r12d, %esi
	callq	_ZN2js4wasm9CodeRangeC1EjNS0_14JitExitOffsetsE
	movdqu	376(%rsp), %xmm0
	movups	385(%rsp), %xmm1
	movups	%xmm1, 9(%r14,%rbp)
	movdqu	%xmm0, (%r14,%rbp)
	leal	1(%r12), %r12d
	cmpq	%r12, 8(%r15)
	leaq	376(%rsp), %rbx
	ja	.LBB70_3
###SPA### trampoline_fmt_64
	jmp	.LBB70_238
.LBB70_268:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	cmpq	1176(%rsp), %rcx
	jbe	.LBB70_271
###SPA### trampoline_fmt_64
# %bb.269:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$1, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_328
###SPA### trampoline_fmt_64
# %bb.270:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_271:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-14, (%rcx,%rax)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_274
###SPA### trampoline_fmt_64
.LBB70_272:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_329
###SPA### trampoline_fmt_64
# %bb.273:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_274:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$15, (%rcx,%rax)
.LBB70_275:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$16, 1(%rax,%rcx)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	movq	56(%rsp), %rcx          # 8-byte Reload
	testl	%ecx, %ecx
	je	.LBB70_278
###SPA### trampoline_fmt_64
# %bb.276:                              #   in Loop: Header=BB70_3 Depth=1
	movsbl	%cl, %edx
	movq	1160(%rsp), %rsi
	cmpl	%ecx, %edx
	jne	.LBB70_294
###SPA### trampoline_fmt_64
# %bb.277:                              #   in Loop: Header=BB70_3 Depth=1
	movb	$68, (%rsi,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rsi)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	%cl, 1(%rax,%rsi)
	addq	$1, 1168(%rsp)
	jmp	.LBB70_63
.LBB70_278:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$4, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	jmp	.LBB70_63
.LBB70_279:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	cmpq	1176(%rsp), %rcx
	jbe	.LBB70_282
###SPA### trampoline_fmt_64
# %bb.280:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$1, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_330
###SPA### trampoline_fmt_64
# %bb.281:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_282:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-14, (%rcx,%rax)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_285
###SPA### trampoline_fmt_64
.LBB70_283:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_331
###SPA### trampoline_fmt_64
# %bb.284:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_285:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$15, (%rcx,%rax)
.LBB70_286:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$16, 1(%rax,%rcx)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	movq	56(%rsp), %rcx          # 8-byte Reload
	testl	%ecx, %ecx
	je	.LBB70_289
###SPA### trampoline_fmt_64
# %bb.287:                              #   in Loop: Header=BB70_3 Depth=1
	movsbl	%cl, %edx
	movq	1160(%rsp), %rsi
	cmpl	%ecx, %edx
	jne	.LBB70_295
###SPA### trampoline_fmt_64
# %bb.288:                              #   in Loop: Header=BB70_3 Depth=1
	movb	$68, (%rsi,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rsi)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	%cl, 1(%rax,%rsi)
	movl	$1, %eax
	jmp	.LBB70_296
.LBB70_289:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$4, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rcx)
	movl	$1, %eax
	jmp	.LBB70_296
.LBB70_290:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$29, %esi
	jmp	.LBB70_221
.LBB70_291:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$30, %esi
.LBB70_221:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_293
###SPA### trampoline_fmt_64
# %bb.222:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_223
###SPA### trampoline_fmt_64
# %bb.292:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_293:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-123, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	$4, %esi
	movq	%rbx, %rdi
	leaq	184(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movw	$65, 2632(%rsp)
	movb	$16, 2634(%rsp)
	movq	56(%rsp), %rax          # 8-byte Reload
	movl	%eax, 2636(%rsp)
	xorl	%edx, %edx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	jmp	.LBB70_63
.LBB70_294:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$-124, (%rsi,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rsi)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	%cl, 1(%rax,%rsi)
	movb	%ch, 2(%rax,%rsi)
	movl	%ecx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rsi)
	shrl	$24, %ecx
	movb	%cl, 4(%rax,%rsi)
	addq	$4, 1168(%rsp)
	jmp	.LBB70_63
.LBB70_295:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$-124, (%rsi,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$36, 1(%rax,%rsi)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rsi
	leaq	1(%rsi), %rdx
	movq	%rdx, 1168(%rsp)
	movb	%cl, 1(%rax,%rsi)
	movb	%ch, 2(%rax,%rsi)
	movl	%ecx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rsi)
	shrl	$24, %ecx
	movb	%cl, 4(%rax,%rsi)
	movl	$4, %eax
.LBB70_296:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1168(%rsp), %rdx
	leaq	(%rdx,%rax), %rcx
	movq	%rcx, 1168(%rsp)
	addq	%rdx, %rax
	addq	$1, %rax
	cmpq	1176(%rsp), %rax
	jbe	.LBB70_299
###SPA### trampoline_fmt_64
# %bb.297:                              #   in Loop: Header=BB70_3 Depth=1
	movl	$1, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_323
###SPA### trampoline_fmt_64
# %bb.298:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rcx
.LBB70_299:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rax
	movb	$-14, (%rax,%rcx)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_302
###SPA### trampoline_fmt_64
.LBB70_300:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	$16, %esi
	leaq	1160(%rsp), %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_324
###SPA### trampoline_fmt_64
# %bb.301:                              #   in Loop: Header=BB70_3 Depth=1
	movq	1168(%rsp), %rax
.LBB70_302:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$15, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$90, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	jmp	.LBB70_63
.LBB70_303:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_62
.LBB70_304:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_103
.LBB70_305:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	cmpb	$7, %bl
	leaq	376(%rsp), %r12
	jbe	.LBB70_97
###SPA### trampoline_fmt_64
.LBB70_306:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	shrb	$3, %al
	movl	%eax, %ecx
	shlb	$2, %cl
	movq	1160(%rsp), %rdx
	movq	1168(%rsp), %rsi
	orb	%al, %cl
	orb	$64, %cl
	movb	%cl, (%rdx,%rsi)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
.LBB70_307:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$51, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movl	%ebx, %edx
	andb	$7, %dl
	shlb	$3, %bl
	orb	%dl, %bl
	orb	$-64, %bl
	movb	%bl, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rbx
	jmp	.LBB70_35
.LBB70_308:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_162
.LBB70_309:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_125
.LBB70_310:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_166
.LBB70_311:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_174
.LBB70_312:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_178
.LBB70_313:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	xorl	%eax, %eax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jb	.LBB70_196
###SPA### trampoline_fmt_64
	jmp	.LBB70_198
.LBB70_314:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_198
.LBB70_223:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_293
.LBB70_315:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	xorl	%eax, %eax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jb	.LBB70_183
###SPA### trampoline_fmt_64
	jmp	.LBB70_185
.LBB70_316:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_185
.LBB70_317:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_132
.LBB70_318:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_135
.LBB70_319:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_138
.LBB70_320:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_202
.LBB70_321:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_210
.LBB70_322:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_215
.LBB70_323:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	xorl	%eax, %eax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jb	.LBB70_300
###SPA### trampoline_fmt_64
	jmp	.LBB70_302
.LBB70_324:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_302
.LBB70_325:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_227
.LBB70_326:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_206
.LBB70_327:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_219
.LBB70_328:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	xorl	%eax, %eax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jb	.LBB70_272
###SPA### trampoline_fmt_64
	jmp	.LBB70_274
.LBB70_329:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_274
.LBB70_330:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	xorl	%eax, %eax
	movq	%rax, 1168(%rsp)
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jb	.LBB70_283
###SPA### trampoline_fmt_64
	jmp	.LBB70_285
.LBB70_331:                             #   in Loop: Header=BB70_3 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_285
.LBB70_238:
###SPA## trampoline_fmt_64
	movb	$0, 2672(%rsp)
	movb	$0, 2680(%rsp)
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rax
	testq	%rax, %rax
	je	.LBB70_244
###SPA### trampoline_fmt_64
# %bb.239:
	leaq	24(%r13), %r12
	xorl	%ebx, %ebx
	leaq	424(%rsp), %r14
	leaq	2672(%rsp), %r15
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB70_240:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx), %rdx
	cmpb	$0, 184(%rdx,%rbx)
	je	.LBB70_243
###SPA### trampoline_fmt_64
# %bb.241:                              #   in Loop: Header=BB70_240 Depth=1
	addq	%rbx, %rdx
	xorl	%r8d, %r8d
	movq	136(%rsp), %rax         # 8-byte Reload
	cmpl	$1, (%rax)
	sete	%r8b
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movq	%r15, %rcx
	movq	%r12, %r9
	callq	_ZN2js4wasm18GenerateEntryStubsERNS_3jit14MacroAssemblerEmRKNS0_10FuncExportERKN7mozilla5MaybeINS1_6ImmPtrEEEbPNS7_6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.242:                              #   in Loop: Header=BB70_240 Depth=1
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rax
.LBB70_243:                             #   in Loop: Header=BB70_240 Depth=1
###SPA## trampoline_fmt_64
	addq	$1, %rbp
	addq	$192, %rbx
	cmpq	%rax, %rbp
	jb	.LBB70_240
###SPA### trampoline_fmt_64
.LBB70_244:
###SPA## trampoline_fmt_64
	leaq	1160(%rsp), %r12
	movq	1168(%rsp), %rbx
	testb	$15, %bl
	jne	.LBB70_334
###SPA### trampoline_fmt_64
	jmp	.LBB70_245
.LBB70_332:                             #   in Loop: Header=BB70_334 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%ebx, %ebx
	jmp	.LBB70_333
	.p2align	4, 0x90
.LBB70_334:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	leaq	16(%rbx), %rax
	cmpq	%rax, 1176(%rsp)
	jae	.LBB70_333
###SPA### trampoline_fmt_64
# %bb.335:                              #   in Loop: Header=BB70_334 Depth=1
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_332
###SPA### trampoline_fmt_64
# %bb.336:                              #   in Loop: Header=BB70_334 Depth=1
	movq	1168(%rsp), %rbx
.LBB70_333:                             #   in Loop: Header=BB70_334 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rax
	movb	$-12, (%rax,%rbx)
	movq	1168(%rsp), %rbx
	addq	$1, %rbx
	movq	%rbx, 1168(%rsp)
	testb	$15, %bl
	jne	.LBB70_334
###SPA### trampoline_fmt_64
.LBB70_245:
###SPA## trampoline_fmt_64
	movabsq	$281474976710655, %r15  # imm = 0xFFFFFFFFFFFF
	movl	$0, 1740(%rsp)
	leaq	424(%rsp), %rbp
	movl	$1337, %esi             # imm = 0x539
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler4PushENS0_7ImmWordE
	movl	1740(%rsp), %r14d
	movw	$-17, 376(%rsp)
	movq	%r15, 384(%rsp)
	leaq	376(%rsp), %rsi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler14PushRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	movl	1740(%rsp), %ebp
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_248
###SPA### trampoline_fmt_64
# %bb.246:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_397
###SPA### trampoline_fmt_64
# %bb.247:
	movq	1168(%rsp), %rax
.LBB70_248:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$76, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-117, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-20, 1(%rax,%rcx)
	movq	1168(%rsp), %rcx
	movq	1176(%rsp), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 1168(%rsp)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB70_251
###SPA### trampoline_fmt_64
# %bb.249:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_398
###SPA### trampoline_fmt_64
# %bb.250:
	movq	1168(%rsp), %rax
.LBB70_251:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$72, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-125, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-28, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-16, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rdi
	movl	$22, %esi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_254
###SPA### trampoline_fmt_64
# %bb.252:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_399
###SPA### trampoline_fmt_64
# %bb.253:
	movq	1168(%rsp), %rax
.LBB70_254:
###SPA## trampoline_fmt_64
	subl	%r14d, %ebp
	movq	1160(%rsp), %rcx
	movb	$72, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-123, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-64, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rdi
	leaq	184(%rsp), %rdx
	movl	$4, %esi
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_257
###SPA### trampoline_fmt_64
# %bb.255:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_400
###SPA### trampoline_fmt_64
# %bb.256:
	movq	1168(%rsp), %rax
.LBB70_257:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$73, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-117, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-27, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movw	$65, 168(%rsp)
	movb	$16, 170(%rsp)
	movl	%ebp, 172(%rsp)
	leaq	424(%rsp), %rbp
	leaq	168(%rsp), %rdx
	xorl	%esi, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movw	$-17, 2632(%rsp)
	movq	%r15, 2640(%rsp)
	leaq	2632(%rsp), %rsi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler13PopRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_260
###SPA### trampoline_fmt_64
# %bb.258:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_401
###SPA### trampoline_fmt_64
# %bb.259:
	movq	1168(%rsp), %rax
.LBB70_260:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-61, (%rcx,%rax)
	movq	1168(%rsp), %rbp
	addq	$1, %rbp
	movq	%rbp, 1168(%rsp)
	cmpb	$0, 808(%rsp)
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.261:
	cmpb	$0, 1440(%rsp)
	je	.LBB70_337
###SPA### trampoline_fmt_64
.LBB70_262:
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
.LBB70_263:
###SPA## trampoline_fmt_64
	leaq	424(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssemblerD2Ev
	movq	328(%rsp), %rdi
	leaq	336(%rsp), %rax
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	callq	_ZN2js9LifoAlloc7releaseENS0_4MarkE
	movq	328(%rsp), %rdi
	cmpq	$0, 48(%rdi)
	jne	.LBB70_266
###SPA### trampoline_fmt_64
# %bb.264:
	cmpq	$52428801, 72(%rdi)     # imm = 0x3200001
	jb	.LBB70_266
###SPA### trampoline_fmt_64
# %bb.265:
	callq	_ZN2js9LifoAlloc7freeAllEv
.LBB70_266:
###SPA## trampoline_fmt_64
	leaq	192(%rsp), %rdi
	callq	_ZN2js9LifoAllocD2Ev
	movq	%fs:40, %rax
	cmpq	2704(%rsp), %rax
	jne	.LBB70_411
###SPA### trampoline_fmt_64
# %bb.267:
	movl	%ebx, %eax
	addq	$2712, %rsp             # imm = 0xA98
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB70_337:
	.cfi_def_cfa_offset 2768
###SPA## trampoline_fmt_64
	cmpb	$0, 1088(%rsp)
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.338:
	cmpb	$0, 1152(%rsp)
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.339:
	leaq	24(%r13), %rax
	movq	%rax, 64(%rsp)          # 8-byte Spill
	movq	32(%r13), %rax
	cmpq	%rax, 40(%r13)
	jne	.LBB70_342
###SPA### trampoline_fmt_64
# %bb.340:
	movl	$1, %esi
	movq	64(%rsp), %rdi          # 8-byte Reload
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.341:
	movq	32(%r13), %rax
.LBB70_342:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r13)
	movq	24(%r13), %r13
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %r14
	addq	%rax, %r14
	shlq	$32, %rbp
	movl	%ebx, %edx
	orq	%rbp, %rdx
	leaq	376(%rsp), %rdi
	movl	$6, %esi
	callq	_ZN2js4wasm9CodeRangeC1ENS1_4KindENS0_7OffsetsE
	movdqu	376(%rsp), %xmm0
	movups	385(%rsp), %xmm1
	movups	%xmm1, 9(%r13,%r14)
	movdqu	%xmm0, (%r13,%r14)
	movq	$0, 168(%rsp)
	movl	$0, 176(%rsp)
	movq	1168(%rsp), %rax
	testb	$15, %al
	jne	.LBB70_389
###SPA### trampoline_fmt_64
	jmp	.LBB70_343
.LBB70_387:                             #   in Loop: Header=BB70_389 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_388
	.p2align	4, 0x90
.LBB70_389:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_388
###SPA### trampoline_fmt_64
# %bb.390:                              #   in Loop: Header=BB70_389 Depth=1
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_387
###SPA### trampoline_fmt_64
# %bb.391:                              #   in Loop: Header=BB70_389 Depth=1
	movq	1168(%rsp), %rax
.LBB70_388:                             #   in Loop: Header=BB70_389 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-12, (%rcx,%rax)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	testb	$15, %al
	jne	.LBB70_389
###SPA### trampoline_fmt_64
.LBB70_343:
###SPA## trampoline_fmt_64
	movl	$0, 1740(%rsp)
	leaq	424(%rsp), %rbp
	leaq	168(%rsp), %rcx
	xorl	%esi, %esi
	movl	$12, %edx
	movq	%rbp, %rdi
	callq	_ZN2js4wasm20GenerateExitPrologueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	movw	$-2065, 376(%rsp)       # imm = 0xF7EF
	movq	%r15, 384(%rsp)
	leaq	376(%rsp), %rsi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler14PushRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	movl	1740(%rsp), %ebx
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	movq	80(%rsp), %r13          # 8-byte Reload
	jae	.LBB70_346
###SPA### trampoline_fmt_64
# %bb.344:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_402
###SPA### trampoline_fmt_64
# %bb.345:
	movq	1168(%rsp), %rax
.LBB70_346:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$76, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-117, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-44, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rdi
	movl	$8, %esi
	callq	_ZN2js3jit14MacroAssembler15subFromStackPtrENS0_5Imm32E
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_349
###SPA### trampoline_fmt_64
# %bb.347:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_403
###SPA### trampoline_fmt_64
# %bb.348:
	movq	1168(%rsp), %rax
.LBB70_349:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$72, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-125, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-28, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-16, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movw	$65, 320(%rsp)
	movb	$16, 322(%rsp)
	movl	$0, 324(%rsp)
	leaq	424(%rsp), %rbp
	leaq	320(%rsp), %rdx
	movl	$10, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movl	$20, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_352
###SPA### trampoline_fmt_64
# %bb.350:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_404
###SPA### trampoline_fmt_64
# %bb.351:
	movq	1168(%rsp), %rax
.LBB70_352:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-88, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-1, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rbp
	leaq	184(%rsp), %rdx
	movl	$4, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movl	$10, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler3PopENS0_8RegisterE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_355
###SPA### trampoline_fmt_64
# %bb.353:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_405
###SPA### trampoline_fmt_64
# %bb.354:
	movq	1168(%rsp), %rax
.LBB70_355:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$73, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-117, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-30, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	movl	%ebx, 1740(%rsp)
	movw	$-2065, 2632(%rsp)      # imm = 0xF7EF
	movq	%r15, 2640(%rsp)
	leaq	424(%rsp), %rbp
	leaq	2632(%rsp), %rsi
	movq	%rbp, %rdi
	callq	_ZN2js3jit14MacroAssembler13PopRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	leaq	168(%rsp), %rcx
	xorl	%esi, %esi
	movl	$12, %edx
	movq	%rbp, %rdi
	callq	_ZN2js4wasm20GenerateExitEpilogueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	movl	1168(%rsp), %eax
	movl	%eax, 172(%rsp)
	cmpb	$0, 1440(%rsp)
	jne	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.356:
	movb	808(%rsp), %al
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.357:
	movb	1088(%rsp), %al
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.358:
	cmpb	$0, 1152(%rsp)
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.359:
	movq	32(%r13), %rax
	cmpq	%rax, 40(%r13)
	jne	.LBB70_362
###SPA### trampoline_fmt_64
# %bb.360:
	movl	$1, %esi
	movq	64(%rsp), %rdi          # 8-byte Reload
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.361:
	movq	32(%r13), %rax
.LBB70_362:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r13)
	movq	24(%r13), %rbx
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rbp
	addq	%rax, %rbp
	movq	168(%rsp), %rdx
	movl	176(%rsp), %ecx
	leaq	376(%rsp), %rdi
	movl	$7, %esi
	callq	_ZN2js4wasm9CodeRangeC1ENS1_4KindENS0_15CallableOffsetsE
	movdqu	376(%rsp), %xmm0
	movups	385(%rsp), %xmm1
	movups	%xmm1, 9(%rbx,%rbp)
	movdqu	%xmm0, (%rbx,%rbp)
	movq	1168(%rsp), %rax
	testb	$15, %al
	jne	.LBB70_394
###SPA### trampoline_fmt_64
	jmp	.LBB70_363
.LBB70_397:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_248
.LBB70_398:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_251
.LBB70_399:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_254
.LBB70_400:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_257
.LBB70_401:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_260
.LBB70_392:                             #   in Loop: Header=BB70_394 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_393
.LBB70_394:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_393
###SPA### trampoline_fmt_64
# %bb.395:                              #   in Loop: Header=BB70_394 Depth=1
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_392
###SPA### trampoline_fmt_64
# %bb.396:                              #   in Loop: Header=BB70_394 Depth=1
	movq	1168(%rsp), %rax
.LBB70_393:                             #   in Loop: Header=BB70_394 Depth=1
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-12, (%rcx,%rax)
	movq	1168(%rsp), %rax
	addq	$1, %rax
	movq	%rax, 1168(%rsp)
	testb	$15, %al
	jne	.LBB70_394
###SPA### trampoline_fmt_64
.LBB70_363:
###SPA## trampoline_fmt_64
	leaq	424(%rsp), %rdi
	leaq	184(%rsp), %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	1168(%rsp), %r15
	leaq	16(%r15), %rax
	cmpq	%rax, 1176(%rsp)
	movq	%r15, %rax
	jae	.LBB70_366
###SPA### trampoline_fmt_64
# %bb.364:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_406
###SPA### trampoline_fmt_64
# %bb.365:
	movq	1168(%rsp), %rax
.LBB70_366:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$72, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-125, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-28, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-16, 1(%rax,%rcx)
	addq	$1, 1168(%rsp)
	leaq	424(%rsp), %rdi
	movl	$21, %esi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	movq	1168(%rsp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 1176(%rsp)
	jae	.LBB70_369
###SPA### trampoline_fmt_64
# %bb.367:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_407
###SPA### trampoline_fmt_64
# %bb.368:
	movq	1168(%rsp), %rax
.LBB70_369:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$72, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-117, 1(%rax,%rcx)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movb	$-32, 1(%rax,%rcx)
	movq	1168(%rsp), %rcx
	movq	1176(%rsp), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 1168(%rsp)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB70_372
###SPA### trampoline_fmt_64
# %bb.370:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_408
###SPA### trampoline_fmt_64
# %bb.371:
	movq	1168(%rsp), %rax
.LBB70_372:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-67, (%rcx,%rax)
	movq	1160(%rsp), %rax
	movq	1168(%rsp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 1168(%rsp)
	movl	$2989, 1(%rax,%rcx)     # imm = 0xBAD
	movq	1168(%rsp), %rcx
	movq	1176(%rsp), %rdx
	leaq	4(%rcx), %rax
	movq	%rax, 1168(%rsp)
	addq	$20, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB70_375
###SPA### trampoline_fmt_64
# %bb.373:
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_409
###SPA### trampoline_fmt_64
# %bb.374:
	movq	1168(%rsp), %rax
.LBB70_375:
###SPA## trampoline_fmt_64
	movq	1160(%rsp), %rcx
	movb	$-61, (%rcx,%rax)
	movq	1168(%rsp), %rbp
	addq	$1, %rbp
	movq	%rbp, 1168(%rsp)
	xorl	%ebx, %ebx
	cmpb	$0, 1440(%rsp)
	jne	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.376:
	movb	808(%rsp), %al
	testb	%al, %al
	je	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.377:
	movb	1088(%rsp), %al
	testb	%al, %al
	je	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.378:
	movb	1152(%rsp), %al
	testb	%al, %al
	je	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.379:
	movq	32(%r13), %rax
	cmpq	%rax, 40(%r13)
	jne	.LBB70_382
###SPA### trampoline_fmt_64
# %bb.380:
	movl	$1, %esi
	movq	64(%rsp), %rdi          # 8-byte Reload
	callq	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB70_262
###SPA### trampoline_fmt_64
# %bb.381:
	movq	32(%r13), %rax
.LBB70_382:
###SPA## trampoline_fmt_64
	leaq	1(%rax), %rcx
	movq	%rcx, 32(%r13)
	movq	24(%r13), %r14
	leaq	(%rax,%rax,8), %rcx
	leaq	(%rcx,%rcx,2), %rbx
	addq	%rax, %rbx
	shlq	$32, %rbp
	movl	%r15d, %edx
	orq	%rbp, %rdx
	leaq	376(%rsp), %rdi
	movl	$9, %esi
	callq	_ZN2js4wasm9CodeRangeC1ENS1_4KindENS0_7OffsetsE
	movdqu	376(%rsp), %xmm0
	movups	385(%rsp), %xmm1
	movups	%xmm1, 9(%r14,%rbx)
	movdqu	%xmm0, (%r14,%rbx)
	leaq	424(%rsp), %rdi
	callq	_ZN2js3jit14MacroAssembler6finishEv
	xorl	%ebx, %ebx
	cmpb	$0, 1440(%rsp)
	jne	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.383:
	movb	808(%rsp), %al
	testb	%al, %al
	je	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.384:
	movb	1088(%rsp), %al
	testb	%al, %al
	je	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.385:
	movb	1152(%rsp), %al
	testb	%al, %al
	je	.LBB70_263
###SPA### trampoline_fmt_64
# %bb.386:
	leaq	424(%rsp), %rsi
	movq	%r13, %rdi
	callq	_ZN2js4wasm12CompiledCode4swapERNS_3jit14MacroAssemblerE
	movl	%eax, %ebx
	jmp	.LBB70_263
.LBB70_402:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_346
.LBB70_403:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_349
.LBB70_404:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_352
.LBB70_405:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_355
.LBB70_406:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_366
.LBB70_407:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_369
.LBB70_408:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_372
.LBB70_409:
###SPA## trampoline_fmt_64
	movb	$1, 1440(%rsp)
	movq	$0, 1168(%rsp)
	xorl	%eax, %eax
	jmp	.LBB70_375
.LBB70_410:
###SPA## trampoline_fmt_64
	leaq	.L.str.106(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1467, 0                # imm = 0x5BB
	callq	abort@PLT
.LBB70_411:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB70_412:
###SPA## trampoline_fmt_64
	leaq	.L.str.241(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$2472, 0                # imm = 0x9A8
	callq	abort@PLT
.LBB70_111:
###SPA## trampoline_fmt_64
	leaq	.L.str.240(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$2363, 0                # imm = 0x93B
	callq	abort@PLT
.LBB70_119:
###SPA## trampoline_fmt_64
	leaq	.L.str.234(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$2129, 0                # imm = 0x851
	callq	abort@PLT
.LBB70_170:
###SPA## trampoline_fmt_64
	leaq	.L.str.241(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$2468, 0                # imm = 0x9A4
	callq	abort@PLT
.Lfunc_end70:
	.size	_ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE, .Lfunc_end70-_ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE
	.cfi_endproc
	.section	.rodata._ZN2js4wasm13GenerateStubsERKNS0_17ModuleEnvironmentERKN7mozilla6VectorINS0_10FuncImportELm0ENS_17SystemAllocPolicyEEERKNS5_INS0_10FuncExportELm0ES7_EEPNS0_12CompiledCodeE,"a",@progbits
	.p2align	2
.LJTI70_0:
	.long	.LBB70_116-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_63-.LJTI70_0
	.long	.LBB70_211-.LJTI70_0
	.long	.LBB70_199-.LJTI70_0
	.long	.LBB70_212-.LJTI70_0
	.long	.LBB70_220-.LJTI70_0
	.long	.LBB70_207-.LJTI70_0
.LJTI70_1:
	.long	.LBB70_108-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_139-.LJTI70_1
	.long	.LBB70_122-.LJTI70_1
	.long	.LBB70_120-.LJTI70_1
	.long	.LBB70_126-.LJTI70_1
	.long	.LBB70_128-.LJTI70_1
	.long	.LBB70_121-.LJTI70_1
.LJTI70_2:
	.long	.LBB70_167-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_412-.LJTI70_2
	.long	.LBB70_159-.LJTI70_2
	.long	.LBB70_159-.LJTI70_2
	.long	.LBB70_175-.LJTI70_2
	.long	.LBB70_171-.LJTI70_2
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_,"axG",@progbits,_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_,comdat
	.hidden	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_ # -- Begin function _ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.weak	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_,@function
_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_: # @_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	%esi, %r10d
	movzwl	(%rdx), %eax
	movl	%eax, %ecx
	andb	$15, %cl
	cmpb	$3, %cl
	je	.LBB71_3
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %cl
	jne	.LBB71_4
###SPA### trampoline_fmt_64
# %bb.2:
	shrl	$4, %eax
	movl	4(%rdx), %r8d
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %r10d
	andl	$31, %eax
	leaq	.L.str.62(%rip), %rsi
	movl	$3, %edx
	movl	$17, %ecx
	movl	%eax, %r9d
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB71_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, %r9d
	shrl	$4, %r9d
	movzbl	2(%rdx), %r11d
	shrl	$9, %eax
	andl	$7, %eax
	movl	4(%rdx), %r8d
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %r10d
	andl	$31, %r9d
	leaq	.L.str.62(%rip), %rsi
	movl	$3, %edx
	movl	$17, %ecx
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB71_4:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1048, 0                # imm = 0x418
	callq	abort@PLT
.Lfunc_end71:
	.size	_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_, .Lfunc_end71-_ZN2js3jit14MacroAssembler11storeDoubleINS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_,"axG",@progbits,_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_,comdat
	.hidden	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_ # -- Begin function _ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.weak	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_,@function
_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_: # @_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	%esi, %r10d
	movzwl	(%rdx), %eax
	movl	%eax, %ecx
	andb	$15, %cl
	cmpb	$3, %cl
	je	.LBB72_3
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %cl
	jne	.LBB72_4
###SPA### trampoline_fmt_64
# %bb.2:
	shrl	$4, %eax
	movl	4(%rdx), %r8d
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %r10d
	andl	$31, %eax
	leaq	.L.str.103(%rip), %rsi
	movl	$2, %edx
	movl	$17, %ecx
	movl	%eax, %r9d
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB72_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%eax, %r9d
	shrl	$4, %r9d
	movzbl	2(%rdx), %r11d
	shrl	$9, %eax
	andl	$7, %eax
	movl	4(%rdx), %r8d
	addq	$736, %rdi              # imm = 0x2E0
	andl	$31, %r10d
	andl	$31, %r9d
	leaq	.L.str.103(%rip), %rsi
	movl	$2, %edx
	movl	$17, %ecx
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB72_4:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1073, 0                # imm = 0x431
	callq	abort@PLT
.Lfunc_end72:
	.size	_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_, .Lfunc_end72-_ZN2js3jit14MacroAssembler12storeFloat32INS0_7OperandEEEvNS0_13FloatRegisterERKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js16VirtualTraceableD2Ev,"axG",@progbits,_ZN2js16VirtualTraceableD2Ev,comdat
	.hidden	_ZN2js16VirtualTraceableD2Ev # -- Begin function _ZN2js16VirtualTraceableD2Ev
	.weak	_ZN2js16VirtualTraceableD2Ev
	.p2align	4, 0x90
	.type	_ZN2js16VirtualTraceableD2Ev,@function
_ZN2js16VirtualTraceableD2Ev:           # @_ZN2js16VirtualTraceableD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end73:
	.size	_ZN2js16VirtualTraceableD2Ev, .Lfunc_end73-_ZN2js16VirtualTraceableD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableINS_4wasm3ValEED0Ev,"axG",@progbits,_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev,comdat
	.hidden	_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev # -- Begin function _ZN2js15RootedTraceableINS_4wasm3ValEED0Ev
	.weak	_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev,@function
_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev: # @_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	jmp	_ZdlPv@PLT              # TAILCALL
.Lfunc_end74:
	.size	_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev, .Lfunc_end74-_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc,"axG",@progbits,_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc,comdat
	.hidden	_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc # -- Begin function _ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc
	.weak	_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc,@function
_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc: # @_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	addq	$8, %rdi
	jmp	_ZN2js4wasm3Val5traceEP8JSTracer # TAILCALL
.Lfunc_end75:
	.size	_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc, .Lfunc_end75-_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB76_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	je	.LBB76_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	.LBB76_17
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB76_44
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r15
	je	.LBB76_21
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB76_22
.LBB76_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB76_25
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB76_25
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB76_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB76_12
.LBB76_10:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB76_13
.LBB76_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB76_12:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	shrq	$3, %r15
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	jne	.LBB76_23
###SPA### trampoline_fmt_64
.LBB76_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB76_43
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	jle	.LBB76_24
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r14), %rcx
	leaq	(%rcx,%rdx,8), %r10
	leaq	8(%rcx), %rsi
	cmpq	%rsi, %r10
	movq	%rsi, %r9
	cmovaq	%r10, %r9
	movq	%rcx, %rdi
	notq	%rdi
	addq	%rdi, %r9
	shrq	$3, %r9
	addq	$1, %r9
	cmpq	$4, %r9
	jb	.LBB76_16
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	%rsi, %r10
	cmovaq	%r10, %rsi
	leaq	(%rsi,%rdi), %rdx
	andq	$-8, %rdx
	addq	%rcx, %rdx
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jae	.LBB76_26
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	(%rsi,%rdi), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	cmpq	%rcx, %rdx
	jbe	.LBB76_26
###SPA### trampoline_fmt_64
.LBB76_16:
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
.LBB76_35:
###SPA## trampoline_fmt_64
	leaq	8(%rcx), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rcx, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %r9d
	shrl	$3, %r9d
	addl	$1, %r9d
	andq	$7, %r9
	je	.LBB76_39
###SPA### trampoline_fmt_64
# %bb.36:
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB76_37:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rbx,8), %rdi
	movq	%rdi, (%rsi,%rbx,8)
	addq	$-8, %rdx
	addq	$1, %rbx
	cmpq	%rbx, %r9
	jne	.LBB76_37
###SPA### trampoline_fmt_64
# %bb.38:
	subq	%rdx, %rcx
	subq	%rdx, %rsi
.LBB76_39:
###SPA## trampoline_fmt_64
	cmpq	$56, %r8
	jb	.LBB76_24
###SPA### trampoline_fmt_64
# %bb.40:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB76_41:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rdi), %rdx
	movq	%rdx, (%rsi,%rdi)
	movq	8(%rcx,%rdi), %rdx
	movq	%rdx, 8(%rsi,%rdi)
	movq	16(%rcx,%rdi), %rdx
	movq	%rdx, 16(%rsi,%rdi)
	movq	24(%rcx,%rdi), %rdx
	movq	%rdx, 24(%rsi,%rdi)
	movq	32(%rcx,%rdi), %rdx
	movq	%rdx, 32(%rsi,%rdi)
	movq	40(%rcx,%rdi), %rdx
	movq	%rdx, 40(%rsi,%rdi)
	movq	48(%rcx,%rdi), %rdx
	movq	%rdx, 48(%rsi,%rdi)
	movq	56(%rcx,%rdi), %rdx
	movq	%rdx, 56(%rsi,%rdi)
	leaq	(%rcx,%rdi), %rdx
	addq	$64, %rdx
	addq	$64, %rdi
	cmpq	%r10, %rdx
	jb	.LBB76_41
###SPA### trampoline_fmt_64
	jmp	.LBB76_24
.LBB76_17:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB76_23
.LBB76_21:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB76_22:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r15
	movq	%r15, %rax
	shrq	$61, %rax
	jne	.LBB76_45
###SPA### trampoline_fmt_64
.LBB76_23:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	je	.LBB76_42
###SPA### trampoline_fmt_64
.LBB76_24:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB76_25:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB76_26:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-4, %r8
	leaq	-4(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$2, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$12, %rsi
	jae	.LBB76_28
###SPA### trampoline_fmt_64
# %bb.27:
	xorl	%ebx, %ebx
	testq	%rdi, %rdi
	jne	.LBB76_31
###SPA### trampoline_fmt_64
	jmp	.LBB76_33
.LBB76_28:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	addq	%rdi, %rsi
	addq	$-1, %rsi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB76_29:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rbx,8), %xmm0
	movups	16(%rcx,%rbx,8), %xmm1
	movups	%xmm0, (%rax,%rbx,8)
	movups	%xmm1, 16(%rax,%rbx,8)
	movups	32(%rcx,%rbx,8), %xmm0
	movups	48(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 32(%rax,%rbx,8)
	movups	%xmm1, 48(%rax,%rbx,8)
	movups	64(%rcx,%rbx,8), %xmm0
	movups	80(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 64(%rax,%rbx,8)
	movups	%xmm1, 80(%rax,%rbx,8)
	movups	96(%rcx,%rbx,8), %xmm0
	movups	112(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 96(%rax,%rbx,8)
	movups	%xmm1, 112(%rax,%rbx,8)
	addq	$16, %rbx
	addq	$4, %rsi
	jne	.LBB76_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rdi, %rdi
	je	.LBB76_33
###SPA### trampoline_fmt_64
.LBB76_31:
###SPA## trampoline_fmt_64
	leaq	16(,%rbx,8), %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB76_32:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB76_32
###SPA### trampoline_fmt_64
.LBB76_33:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB76_24
###SPA### trampoline_fmt_64
# %bb.34:
	leaq	(%rcx,%r8,8), %rcx
	leaq	(%rax,%r8,8), %rsi
	jmp	.LBB76_35
.LBB76_42:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB76_43:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB76_44:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB76_45:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end76:
	.size	_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end76-_ZN7mozilla6VectorIPN2js16WasmGlobalObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	cmpq	$1, %rsi
	jne	.LBB77_16
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$12, (%rbx)
	je	.LBB77_2
###SPA### trampoline_fmt_64
# %bb.5:
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.LBB77_6
###SPA### trampoline_fmt_64
# %bb.9:
	movq	%rax, %rcx
	shrq	$58, %rcx
	jne	.LBB77_10
###SPA### trampoline_fmt_64
# %bb.11:
	leaq	(%rax,%rax), %r14
	leaq	(,%rax,8), %rax
	leaq	(%rax,%rax,2), %rax
	testq	%rax, %rax
	je	.LBB77_12
###SPA### trampoline_fmt_64
# %bb.13:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB77_14
.LBB77_16:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%rbx), %rsi
	jb	.LBB77_36
###SPA### trampoline_fmt_64
# %bb.17:
	movq	%rsi, %rcx
	shrq	$59, %rcx
	jne	.LBB77_36
###SPA### trampoline_fmt_64
# %bb.18:
	shlq	$2, %rsi
	leaq	(%rsi,%rsi,2), %rax
	testq	%rax, %rax
	je	.LBB77_19
###SPA### trampoline_fmt_64
# %bb.20:
	addq	$-1, %rax
	bsrq	%rax, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB77_21
.LBB77_2:
###SPA## trampoline_fmt_64
	movl	$1, %r14d
	jmp	.LBB77_3
.LBB77_19:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB77_21:
###SPA## trampoline_fmt_64
	movl	$1, %eax
	shlq	%cl, %rax
	movabsq	$-6148914691236517205, %rdx # imm = 0xAAAAAAAAAAAAAAAB
	mulq	%rdx
	movq	%rdx, %r14
	shrq	$3, %r14
	cmpq	$12, (%rbx)
	je	.LBB77_22
###SPA### trampoline_fmt_64
# %bb.28:
	cmpq	$63, %rcx
	jbe	.LBB77_7
###SPA### trampoline_fmt_64
# %bb.29:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB77_22:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	cmpq	$63, %rcx
	ja	.LBB77_23
###SPA### trampoline_fmt_64
.LBB77_3:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r14,4), %rax
	leaq	(%rax,%rax,2), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB77_4
###SPA### trampoline_fmt_64
# %bb.24:
	movq	8(%rbx), %rdx
	testq	%rdx, %rdx
	jle	.LBB77_27
###SPA### trampoline_fmt_64
# %bb.25:
	movq	(%rbx), %rcx
	leaq	(%rdx,%rdx,2), %rdx
	leaq	(%rcx,%rdx,4), %rdx
	movq	%rax, %rsi
	.p2align	4, 0x90
.LBB77_26:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	8(%rcx), %edi
	movl	%edi, 8(%rsi)
	movq	(%rcx), %rdi
	movq	%rdi, (%rsi)
	addq	$12, %rcx
	addq	$12, %rsi
	cmpq	%rdx, %rcx
	jb	.LBB77_26
###SPA### trampoline_fmt_64
.LBB77_27:
###SPA## trampoline_fmt_64
	movq	%rax, (%rbx)
	jmp	.LBB77_35
.LBB77_6:
###SPA## trampoline_fmt_64
	movl	$1, %r14d
	jmp	.LBB77_7
.LBB77_12:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB77_14:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$11, %rdx
	seta	%al
	orq	%rax, %r14
	movq	%r14, %rax
	shrq	$60, %rax
	jne	.LBB77_15
###SPA### trampoline_fmt_64
.LBB77_7:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r14,4), %rax
	leaq	(%rax,%rax,2), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB77_8
###SPA### trampoline_fmt_64
# %bb.30:
	movq	%rax, %r15
	movq	(%rbx), %rax
	cmpq	$0, 8(%rbx)
	jle	.LBB77_31
###SPA### trampoline_fmt_64
# %bb.32:
	movq	%r15, %rcx
	.p2align	4, 0x90
.LBB77_33:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	8(%rax), %edx
	movl	%edx, 8(%rcx)
	movq	(%rax), %rdx
	movq	%rdx, (%rcx)
	addq	$12, %rcx
	addq	$12, %rax
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	leaq	(%rdx,%rdx,2), %rdx
	leaq	(%rdi,%rdx,4), %rdx
	cmpq	%rdx, %rax
	jb	.LBB77_33
###SPA### trampoline_fmt_64
	jmp	.LBB77_34
.LBB77_31:
###SPA## trampoline_fmt_64
	movq	%rax, %rdi
.LBB77_34:
###SPA## trampoline_fmt_64
	callq	free@PLT
	movq	%r15, (%rbx)
.LBB77_35:
###SPA## trampoline_fmt_64
	movq	%r14, 16(%rbx)
	movb	$1, %al
.LBB77_36:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB77_8:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB77_4:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB77_10:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB77_23:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB77_15:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end77:
	.size	_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end77-_ZN7mozilla6VectorIN2js4wasm11StructFieldELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB78_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	je	.LBB78_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	.LBB78_17
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB78_44
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r15
	je	.LBB78_21
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB78_22
.LBB78_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB78_25
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB78_25
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB78_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB78_12
.LBB78_10:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB78_13
.LBB78_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB78_12:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	shrq	$3, %r15
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	jne	.LBB78_23
###SPA### trampoline_fmt_64
.LBB78_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB78_43
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	jle	.LBB78_24
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r14), %rcx
	leaq	(%rcx,%rdx,8), %r10
	leaq	8(%rcx), %rsi
	cmpq	%rsi, %r10
	movq	%rsi, %r9
	cmovaq	%r10, %r9
	movq	%rcx, %rdi
	notq	%rdi
	addq	%rdi, %r9
	shrq	$3, %r9
	addq	$1, %r9
	cmpq	$4, %r9
	jb	.LBB78_16
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	%rsi, %r10
	cmovaq	%r10, %rsi
	leaq	(%rsi,%rdi), %rdx
	andq	$-8, %rdx
	addq	%rcx, %rdx
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jae	.LBB78_26
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	(%rsi,%rdi), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	cmpq	%rcx, %rdx
	jbe	.LBB78_26
###SPA### trampoline_fmt_64
.LBB78_16:
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
.LBB78_35:
###SPA## trampoline_fmt_64
	leaq	8(%rcx), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rcx, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %r9d
	shrl	$3, %r9d
	addl	$1, %r9d
	andq	$7, %r9
	je	.LBB78_39
###SPA### trampoline_fmt_64
# %bb.36:
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB78_37:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rbx,8), %rdi
	movq	%rdi, (%rsi,%rbx,8)
	addq	$-8, %rdx
	addq	$1, %rbx
	cmpq	%rbx, %r9
	jne	.LBB78_37
###SPA### trampoline_fmt_64
# %bb.38:
	subq	%rdx, %rcx
	subq	%rdx, %rsi
.LBB78_39:
###SPA## trampoline_fmt_64
	cmpq	$56, %r8
	jb	.LBB78_24
###SPA### trampoline_fmt_64
# %bb.40:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB78_41:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rdi), %rdx
	movq	%rdx, (%rsi,%rdi)
	movq	8(%rcx,%rdi), %rdx
	movq	%rdx, 8(%rsi,%rdi)
	movq	16(%rcx,%rdi), %rdx
	movq	%rdx, 16(%rsi,%rdi)
	movq	24(%rcx,%rdi), %rdx
	movq	%rdx, 24(%rsi,%rdi)
	movq	32(%rcx,%rdi), %rdx
	movq	%rdx, 32(%rsi,%rdi)
	movq	40(%rcx,%rdi), %rdx
	movq	%rdx, 40(%rsi,%rdi)
	movq	48(%rcx,%rdi), %rdx
	movq	%rdx, 48(%rsi,%rdi)
	movq	56(%rcx,%rdi), %rdx
	movq	%rdx, 56(%rsi,%rdi)
	leaq	(%rcx,%rdi), %rdx
	addq	$64, %rdx
	addq	$64, %rdi
	cmpq	%r10, %rdx
	jb	.LBB78_41
###SPA### trampoline_fmt_64
	jmp	.LBB78_24
.LBB78_17:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB78_23
.LBB78_21:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB78_22:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r15
	movq	%r15, %rax
	shrq	$61, %rax
	jne	.LBB78_45
###SPA### trampoline_fmt_64
.LBB78_23:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	je	.LBB78_42
###SPA### trampoline_fmt_64
.LBB78_24:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB78_25:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB78_26:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-4, %r8
	leaq	-4(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$2, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$12, %rsi
	jae	.LBB78_28
###SPA### trampoline_fmt_64
# %bb.27:
	xorl	%ebx, %ebx
	testq	%rdi, %rdi
	jne	.LBB78_31
###SPA### trampoline_fmt_64
	jmp	.LBB78_33
.LBB78_28:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	addq	%rdi, %rsi
	addq	$-1, %rsi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB78_29:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rbx,8), %xmm0
	movups	16(%rcx,%rbx,8), %xmm1
	movups	%xmm0, (%rax,%rbx,8)
	movups	%xmm1, 16(%rax,%rbx,8)
	movups	32(%rcx,%rbx,8), %xmm0
	movups	48(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 32(%rax,%rbx,8)
	movups	%xmm1, 48(%rax,%rbx,8)
	movups	64(%rcx,%rbx,8), %xmm0
	movups	80(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 64(%rax,%rbx,8)
	movups	%xmm1, 80(%rax,%rbx,8)
	movups	96(%rcx,%rbx,8), %xmm0
	movups	112(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 96(%rax,%rbx,8)
	movups	%xmm1, 112(%rax,%rbx,8)
	addq	$16, %rbx
	addq	$4, %rsi
	jne	.LBB78_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rdi, %rdi
	je	.LBB78_33
###SPA### trampoline_fmt_64
.LBB78_31:
###SPA## trampoline_fmt_64
	leaq	16(,%rbx,8), %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB78_32:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB78_32
###SPA### trampoline_fmt_64
.LBB78_33:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB78_24
###SPA### trampoline_fmt_64
# %bb.34:
	leaq	(%rcx,%r8,8), %rcx
	leaq	(%rax,%r8,8), %rsi
	jmp	.LBB78_35
.LBB78_42:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB78_43:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB78_44:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB78_45:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end78:
	.size	_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end78-_ZN7mozilla6VectorIPKN2js4wasm11CodeSegmentELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_ # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_,@function
_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_: # @_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %r12d
	movl	%r8d, %r14d
	movl	%ecx, %r15d
	movq	%rdi, %rbx
	movl	72(%rsp), %ebp
	movl	64(%rsp), %r9d
	cmpl	%ebp, %r9d
	je	.LBB79_2
###SPA### trampoline_fmt_64
# %bb.1:
	movb	288(%rbx), %al
	testb	%al, %al
	je	.LBB79_2
###SPA### trampoline_fmt_64
# %bb.9:
	movl	%ebp, (%rsp)
	movzbl	%r12b, %r8d
	movq	%rbx, %rdi
	movl	%edx, %esi
	movl	%r15d, %edx
	movl	%r14d, %ecx
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB79_2:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movl	%edx, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	movq	8(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB79_5
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB79_4
###SPA### trampoline_fmt_64
.LBB79_5:
###SPA## trampoline_fmt_64
	movzbl	%r12b, %edx
	movl	%edx, %eax
	orl	%ebp, %eax
	testb	$-8, %al
	je	.LBB79_6
###SPA### trampoline_fmt_64
# %bb.7:
	movl	%ebp, %eax
	shrl	%eax
	andl	$188, %eax
	movl	%edx, %ecx
	shrl	$3, %ecx
	orl	%eax, %ecx
	movq	(%rbx), %rax
	movq	8(%rbx), %rsi
	orb	$64, %cl
	movb	%cl, (%rax,%rsi)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	jmp	.LBB79_8
.LBB79_6:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
.LBB79_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rbx)
	movb	%r15b, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	movq	%rbx, %rdi
	movl	%r14d, %esi
	movl	%ebp, %ecx
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB79_4:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	jmp	.LBB79_5
.Lfunc_end79:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_, .Lfunc_end79-_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE,@function
_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE: # @_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	cmpl	$3, %esi
	je	.LBB80_12
###SPA### trampoline_fmt_64
# %bb.1:
	cmpl	$2, %esi
	je	.LBB80_8
###SPA### trampoline_fmt_64
# %bb.2:
	cmpl	$1, %esi
	jne	.LBB80_18
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%rbx), %rax
	leaq	1(%rax), %rcx
	cmpq	16(%rbx), %rcx
	jbe	.LBB80_6
###SPA### trampoline_fmt_64
# %bb.4:
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB80_16
###SPA### trampoline_fmt_64
# %bb.5:
	movq	8(%rbx), %rax
.LBB80_6:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$102, (%rcx,%rax)
	jmp	.LBB80_7
.LBB80_12:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	1(%rax), %rcx
	cmpq	16(%rbx), %rcx
	jbe	.LBB80_15
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB80_16
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%rbx), %rax
.LBB80_15:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-14, (%rcx,%rax)
	jmp	.LBB80_7
.LBB80_8:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	1(%rax), %rcx
	cmpq	16(%rbx), %rcx
	jbe	.LBB80_11
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB80_16
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rbx), %rax
.LBB80_11:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-13, (%rcx,%rax)
.LBB80_7:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	addq	$1, %rax
.LBB80_17:
###SPA## trampoline_fmt_64
	movq	%rax, 8(%rbx)
.LBB80_18:
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB80_16:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	xorl	%eax, %eax
	jmp	.LBB80_17
.Lfunc_end80:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE, .Lfunc_end80-_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi,@function
_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi: # @_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %r14d
	movl	%ecx, %r15d
	movq	%rdi, %rbp
	movl	80(%rsp), %r13d
	movl	%r8d, %r12d
	shrb	$3, %r12b
	movq	8(%rdi), %rbx
	leaq	16(%rbx), %rax
	cmpq	%rax, 16(%rdi)
	jae	.LBB81_5
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%esi, 12(%rsp)          # 4-byte Spill
	movl	%r8d, 16(%rsp)          # 4-byte Spill
	movl	%edx, 20(%rsp)          # 4-byte Spill
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB81_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbp), %rbx
.LBB81_4:
###SPA## trampoline_fmt_64
	movl	20(%rsp), %edx          # 4-byte Reload
	movl	16(%rsp), %r8d          # 4-byte Reload
	movl	12(%rsp), %esi          # 4-byte Reload
.LBB81_5:
###SPA## trampoline_fmt_64
	movl	%r13d, %eax
	sarl	$3, %eax
	xorl	%r11d, %r11d
	cmpl	$16, %r14d
	cmovnel	%r14d, %r11d
	movq	(%rbp), %r9
	testb	%r12b, %r12b
	je	.LBB81_6
###SPA### trampoline_fmt_64
# %bb.7:
	movzbl	%r12b, %edi
	movb	$-60, (%r9,%rbx)
	movq	(%rbp), %r10
	movq	8(%rbp), %r9
	leaq	1(%r9), %rbx
	movq	%rbx, 8(%rbp)
	shll	$7, %eax
	shll	$5, %edi
	orl	%eax, %edi
	xorb	$-31, %dil
	movb	%dil, 1(%r10,%r9)
	movq	8(%rbp), %rdi
	addq	$1, %rdi
	movq	%rdi, 8(%rbp)
	shll	$3, %r11d
	orl	%esi, %r11d
	movb	$120, %bl
	movl	%r11d, %eax
	jmp	.LBB81_8
.LBB81_6:
###SPA## trampoline_fmt_64
	movb	$-59, (%r9,%rbx)
	movq	8(%rbp), %rdi
	addq	$1, %rdi
	movq	%rdi, 8(%rbp)
	shll	$7, %eax
	shll	$3, %r11d
	orl	%esi, %eax
	orl	%r11d, %eax
	movb	$-8, %bl
.LBB81_8:
###SPA## trampoline_fmt_64
	movq	(%rbp), %rsi
	xorb	%bl, %al
	movb	%al, (%rsi,%rdi)
	movq	(%rbp), %rax
	movq	8(%rbp), %rsi
	leaq	1(%rsi), %rdi
	movq	%rdi, 8(%rbp)
	movb	%dl, 1(%rax,%rsi)
	addq	$1, 8(%rbp)
	movzbl	%r8b, %edx
	movq	%rbp, %rdi
	movl	%r15d, %esi
	movl	%r13d, %ecx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB81_3:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbp)
	movq	$0, 8(%rbp)
	xorl	%ebx, %ebx
	jmp	.LBB81_4
.Lfunc_end81:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi, .Lfunc_end81-_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB82_18
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	leaq	24(%r14), %rax
	cmpq	%rax, %rsi
	je	.LBB82_2
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	je	.LBB82_11
###SPA### trampoline_fmt_64
# %bb.13:
	movq	%rdx, %rcx
	shrq	$62, %rcx
	jne	.LBB82_37
###SPA### trampoline_fmt_64
# %bb.14:
	addq	%rdx, %rdx
	je	.LBB82_15
###SPA### trampoline_fmt_64
# %bb.16:
	leaq	-1(%rdx), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB82_17
.LBB82_18:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB82_38
###SPA### trampoline_fmt_64
# %bb.19:
	testq	%rsi, %rsi
	js	.LBB82_38
###SPA### trampoline_fmt_64
# %bb.20:
	cmpq	$2, %rsi
	jae	.LBB82_22
###SPA### trampoline_fmt_64
# %bb.21:
	xorl	%ecx, %ecx
	jmp	.LBB82_23
.LBB82_22:
###SPA## trampoline_fmt_64
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
.LBB82_23:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	movq	(%r14), %rsi
	leaq	24(%r14), %rax
	cmpq	%rax, %rsi
	je	.LBB82_25
###SPA### trampoline_fmt_64
.LBB82_36:
###SPA## trampoline_fmt_64
	cmpq	$2143289344, %r15       # imm = 0x7FC00000
	jbe	.LBB82_12
###SPA### trampoline_fmt_64
	jmp	.LBB82_37
.LBB82_2:
###SPA## trampoline_fmt_64
	movl	$512, %r15d             # imm = 0x200
	jmp	.LBB82_3
.LBB82_11:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
.LBB82_12:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r15, %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	jne	.LBB82_35
###SPA### trampoline_fmt_64
	jmp	.LBB82_37
.LBB82_15:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB82_17:
###SPA## trampoline_fmt_64
	movl	$1, %edi
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdi
	xorl	%r15d, %r15d
	cmpq	%rdx, %rdi
	setne	%r15b
	orq	%rdx, %r15
	cmpq	%rax, %rsi
	jne	.LBB82_36
###SPA### trampoline_fmt_64
.LBB82_25:
###SPA## trampoline_fmt_64
	cmpq	$2143289344, %r15       # imm = 0x7FC00000
	ja	.LBB82_37
###SPA### trampoline_fmt_64
.LBB82_3:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r15, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB82_37
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%r14), %r9
	testq	%r9, %r9
	jle	.LBB82_35
###SPA### trampoline_fmt_64
# %bb.5:
	movq	(%r14), %rcx
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	$32, %r9
	jb	.LBB82_33
###SPA### trampoline_fmt_64
# %bb.6:
	leaq	(%rcx,%r9), %rdx
	cmpq	%rdx, %rax
	jae	.LBB82_8
###SPA### trampoline_fmt_64
# %bb.7:
	leaq	(%rax,%r9), %rdi
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	%rdi, %rcx
	jb	.LBB82_33
###SPA### trampoline_fmt_64
.LBB82_8:
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$5, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$96, %rsi
	jae	.LBB82_26
###SPA### trampoline_fmt_64
# %bb.9:
	xorl	%esi, %esi
	testq	%rdi, %rdi
	jne	.LBB82_29
###SPA### trampoline_fmt_64
	jmp	.LBB82_31
.LBB82_26:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	leaq	(%rdi,%rsi), %rdx
	addq	$-1, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB82_27:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rsi), %xmm0
	movups	16(%rcx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rcx,%rsi), %xmm0
	movups	48(%rcx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rcx,%rsi), %xmm0
	movups	80(%rcx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rcx,%rsi), %xmm0
	movups	112(%rcx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB82_27
###SPA### trampoline_fmt_64
# %bb.28:
	testq	%rdi, %rdi
	je	.LBB82_31
###SPA### trampoline_fmt_64
.LBB82_29:
###SPA## trampoline_fmt_64
	addq	$16, %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB82_30:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB82_30
###SPA### trampoline_fmt_64
.LBB82_31:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB82_35
###SPA### trampoline_fmt_64
# %bb.32:
	leaq	(%rcx,%r8), %rdx
	movq	%rax, %rsi
	addq	%r8, %rsi
.LBB82_33:
###SPA## trampoline_fmt_64
	subq	%rdx, %r9
	addq	%r9, %rcx
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB82_34:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movzbl	(%rdx,%rdi), %ebx
	movb	%bl, (%rsi,%rdi)
	addq	$1, %rdi
	cmpq	%rdi, %rcx
	jne	.LBB82_34
###SPA### trampoline_fmt_64
.LBB82_35:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB82_38:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB82_37:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end82:
	.size	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm, .Lfunc_end82-_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi,@function
_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi: # @_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movl	%esi, %ebx
	movl	%edx, %eax
	orb	$8, %al
	cmpb	$12, %al
	jne	.LBB83_6
###SPA### trampoline_fmt_64
# %bb.1:
	testl	%ebx, %ebx
	je	.LBB83_2
###SPA### trampoline_fmt_64
# %bb.3:
	movsbl	%bl, %esi
	leaq	8(%rdi), %r8
	shlb	$3, %cl
	andb	$56, %cl
	movq	(%rdi), %r9
	movq	8(%rdi), %rax
	cmpl	%ebx, %esi
	jne	.LBB83_5
###SPA### trampoline_fmt_64
# %bb.4:
	orb	$68, %cl
	movb	%cl, (%r9,%rax)
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rdi)
	andb	$7, %dl
	orb	$32, %dl
	movb	%dl, 1(%rax,%rcx)
	jmp	.LBB83_11
.LBB83_6:
###SPA## trampoline_fmt_64
	testl	%ebx, %ebx
	je	.LBB83_7
###SPA### trampoline_fmt_64
# %bb.9:
	movsbl	%bl, %eax
	cmpl	%ebx, %eax
	je	.LBB83_10
###SPA### trampoline_fmt_64
# %bb.12:
	andb	$7, %dl
	leaq	8(%rdi), %r8
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	shlb	$3, %cl
	andb	$56, %cl
	orb	%dl, %cl
	orb	$-128, %cl
	movb	%cl, (%rax,%rsi)
	jmp	.LBB83_13
.LBB83_2:
###SPA## trampoline_fmt_64
	leaq	8(%rdi), %r8
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	shlb	$3, %cl
	andb	$56, %cl
	orb	$4, %cl
	movb	%cl, (%rax,%rsi)
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rdi)
	andb	$7, %dl
	orb	$32, %dl
	movb	%dl, 1(%rax,%rcx)
	movl	$1, %ecx
	addq	%rcx, (%r8)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB83_5:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	orb	$-124, %cl
	movb	%cl, (%r9,%rax)
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rdi)
	andb	$7, %dl
	orb	$32, %dl
	movb	%dl, 1(%rax,%rcx)
.LBB83_13:
###SPA## trampoline_fmt_64
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rdi)
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rcx)
	shrl	$24, %ebx
	movb	%bl, 4(%rax,%rcx)
	movl	$4, %ecx
	addq	%rcx, (%r8)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB83_7:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	cmpb	$13, %al
	jne	.LBB83_8
###SPA### trampoline_fmt_64
.LBB83_10:
###SPA## trampoline_fmt_64
	andb	$7, %dl
	leaq	8(%rdi), %r8
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	shlb	$3, %cl
	andb	$56, %cl
	orb	%dl, %cl
	orb	$64, %cl
	movb	%cl, (%rax,%rsi)
.LBB83_11:
###SPA## trampoline_fmt_64
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rdi)
	movb	%bl, 1(%rax,%rcx)
	movl	$1, %ecx
	addq	%rcx, (%r8)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB83_8:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	andb	$7, %dl
	leaq	8(%rdi), %r8
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	shlb	$3, %cl
	andb	$56, %cl
	orb	%dl, %cl
	movb	%cl, (%rax,%rsi)
	movl	$1, %ecx
	addq	%rcx, (%r8)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end83:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi, .Lfunc_end83-_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_ # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_,@function
_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_: # @_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %r13d
	movl	%r8d, %ebx
	movl	%ecx, %r12d
	movq	%rdi, %rbp
	movl	88(%rsp), %r15d
	movl	80(%rsp), %eax
	movl	72(%rsp), %r10d
	movb	64(%rsp), %r14b
	cmpl	%r15d, %eax
	je	.LBB84_2
###SPA### trampoline_fmt_64
# %bb.1:
	movb	288(%rbp), %cl
	testb	%cl, %cl
	je	.LBB84_2
###SPA### trampoline_fmt_64
# %bb.9:
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movzbl	%r13b, %r8d
	movzbl	%r14b, %r9d
	movq	%rbp, %rdi
	movl	%edx, %esi
	movl	%r12d, %edx
	movl	%ebx, %ecx
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi
	addq	$40, %rsp
	.cfi_adjust_cfa_offset -40
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB84_2:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movq	%r10, (%rsp)            # 8-byte Spill
	movq	%rbp, %rdi
	movl	%edx, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	movq	8(%rbp), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbp)
	jae	.LBB84_5
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB84_4
###SPA### trampoline_fmt_64
.LBB84_5:
###SPA## trampoline_fmt_64
	movl	%r14d, %eax
	orb	%r13b, %al
	movzbl	%al, %eax
	orl	%r15d, %eax
	testb	$-8, %al
	je	.LBB84_6
###SPA### trampoline_fmt_64
# %bb.7:
	movl	%r15d, %eax
	shrl	$3, %eax
	movl	%r14d, %ecx
	shrb	$2, %cl
	andb	$62, %cl
	movl	%r13d, %edx
	shrb	$3, %dl
	orb	%cl, %dl
	movq	(%rbp), %rcx
	movq	8(%rbp), %rsi
	shlb	$2, %al
	orb	%dl, %al
	orb	$64, %al
	movb	%al, (%rcx,%rsi)
	movq	8(%rbp), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbp)
	jmp	.LBB84_8
.LBB84_6:
###SPA## trampoline_fmt_64
	movq	8(%rbp), %rax
.LBB84_8:
###SPA## trampoline_fmt_64
	movq	(%rsp), %r8             # 8-byte Reload
	movq	(%rbp), %rcx
	movb	$15, (%rcx,%rax)
	movq	(%rbp), %rax
	movq	8(%rbp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbp)
	movb	%r12b, 1(%rax,%rcx)
	addq	$1, 8(%rbp)
	movzbl	%r13b, %edx
	movzbl	%r14b, %ecx
	movq	%rbp, %rdi
	movl	%ebx, %esi
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%r15d, %r9d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB84_4:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbp)
	movq	$0, 8(%rbp)
	jmp	.LBB84_5
.Lfunc_end84:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_, .Lfunc_end84-_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES7_iNS1_13XMMRegisterIDES8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi,@function
_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi: # @_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %r10d
	movl	%edx, 16(%rsp)          # 4-byte Spill
	movl	%esi, 12(%rsp)          # 4-byte Spill
	movq	%rdi, %rbx
	movl	96(%rsp), %r12d
	movl	88(%rsp), %r15d
	movl	80(%rsp), %eax
	movl	%eax, 20(%rsp)          # 4-byte Spill
	movl	%r9d, %r14d
	shrb	$3, %r14b
	movl	%r8d, %r13d
	shrb	$3, %r13b
	movq	8(%rdi), %rdi
	leaq	16(%rdi), %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB85_5
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%r12d, 4(%rsp)          # 4-byte Spill
	movl	%r8d, 8(%rsp)           # 4-byte Spill
	movl	%r9d, %r12d
	movl	%r10d, %ebp
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB85_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rdi
.LBB85_4:
###SPA## trampoline_fmt_64
	movl	%ebp, %r10d
	movl	%r12d, %r9d
	movl	8(%rsp), %r8d           # 4-byte Reload
	movl	4(%rsp), %r12d          # 4-byte Reload
.LBB85_5:
###SPA## trampoline_fmt_64
	movl	%r12d, %eax
	sarl	$3, %eax
	xorl	%ecx, %ecx
	cmpl	$16, %r15d
	cmovnel	%r15d, %ecx
	movl	%r14d, %edx
	orb	%r13b, %dl
	movq	(%rbx), %rsi
	je	.LBB85_6
###SPA### trampoline_fmt_64
# %bb.7:
	movzbl	%r14b, %edx
	movzbl	%r13b, %ebp
	movb	$-60, (%rsi,%rdi)
	movq	(%rbx), %r11
	movq	8(%rbx), %rdi
	leaq	1(%rdi), %rsi
	movq	%rsi, 8(%rbx)
	shll	$7, %eax
	shll	$6, %edx
	shll	$5, %ebp
	orl	%edx, %ebp
	orl	%eax, %ebp
	xorb	$-31, %bpl
	movb	%bpl, 1(%r11,%rdi)
	movq	8(%rbx), %rdx
	addq	$1, %rdx
	movq	%rdx, 8(%rbx)
	shll	$3, %ecx
	orl	12(%rsp), %ecx          # 4-byte Folded Reload
	movb	$120, %sil
	movl	%ecx, %eax
	jmp	.LBB85_8
.LBB85_6:
###SPA## trampoline_fmt_64
	movb	$-59, (%rsi,%rdi)
	movq	8(%rbx), %rdx
	addq	$1, %rdx
	movq	%rdx, 8(%rbx)
	shll	$7, %eax
	shll	$3, %ecx
	orl	12(%rsp), %eax          # 4-byte Folded Reload
	orl	%ecx, %eax
	movb	$-8, %sil
.LBB85_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	xorb	%sil, %al
	movb	%al, (%rcx,%rdx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movl	16(%rsp), %edx          # 4-byte Reload
	movb	%dl, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	movzbl	%r8b, %edx
	movzbl	%r9b, %ecx
	movq	%rbx, %rdi
	movl	%r10d, %esi
	movl	20(%rsp), %r8d          # 4-byte Reload
	movl	%r12d, %r9d
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB85_3:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%edi, %edi
	jmp	.LBB85_4
.Lfunc_end85:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi, .Lfunc_end85-_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDES6_iNS1_13XMMRegisterIDEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii,@function
_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii: # @_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movl	%esi, %ebx
	testl	%esi, %esi
	je	.LBB86_1
###SPA### trampoline_fmt_64
# %bb.3:
	movsbl	%bl, %eax
	cmpl	%ebx, %eax
	je	.LBB86_4
###SPA### trampoline_fmt_64
# %bb.5:
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	shlb	$3, %r9b
	andb	$56, %r9b
	orb	$-124, %r9b
	movb	%r9b, (%rax,%rsi)
	movq	(%rdi), %r9
	movq	8(%rdi), %rsi
	leaq	1(%rsi), %rax
	movq	%rax, 8(%rdi)
	shlb	$3, %cl
	andb	$56, %cl
	andb	$7, %dl
	shlb	$6, %r8b
	orb	%dl, %r8b
	orb	%cl, %r8b
	movb	%r8b, 1(%r9,%rsi)
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rdi)
	leaq	8(%rdi), %r10
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rcx)
	shrl	$24, %ebx
	movb	%bl, 4(%rax,%rcx)
	movl	$4, %eax
	addq	%rax, (%r10)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB86_1:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movl	%edx, %eax
	orb	$8, %al
	cmpb	$13, %al
	jne	.LBB86_2
###SPA### trampoline_fmt_64
.LBB86_4:
###SPA## trampoline_fmt_64
	leaq	8(%rdi), %r10
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	shlb	$3, %r9b
	andb	$56, %r9b
	orb	$68, %r9b
	movb	%r9b, (%rax,%rsi)
	movq	(%rdi), %r9
	movq	8(%rdi), %rsi
	leaq	1(%rsi), %rax
	movq	%rax, 8(%rdi)
	shlb	$3, %cl
	andb	$56, %cl
	andb	$7, %dl
	shlb	$6, %r8b
	orb	%dl, %r8b
	orb	%cl, %r8b
	movb	%r8b, 1(%r9,%rsi)
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rdi)
	movb	%bl, 1(%rax,%rcx)
	movl	$1, %eax
	addq	%rax, (%r10)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB86_2:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	8(%rdi), %r10
	movq	(%rdi), %rax
	movq	8(%rdi), %rbx
	shlb	$3, %r9b
	andb	$56, %r9b
	orb	$4, %r9b
	movb	%r9b, (%rax,%rbx)
	movq	(%rdi), %r9
	movq	8(%rdi), %rbx
	leaq	1(%rbx), %rax
	movq	%rax, 8(%rdi)
	shlb	$3, %cl
	andb	$56, %cl
	andb	$7, %dl
	shlb	$6, %r8b
	orb	%dl, %r8b
	orb	%cl, %r8b
	movb	%r8b, 1(%r9,%rbx)
	movl	$1, %eax
	addq	%rax, (%r10)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end86:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii, .Lfunc_end86-_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movsbl	%sil, %eax
	movl	%esi, %r15d
	leaq	8(%rdi), %r14
	cmpl	%esi, %eax
	jne	.LBB87_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB87_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB87_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r14), %rax
.LBB87_5:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-125, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	andb	$7, %bpl
	orb	$-56, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	addq	(%rbx), %rax
	movl	$1, %ecx
	movl	%r15d, %ebx
	jmp	.LBB87_18
.LBB87_6:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	leaq	16(%rax), %rdx
	testb	%bpl, %bpl
	je	.LBB87_7
###SPA### trampoline_fmt_64
# %bb.12:
	cmpq	%rdx, %rcx
	jae	.LBB87_16
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB87_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	(%r14), %rax
.LBB87_16:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-127, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	andb	$7, %bpl
	orb	$-56, %bpl
	movb	%bpl, 1(%rax,%rcx)
	jmp	.LBB87_17
.LBB87_7:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB87_11
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB87_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	(%r14), %rax
.LBB87_11:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$13, 1(%rax,%rcx)
.LBB87_17:
###SPA## trampoline_fmt_64
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movl	%r15d, %ebx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%r15d, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	addq	%rcx, %rax
	addq	$4, %rax
	shrl	$24, %ebx
	movl	$4, %ecx
.LBB87_18:
###SPA## trampoline_fmt_64
	movb	%bl, (%rax)
	addq	%rcx, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB87_4:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB87_5
.LBB87_15:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB87_16
.LBB87_10:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB87_11
.Lfunc_end87:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE, .Lfunc_end87-_ZN2js3jit11X86Encoding16BaseAssemblerX646orq_irEiNS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE,"axG",@progbits,_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE,comdat
	.hidden	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE # -- Begin function _ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	.weak	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE,@function
_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE: # @_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movzwl	(%rdx), %ebp
	movl	%ebp, %eax
	andb	$15, %al
	cmpb	$4, %al
	ja	.LBB88_19
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movl	%ebp, %eax
	andl	$15, %eax
	leaq	.LJTI88_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB88_2:
###SPA## trampoline_fmt_64
	movl	%ebp, %r15d
	shrl	$4, %r15d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB88_6
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB88_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	744(%rbx), %rax
.LBB88_6:
###SPA## trampoline_fmt_64
	shrb	$5, %bpl
	andb	$4, %bpl
	movl	%r14d, %ecx
	shrb	$3, %cl
	orb	%bpl, %cl
	movq	736(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-117, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r14b
	shlb	$3, %r15b
	orb	%r14b, %r15b
	orb	$-64, %r15b
	movb	%r15b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB88_18:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	addq	$736, %rbx              # imm = 0x2E0
	movslq	4(%rdx), %rdx
	movzbl	%r14b, %esi
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv # TAILCALL
.LBB88_7:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rdx), %r12d
	shrl	$4, %ebp
	andb	$31, %bpl
	movzbl	%r14b, %r13d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB88_11
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB88_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	744(%rbx), %rax
.LBB88_11:
###SPA## trampoline_fmt_64
	shrb	%r14b
	andb	$52, %r14b
	movzbl	%bpl, %edx
	shrb	$3, %bpl
	orb	%r14b, %bpl
	movq	736(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$-119, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movq	%r15, %rdi
	movl	%r12d, %esi
	movl	%r13d, %ecx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB88_12:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rdx), %esi
	movl	%ebp, %r13d
	shrl	$4, %r13d
	andb	$31, %r13b
	movb	2(%rdx), %r12b
	shrl	$9, %ebp
	andl	$7, %ebp
	movzbl	%r14b, %r9d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB88_17
###SPA### trampoline_fmt_64
# %bb.13:
	movl	%r9d, (%rsp)            # 4-byte Spill
	movl	%esi, 4(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB88_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	744(%rbx), %rax
.LBB88_16:
###SPA## trampoline_fmt_64
	movl	4(%rsp), %esi           # 4-byte Reload
	movl	(%rsp), %r9d            # 4-byte Reload
.LBB88_17:
###SPA## trampoline_fmt_64
	shrb	%r14b
	andb	$52, %r14b
	movl	%r12d, %ecx
	shrb	$2, %cl
	andb	$54, %cl
	orb	%r14b, %cl
	movzbl	%r13b, %edx
	shrb	$3, %r13b
	orb	%cl, %r13b
	movq	736(%rbx), %rcx
	orb	$72, %r13b
	movb	%r13b, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdi
	movq	%rdi, 744(%rbx)
	movb	$-119, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movzbl	%r12b, %ecx
	movq	%r15, %rdi
	movl	%ebp, %r8d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB88_5:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB88_6
.LBB88_10:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB88_11
.LBB88_15:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB88_16
.LBB88_19:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$455, 0                 # imm = 0x1C7
	callq	abort@PLT
.Lfunc_end88:
	.size	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE, .Lfunc_end88-_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	.cfi_endproc
	.section	.rodata._ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE,"aG",@progbits,_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE,comdat
	.p2align	2
.LJTI88_0:
	.long	.LBB88_2-.LJTI88_0
	.long	.LBB88_7-.LJTI88_0
	.long	.LBB88_19-.LJTI88_0
	.long	.LBB88_12-.LJTI88_0
	.long	.LBB88_18-.LJTI88_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv: # @_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	testb	%bpl, %bpl
	jne	.LBB89_2
###SPA### trampoline_fmt_64
# %bb.1:
	movslq	%edx, %rax
	cmpq	%rdx, %rax
	jne	.LBB89_7
###SPA### trampoline_fmt_64
.LBB89_2:
###SPA## trampoline_fmt_64
	movq	%rdx, %r14
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB89_6
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB89_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%rbx), %rax
.LBB89_6:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	%cl
	orb	$72, %cl
	movq	(%rbx), %rdx
	andb	$124, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-119, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	shlb	$3, %bpl
	andb	$56, %bpl
	orb	$4, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$37, 1(%rax,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movq	%r14, %rax
	movb	%al, 1(%rsi,%rcx)
	movb	%ah, 2(%rsi,%rcx)
	movl	%eax, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 4(%rsi,%rcx)
	addq	$4, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB89_7:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movq	%rdx, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv # TAILCALL
.LBB89_5:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB89_6
.Lfunc_end89:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv, .Lfunc_end89-_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv: # @_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movslq	%ebx, %rax
	cmpq	%rsi, %rax
	jne	.LBB90_1
###SPA### trampoline_fmt_64
# %bb.6:
	xorl	%esi, %esi
	movq	%r14, %rdi
	movq	%rbx, %rdx
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_rmENS1_10RegisterIDEPKv # TAILCALL
.LBB90_1:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	8(%r14), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%r14)
	jae	.LBB90_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB90_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%r14), %rax
.LBB90_5:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%r14)
	movb	$-93, 1(%rax,%rcx)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%r14)
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$16, %rdx
	movb	%dl, 3(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$24, %rdx
	movb	%dl, 4(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$32, %rdx
	movb	%dl, 5(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$40, %rdx
	movb	%dl, 6(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$48, %rdx
	movb	%dl, 7(%rax,%rcx)
	shrq	$56, %rbx
	movb	%bl, 8(%rax,%rcx)
	addq	$8, 8(%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB90_4:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%r14)
	movq	$0, 8(%r14)
	xorl	%eax, %eax
	jmp	.LBB90_5
.Lfunc_end90:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv, .Lfunc_end90-_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_EAXmEPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE,"axG",@progbits,_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE # -- Begin function _ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	.weak	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE,@function
_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE: # @_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movzwl	(%rsi), %ebp
	movl	%ebp, %eax
	andb	$15, %al
	cmpb	$4, %al
	ja	.LBB91_19
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%edx, %r14d
	movq	%rdi, %rbx
	movl	%ebp, %eax
	andl	$15, %eax
	leaq	.LJTI91_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB91_2:
###SPA## trampoline_fmt_64
	movl	%ebp, %r15d
	shrl	$4, %r15d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB91_6
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB91_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	744(%rbx), %rax
.LBB91_6:
###SPA## trampoline_fmt_64
	movl	%r14d, %ecx
	shrb	%cl
	andb	$52, %cl
	shrl	$7, %ebp
	andb	$3, %bpl
	orb	%cl, %bpl
	movq	736(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-117, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r15b
	shlb	$3, %r14b
	orb	%r15b, %r14b
	orb	$-64, %r14b
	movb	%r14b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB91_18:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	addq	$736, %rbx              # imm = 0x2E0
	movslq	4(%rsi), %rsi
	movzbl	%r14b, %edx
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE # TAILCALL
.LBB91_7:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rsi), %r12d
	shrl	$4, %ebp
	andb	$31, %bpl
	movzbl	%r14b, %r13d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB91_11
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB91_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	744(%rbx), %rax
.LBB91_11:
###SPA## trampoline_fmt_64
	shrb	%r14b
	andb	$52, %r14b
	movzbl	%bpl, %edx
	shrb	$3, %bpl
	orb	%r14b, %bpl
	movq	736(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$-117, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movq	%r15, %rdi
	movl	%r12d, %esi
	movl	%r13d, %ecx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB91_12:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rsi), %r8d
	movl	%ebp, %r13d
	shrl	$4, %r13d
	andb	$31, %r13b
	movb	2(%rsi), %r12b
	shrl	$9, %ebp
	andl	$7, %ebp
	movzbl	%r14b, %r9d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB91_17
###SPA### trampoline_fmt_64
# %bb.13:
	movl	%r9d, (%rsp)            # 4-byte Spill
	movl	%r8d, 4(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB91_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	744(%rbx), %rax
.LBB91_16:
###SPA## trampoline_fmt_64
	movl	4(%rsp), %r8d           # 4-byte Reload
	movl	(%rsp), %r9d            # 4-byte Reload
.LBB91_17:
###SPA## trampoline_fmt_64
	shrb	%r14b
	andb	$52, %r14b
	movl	%r12d, %ecx
	shrb	$2, %cl
	andb	$54, %cl
	orb	%r14b, %cl
	movzbl	%r13b, %edx
	shrb	$3, %r13b
	orb	%cl, %r13b
	movq	736(%rbx), %rcx
	orb	$72, %r13b
	movb	%r13b, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$-117, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movzbl	%r12b, %ecx
	movq	%r15, %rdi
	movl	%r8d, %esi
	movl	%ebp, %r8d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB91_5:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB91_6
.LBB91_10:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB91_11
.LBB91_15:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB91_16
.LBB91_19:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$436, 0                 # imm = 0x1B4
	callq	abort@PLT
.Lfunc_end91:
	.size	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE, .Lfunc_end91-_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	.cfi_endproc
	.section	.rodata._ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE,"aG",@progbits,_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE,comdat
	.p2align	2
.LJTI91_0:
	.long	.LBB91_2-.LJTI91_0
	.long	.LBB91_7-.LJTI91_0
	.long	.LBB91_19-.LJTI91_0
	.long	.LBB91_12-.LJTI91_0
	.long	.LBB91_18-.LJTI91_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	testb	%bpl, %bpl
	jne	.LBB92_2
###SPA### trampoline_fmt_64
# %bb.1:
	movslq	%esi, %rax
	cmpq	%rsi, %rax
	jne	.LBB92_7
###SPA### trampoline_fmt_64
.LBB92_2:
###SPA## trampoline_fmt_64
	movq	%rsi, %r14
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB92_6
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB92_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%rbx), %rax
.LBB92_6:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	%cl
	orb	$72, %cl
	movq	(%rbx), %rdx
	andb	$124, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-117, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	shlb	$3, %bpl
	andb	$56, %bpl
	orb	$4, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$37, 1(%rax,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movq	%r14, %rax
	movb	%al, 1(%rsi,%rcx)
	movb	%ah, 2(%rsi,%rcx)
	movl	%eax, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 4(%rsi,%rcx)
	addq	$4, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB92_7:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv # TAILCALL
.LBB92_5:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB92_6
.Lfunc_end92:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE, .Lfunc_end92-_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv: # @_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movslq	%ebx, %rax
	cmpq	%rsi, %rax
	jne	.LBB93_1
###SPA### trampoline_fmt_64
# %bb.6:
	xorl	%edx, %edx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647movq_mrEPKvNS1_10RegisterIDE # TAILCALL
.LBB93_1:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	8(%r14), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%r14)
	jae	.LBB93_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB93_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%r14), %rax
.LBB93_5:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%r14)
	movb	$-95, 1(%rax,%rcx)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%r14)
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$16, %rdx
	movb	%dl, 3(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$24, %rdx
	movb	%dl, 4(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$32, %rdx
	movb	%dl, 5(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$40, %rdx
	movb	%dl, 6(%rax,%rcx)
	movq	%rbx, %rdx
	shrq	$48, %rdx
	movb	%dl, 7(%rax,%rcx)
	shrq	$56, %rbx
	movb	%bl, 8(%rax,%rcx)
	addq	$8, 8(%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB93_4:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%r14)
	movq	$0, 8(%r14)
	xorl	%eax, %eax
	jmp	.LBB93_5
.Lfunc_end93:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv, .Lfunc_end93-_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_mEAXEPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE,"axG",@progbits,_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE # -- Begin function _ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	.weak	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE,@function
_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE: # @_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %r13
	movq	%rsi, %r12
	shrq	$32, %r12
	jne	.LBB94_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %rbx
	leaq	736(%r13), %r14
	movq	744(%r13), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r13)
	jae	.LBB94_4
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB94_3
###SPA### trampoline_fmt_64
.LBB94_4:
###SPA## trampoline_fmt_64
	addq	$744, %r13              # imm = 0x2E8
	cmpb	$7, %bpl
	ja	.LBB94_6
###SPA### trampoline_fmt_64
.LBB94_5:
###SPA## trampoline_fmt_64
	movq	(%r13), %rax
	jmp	.LBB94_7
.LBB94_8:
###SPA## trampoline_fmt_64
	movslq	%esi, %rax
	leaq	736(%r13), %r14
	movq	%rsi, %rbx
	leaq	744(%r13), %r15
	cmpq	%rsi, %rax
	jne	.LBB94_14
###SPA### trampoline_fmt_64
# %bb.9:
	movq	744(%r13), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r13)
	jae	.LBB94_13
###SPA### trampoline_fmt_64
# %bb.10:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB94_12
###SPA### trampoline_fmt_64
# %bb.11:
	movq	(%r15), %rax
.LBB94_13:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%r14), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movq	(%r14), %rcx
	movb	$-57, 1(%rcx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	andb	$7, %bpl
	movq	(%r14), %rcx
	orb	$-64, %bpl
	movb	%bpl, 1(%rcx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movq	(%r14), %rcx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 4(%rcx,%rax)
	movl	$4, %eax
	jmp	.LBB94_19
.LBB94_14:
###SPA## trampoline_fmt_64
	movq	744(%r13), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r13)
	jae	.LBB94_18
###SPA### trampoline_fmt_64
# %bb.15:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB94_17
###SPA### trampoline_fmt_64
# %bb.16:
	movq	(%r15), %rax
.LBB94_18:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%r14), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	andb	$7, %bpl
	movq	(%r14), %rcx
	orb	$-72, %bpl
	movb	%bpl, 1(%rcx,%rax)
	movq	(%r15), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r15)
	movq	(%r14), %rcx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movq	%rbx, %rdx
	shrq	$16, %rdx
	movb	%dl, 3(%rcx,%rax)
	movq	%rbx, %rdx
	shrq	$24, %rdx
	movb	%dl, 4(%rcx,%rax)
	movb	%r12b, 5(%rcx,%rax)
	movq	%rbx, %rdx
	shrq	$40, %rdx
	movb	%dl, 6(%rcx,%rax)
	movq	%rbx, %rdx
	shrq	$48, %rdx
	movb	%dl, 7(%rcx,%rax)
	shrq	$56, %rbx
	movb	%bl, 8(%rcx,%rax)
	movl	$8, %eax
	jmp	.LBB94_19
.LBB94_3:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	addq	$744, %r13              # imm = 0x2E8
	cmpb	$7, %bpl
	jbe	.LBB94_5
###SPA### trampoline_fmt_64
.LBB94_6:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	$3, %al
	movq	(%r13), %rcx
	movq	(%r14), %rdx
	orb	$64, %al
	movb	%al, (%rdx,%rcx)
	movq	(%r13), %rax
	addq	$1, %rax
	movq	%rax, (%r13)
.LBB94_7:
###SPA## trampoline_fmt_64
	andb	$7, %bpl
	orb	$-72, %bpl
	movq	(%r14), %rcx
	movb	%bpl, (%rcx,%rax)
	movq	(%r13), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r13)
	movq	(%r14), %rcx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 4(%rcx,%rax)
	movl	$4, %eax
	movq	%r13, %r15
.LBB94_19:
###SPA## trampoline_fmt_64
	addq	%rax, (%r15)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB94_12:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB94_13
.LBB94_17:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r13)
	movq	$0, 744(%r13)
	xorl	%eax, %eax
	jmp	.LBB94_18
.Lfunc_end94:
	.size	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE, .Lfunc_end94-_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE,"axG",@progbits,_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE,comdat
	.hidden	_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE # -- Begin function _ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE
	.weak	_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE,@function
_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE: # @_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movzwl	(%rdx), %eax
	movl	%eax, %ecx
	andb	$15, %cl
	cmpb	$4, %cl
	ja	.LBB95_6
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%eax, %ecx
	andl	$15, %ecx
	leaq	.LJTI95_0(%rip), %r8
	movslq	(%r8,%rcx,4), %rcx
	addq	%r8, %rcx
	jmpq	*%rcx
.LBB95_2:
###SPA## trampoline_fmt_64
	addq	$736, %rdi              # imm = 0x2E0
	shrl	$4, %eax
	andl	$31, %eax
	movl	%eax, %edx
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE # TAILCALL
.LBB95_5:
###SPA## trampoline_fmt_64
	addq	$736, %rdi              # imm = 0x2E0
	movslq	4(%rdx), %rdx
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv # TAILCALL
.LBB95_3:
###SPA## trampoline_fmt_64
	addq	$736, %rdi              # imm = 0x2E0
	movl	4(%rdx), %edx
	shrl	$4, %eax
	andl	$31, %eax
	movl	%eax, %ecx
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE # TAILCALL
.LBB95_4:
###SPA## trampoline_fmt_64
	addq	$736, %rdi              # imm = 0x2E0
	movl	4(%rdx), %r9d
	movl	%eax, %ecx
	shrl	$4, %ecx
	movzbl	2(%rdx), %r8d
	shrl	$9, %eax
	andl	$7, %eax
	andl	$31, %ecx
	movl	%r9d, %edx
	movl	%eax, %r9d
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i # TAILCALL
.LBB95_6:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1061, 0                # imm = 0x425
	callq	abort@PLT
.Lfunc_end95:
	.size	_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE, .Lfunc_end95-_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE
	.cfi_endproc
	.section	.rodata._ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE,"aG",@progbits,_ZN2js3jit9Assembler4cmpqENS0_5Imm32ERKNS0_7OperandE,comdat
	.p2align	2
.LJTI95_0:
	.long	.LBB95_2-.LJTI95_0
	.long	.LBB95_3-.LJTI95_0
	.long	.LBB95_6-.LJTI95_0
	.long	.LBB95_4-.LJTI95_0
	.long	.LBB95_5-.LJTI95_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	testl	%esi, %esi
	je	.LBB96_1
###SPA### trampoline_fmt_64
# %bb.6:
	movsbl	%sil, %eax
	movl	%esi, %r15d
	leaq	8(%rbx), %r14
	cmpl	%esi, %eax
	jne	.LBB96_12
###SPA### trampoline_fmt_64
# %bb.7:
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB96_11
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB96_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	(%r14), %rax
.LBB96_11:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-125, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	orb	$-8, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	%r15b, 1(%rax,%rcx)
	movl	$1, %eax
	jmp	.LBB96_24
.LBB96_1:
###SPA## trampoline_fmt_64
	leaq	8(%rbx), %r14
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB96_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB96_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r14), %rax
.LBB96_5:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movl	%ecx, %edx
	shlb	$2, %dl
	movq	(%rbx), %rsi
	orb	%cl, %dl
	orb	$72, %dl
	movb	%dl, (%rsi,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-123, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movl	%ebp, %edx
	andb	$7, %dl
	shlb	$3, %bpl
	orb	%dl, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movl	$1, %eax
	jmp	.LBB96_24
.LBB96_12:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	leaq	16(%rax), %rdx
	testb	%bpl, %bpl
	je	.LBB96_13
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	%rdx, %rcx
	jae	.LBB96_22
###SPA### trampoline_fmt_64
# %bb.19:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB96_21
###SPA### trampoline_fmt_64
# %bb.20:
	movq	(%r14), %rax
.LBB96_22:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-127, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	orb	$-8, %bpl
	movb	%bpl, 1(%rax,%rcx)
	jmp	.LBB96_23
.LBB96_13:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB96_17
###SPA### trampoline_fmt_64
# %bb.14:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB96_16
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r14), %rax
.LBB96_17:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$61, 1(%rax,%rcx)
.LBB96_23:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movl	%r15d, %ebx
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movl	%r15d, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rcx)
	shrl	$24, %ebx
	movb	%bl, 4(%rax,%rcx)
	movl	$4, %eax
.LBB96_24:
###SPA## trampoline_fmt_64
	addq	%rax, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB96_4:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB96_5
.LBB96_10:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB96_11
.LBB96_21:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB96_22
.LBB96_16:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB96_17
.Lfunc_end96:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE, .Lfunc_end96-_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_irEiNS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebp
	movl	%edx, %r14d
	movq	%rdi, %rbx
	movsbl	%sil, %edi
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	leaq	16(%rax), %rdx
	movl	%esi, %r15d
	cmpl	%esi, %edi
	jne	.LBB97_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	%rdx, %rcx
	jae	.LBB97_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB97_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%rbx), %rax
.LBB97_5:
###SPA## trampoline_fmt_64
	movzbl	%bpl, %edx
	shrb	$3, %bpl
	movq	(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rbx)
	movb	$-125, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	movl	$7, %ecx
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
	movq	(%rbx), %rax
	addq	8(%rbx), %rax
	movl	$1, %ecx
	jmp	.LBB97_11
.LBB97_6:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB97_10
###SPA### trampoline_fmt_64
# %bb.7:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB97_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	8(%rbx), %rax
.LBB97_10:
###SPA## trampoline_fmt_64
	movzbl	%bpl, %edx
	shrb	$3, %bpl
	movq	(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rbx)
	movb	$-127, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	movl	$7, %ecx
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	movl	%r15d, %eax
	movb	%al, (%rsi,%rcx)
	movb	%ah, 1(%rsi,%rcx)
	movl	%r15d, %edx
	shrl	$16, %edx
	movb	%dl, 2(%rsi,%rcx)
	leaq	(%rsi,%rcx), %rax
	addq	$3, %rax
	shrl	$24, %r15d
	movl	$4, %ecx
.LBB97_11:
###SPA## trampoline_fmt_64
	movb	%r15b, (%rax)
	addq	%rcx, 8(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB97_4:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB97_5
.LBB97_9:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB97_10
.Lfunc_end97:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE, .Lfunc_end97-_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i: # @_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %ebx
	movl	%r8d, %r12d
	movl	%ecx, %ebp
	movl	%edx, %r15d
	movq	%rdi, %r14
	movsbl	%sil, %edi
	movq	8(%r14), %rax
	movq	16(%r14), %rcx
	leaq	16(%rax), %rdx
	movl	%esi, %r13d
	cmpl	%esi, %edi
	jne	.LBB98_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	%rdx, %rcx
	jae	.LBB98_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB98_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%r14), %rax
.LBB98_5:
###SPA## trampoline_fmt_64
	movl	%r12d, %ecx
	shrb	$2, %cl
	andb	$54, %cl
	movl	%ebp, %edx
	shrb	$3, %dl
	orb	%cl, %dl
	movq	(%r14), %rcx
	orb	$72, %dl
	movb	%dl, (%rcx,%rax)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%r14)
	movb	$-125, 1(%rax,%rcx)
	addq	$1, 8(%r14)
	movzbl	%bpl, %edx
	movzbl	%r12b, %ecx
	movl	$7, %r9d
	movl	%r15d, %esi
	movq	%r14, %rdi
	movl	%ebx, %r8d
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
	movq	(%r14), %rax
	addq	8(%r14), %rax
	movl	$1, %ecx
	movl	%r13d, %ebx
	jmp	.LBB98_11
.LBB98_6:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB98_10
###SPA### trampoline_fmt_64
# %bb.7:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB98_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	8(%r14), %rax
.LBB98_10:
###SPA## trampoline_fmt_64
	movl	%r12d, %ecx
	shrb	$2, %cl
	andb	$54, %cl
	movl	%ebp, %edx
	shrb	$3, %dl
	orb	%cl, %dl
	movq	(%r14), %rcx
	orb	$72, %dl
	movb	%dl, (%rcx,%rax)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%r14)
	movb	$-127, 1(%rax,%rcx)
	addq	$1, 8(%r14)
	movzbl	%bpl, %edx
	movzbl	%r12b, %ecx
	movl	$7, %r9d
	movl	%r15d, %esi
	movq	%r14, %rdi
	movl	%ebx, %r8d
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	movl	%r13d, %ebx
	movb	%bl, (%rax,%rcx)
	movb	%bh, 1(%rax,%rcx)
	movl	%r13d, %edx
	shrl	$16, %edx
	movb	%dl, 2(%rax,%rcx)
	addq	%rcx, %rax
	addq	$3, %rax
	shrl	$24, %ebx
	movl	$4, %ecx
.LBB98_11:
###SPA## trampoline_fmt_64
	movb	%bl, (%rax)
	addq	%rcx, 8(%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB98_4:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 280(%r14)
	movq	$0, 8(%r14)
	xorl	%eax, %eax
	jmp	.LBB98_5
.LBB98_9:
###SPA## trampoline_fmt_64
	movb	$1, 280(%r14)
	movq	$0, 8(%r14)
	xorl	%eax, %eax
	jmp	.LBB98_10
.Lfunc_end98:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i, .Lfunc_end98-_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiiNS1_10RegisterIDES3_i
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv: # @_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rbp
	movq	%rdi, %rbx
	movsbl	%sil, %edi
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	leaq	16(%rax), %rdx
	movl	%esi, %r14d
	cmpl	%esi, %edi
	jne	.LBB99_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	%rdx, %rcx
	jae	.LBB99_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB99_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%rbx), %rax
.LBB99_5:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-125, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$60, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$37, 1(%rax,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rbp, %rax
	movb	%al, 1(%rsi,%rcx)
	movb	%ah, 2(%rsi,%rcx)
	movl	%eax, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 4(%rsi,%rcx)
	movq	8(%rbx), %rax
	addq	$4, %rax
	movq	%rax, 8(%rbx)
	addq	(%rbx), %rax
	movl	$1, %ecx
	movl	%r14d, %ebp
	jmp	.LBB99_11
.LBB99_6:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB99_10
###SPA### trampoline_fmt_64
# %bb.7:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB99_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	8(%rbx), %rax
.LBB99_10:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-127, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$60, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$37, 1(%rax,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rbp, %rax
	movb	%al, 1(%rsi,%rcx)
	movb	%ah, 2(%rsi,%rcx)
	movl	%eax, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 4(%rsi,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	leaq	4(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movl	%r14d, %eax
	movb	%al, 4(%rsi,%rcx)
	movb	%ah, 5(%rsi,%rcx)
	movl	%r14d, %edx
	shrl	$16, %edx
	movb	%dl, 6(%rsi,%rcx)
	movl	%r14d, %ebp
	leaq	(%rsi,%rcx), %rax
	addq	$7, %rax
	shrl	$24, %ebp
	movl	$4, %ecx
.LBB99_11:
###SPA## trampoline_fmt_64
	movb	%bpl, (%rax)
	addq	%rcx, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB99_4:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB99_5
.LBB99_9:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB99_10
.Lfunc_end99:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv, .Lfunc_end99-_ZN2js3jit11X86Encoding16BaseAssemblerX647cmpq_imEiPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE # -- Begin function _ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	.weak	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE,@function
_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE: # @_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movl	%esi, %ebp
	movl	(%rdx), %edx
	leaq	736(%rdi), %r14
	testb	$1, %dl
	jne	.LBB100_11
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdi, %rbx
	movq	744(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rdi)
	jae	.LBB100_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB100_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	744(%rbx), %rax
.LBB100_5:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	xorb	$-128, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	$0, 1(%rax,%rcx)
	movq	744(%rbx), %rdx
	addq	$4, %rdx
	movq	%rdx, 744(%rbx)
	movl	(%r15), %esi
	movl	%esi, %edi
	andl	$1, %edi
	sete	%cl
	cmpl	$-2, %esi
	setb	%al
	andb	%cl, %al
	shrl	%esi
	testb	%al, %al
	movl	$-1, %ecx
	cmovnel	%esi, %ecx
	leal	(%rdi,%rdx,2), %esi
	movl	%esi, (%r15)
	cmpb	$0, 1016(%rbx)
	jne	.LBB100_10
###SPA### trampoline_fmt_64
# %bb.6:
	cmpl	$4, %edx
	jle	.LBB100_12
###SPA### trampoline_fmt_64
# %bb.7:
	movslq	%edx, %rdx
	movq	744(%rbx), %rsi
	cmpq	%rdx, %rsi
	jb	.LBB100_13
###SPA### trampoline_fmt_64
# %bb.8:
	movslq	%ecx, %rdi
	cmpq	%rdi, %rsi
	setae	%bl
	xorb	$1, %al
	orb	%bl, %al
	je	.LBB100_14
###SPA### trampoline_fmt_64
# %bb.9:
	movq	(%r14), %rax
	movl	%ecx, -4(%rax,%rdx)
.LBB100_10:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB100_11:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	shrl	%edx
	movq	%r14, %rdi
	movl	%ebp, %esi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE # TAILCALL
.LBB100_4:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB100_5
.LBB100_12:
###SPA## trampoline_fmt_64
	leaq	.L.str.165(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3862, 0                # imm = 0xF16
	callq	abort@PLT
.LBB100_13:
###SPA## trampoline_fmt_64
	leaq	.L.str.166(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3863, 0                # imm = 0xF17
	callq	abort@PLT
.LBB100_14:
###SPA## trampoline_fmt_64
	leaq	.L.str.164(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3920, 0                # imm = 0xF50
	callq	abort@PLT
.Lfunc_end100:
	.size	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE, .Lfunc_end100-_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE,@function
_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE: # @_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
                                        # kill: def $edx killed $edx def $rdx
	movl	%esi, %ebp
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	movq	16(%rdi), %rcx
	subl	%eax, %edx
	movq	%rdx, %r14
	leal	126(%rdx), %esi
	leaq	16(%rax), %rdx
	cmpl	$255, %esi
	ja	.LBB101_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	%rdx, %rcx
	jae	.LBB101_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB101_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%rbx), %rax
.LBB101_5:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	addb	$112, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	addb	$-2, %r14b
	movb	%r14b, 1(%rax,%rcx)
	movl	$1, %eax
	jmp	.LBB101_11
.LBB101_6:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB101_10
###SPA### trampoline_fmt_64
# %bb.7:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB101_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	8(%rbx), %rax
.LBB101_10:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	xorb	$-128, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rax
	leaq	1(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%r14, %rcx
	addl	$-6, %ecx
	movb	%cl, 1(%rsi,%rax)
	movb	%ch, 2(%rsi,%rax)
	movl	%ecx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rax)
	shrl	$24, %ecx
	movb	%cl, 4(%rsi,%rax)
	movl	$4, %eax
.LBB101_11:
###SPA## trampoline_fmt_64
	addq	%rax, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB101_4:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB101_5
.LBB101_9:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB101_10
.Lfunc_end101:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE, .Lfunc_end101-_ZN2js3jit11X86Encoding13BaseAssembler5jCC_iENS1_9ConditionENS1_6JmpDstE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE # -- Begin function _ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	.weak	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE,@function
_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE: # @_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	744(%rdi), %r8
	movl	(%rsi), %r10d
	cmpl	$-3, %r10d
	ja	.LBB102_12
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%r10d, %eax
	andl	$1, %eax
	jne	.LBB102_12
###SPA### trampoline_fmt_64
# %bb.2:
	shrl	%r10d
	movslq	%r8d, %r9
	.p2align	4, 0x90
.LBB102_3:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpb	$0, 1016(%rdi)
	jne	.LBB102_12
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB102_3 Depth=1
	cmpl	$4, %r10d
	jle	.LBB102_13
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB102_3 Depth=1
	movslq	%r10d, %rax
	movq	744(%rdi), %rcx
	cmpq	%rax, %rcx
	jb	.LBB102_14
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB102_3 Depth=1
	movq	736(%rdi), %rdx
	movslq	-4(%rdx,%rax), %r10
	cmpq	$-1, %r10
	je	.LBB102_7
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB102_3 Depth=1
	movb	$1, %r11b
	cmpq	%r10, %rcx
	jbe	.LBB102_15
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB102_3 Depth=1
	cmpq	%r9, %rcx
	jae	.LBB102_10
###SPA### trampoline_fmt_64
	jmp	.LBB102_16
	.p2align	4, 0x90
.LBB102_7:                              #   in Loop: Header=BB102_3 Depth=1
###SPA## trampoline_fmt_64
	xorl	%r11d, %r11d
	cmpq	%r9, %rcx
	jb	.LBB102_16
###SPA### trampoline_fmt_64
.LBB102_10:                             #   in Loop: Header=BB102_3 Depth=1
###SPA## trampoline_fmt_64
	addq	%rdx, %rax
	addq	%r9, %rdx
	subq	%rax, %rdx
	movslq	%edx, %rcx
	cmpq	%rdx, %rcx
	jne	.LBB102_17
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB102_3 Depth=1
	movl	%edx, -4(%rax)
	testb	%r11b, %r11b
	jne	.LBB102_3
###SPA### trampoline_fmt_64
.LBB102_12:
###SPA## trampoline_fmt_64
	leal	(%r8,%r8), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	popq	%rax
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB102_13:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	leaq	.L.str.165(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3862, 0                # imm = 0xF16
	callq	abort@PLT
.LBB102_14:
###SPA## trampoline_fmt_64
	leaq	.L.str.166(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3863, 0                # imm = 0xF17
	callq	abort@PLT
.LBB102_16:
###SPA## trampoline_fmt_64
	leaq	.L.str.171(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3937, 0                # imm = 0xF61
	callq	abort@PLT
.LBB102_17:
###SPA## trampoline_fmt_64
	leaq	.L.str.173(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$41, 0
	callq	abort@PLT
.LBB102_15:
###SPA## trampoline_fmt_64
	leaq	.L.str.170(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3906, 0                # imm = 0xF42
	callq	abort@PLT
.Lfunc_end102:
	.size	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE, .Lfunc_end102-_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_ # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_,@function
_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_: # @_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %ebp
	movl	%r8d, %r14d
	movl	%ecx, %r15d
	movq	%rdi, %rbx
	cmpb	$0, 288(%rdi)
	je	.LBB103_1
###SPA### trampoline_fmt_64
# %bb.8:
	movzbl	%r14b, %ecx
	movl	$16, %r8d
	movq	%rbx, %rdi
	movl	%edx, %esi
	movl	%r15d, %edx
	movl	%ebp, %r9d
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi # TAILCALL
.LBB103_1:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movl	%edx, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	movq	8(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB103_4
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB103_3
###SPA### trampoline_fmt_64
.LBB103_4:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	orl	%r14d, %eax
	testb	$-8, %al
	je	.LBB103_5
###SPA### trampoline_fmt_64
.LBB103_6:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrl	%eax
	andl	$188, %eax
	movl	%r14d, %ecx
	shrl	$3, %ecx
	andl	$31, %ecx
	orl	%eax, %ecx
	movq	(%rbx), %rax
	movq	8(%rbx), %rdx
	orb	$64, %cl
	movb	%cl, (%rax,%rdx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	jmp	.LBB103_7
.LBB103_3:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	movl	%ebp, %eax
	orl	%r14d, %eax
	testb	$-8, %al
	jne	.LBB103_6
###SPA### trampoline_fmt_64
.LBB103_5:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
.LBB103_7:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	%r15b, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	andb	$7, %r14b
	shlb	$3, %bpl
	orb	%r14b, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end103:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_, .Lfunc_end103-_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi,@function
_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi: # @_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %r12d
	movl	%r8d, %r13d
	movl	%ecx, %r14d
	movq	%rdi, %rbx
	movl	%r14d, %r15d
	shrb	$3, %r15b
	movq	8(%rdi), %rbp
	leaq	16(%rbp), %rax
	cmpq	%rax, 16(%rdi)
	jae	.LBB104_5
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%esi, (%rsp)            # 4-byte Spill
	movl	%edx, 4(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB104_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rbp
.LBB104_4:
###SPA## trampoline_fmt_64
	movl	4(%rsp), %edx           # 4-byte Reload
	movl	(%rsp), %esi            # 4-byte Reload
.LBB104_5:
###SPA## trampoline_fmt_64
	movl	%r12d, %eax
	sarl	$3, %eax
	xorl	%ecx, %ecx
	cmpl	$16, %r13d
	cmovnel	%r13d, %ecx
	movq	(%rbx), %r8
	testb	%r15b, %r15b
	je	.LBB104_6
###SPA### trampoline_fmt_64
# %bb.7:
	movzbl	%r15b, %edi
	movb	$-60, (%r8,%rbp)
	movq	(%rbx), %r8
	movq	8(%rbx), %r9
	leaq	1(%r9), %rbp
	movq	%rbp, 8(%rbx)
	shll	$7, %eax
	shll	$5, %edi
	orl	%eax, %edi
	xorb	$-31, %dil
	movb	%dil, 1(%r8,%r9)
	movq	8(%rbx), %rdi
	addq	$1, %rdi
	movq	%rdi, 8(%rbx)
	shll	$3, %ecx
	orl	%esi, %ecx
	movb	$120, %sil
	movl	%ecx, %eax
	jmp	.LBB104_8
.LBB104_6:
###SPA## trampoline_fmt_64
	movb	$-59, (%r8,%rbp)
	movq	8(%rbx), %rdi
	addq	$1, %rdi
	movq	%rdi, 8(%rbx)
	shll	$7, %eax
	shll	$3, %ecx
	orl	%esi, %eax
	orl	%ecx, %eax
	movb	$-8, %sil
.LBB104_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	xorb	%sil, %al
	movb	%al, (%rcx,%rdi)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rbx)
	movb	%dl, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	andb	$7, %r14b
	shlb	$3, %r12b
	orb	%r14b, %r12b
	orb	$-64, %r12b
	movb	%r12b, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB104_3:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%ebp, %ebp
	jmp	.LBB104_4
.Lfunc_end104:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi, .Lfunc_end104-_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE,"axG",@progbits,_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE,comdat
	.hidden	_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE # -- Begin function _ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE
	.weak	_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE,@function
_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE: # @_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, 4(%rsp)           # 4-byte Spill
	movl	%r8d, %ebp
	movq	%rcx, %r13
	movl	%esi, %r15d
	movq	%rdi, %rbx
	movq	80(%rsp), %r12
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	andl	$31, %edx
	shll	$4, %edx
	orl	$1, %edx
	movw	%dx, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	$0, 12(%rsp)
	leaq	8(%rsp), %rsi
	movl	%r8d, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movl	%ebp, %r14d
	andl	$31, %r14d
	shll	$4, %r14d
	leal	1(%r14), %eax
	movw	%ax, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	$0, 12(%rsp)
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	movl	%ebp, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movzbl	(%r13), %eax
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	4(%r13), %eax
	movl	%eax, 12(%rsp)
	leaq	8(%rsp), %rdx
	movq	%rbx, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE
	movq	%rbx, %rdi
	movl	%r15d, %esi
	movq	%r12, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	cmpb	$0, _ZN2js3jit10JitOptionsE+142(%rip)
	je	.LBB105_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB105_4
###SPA### trampoline_fmt_64
# %bb.2:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB105_3
###SPA### trampoline_fmt_64
.LBB105_4:
###SPA## trampoline_fmt_64
	cmpb	$7, %bpl
	ja	.LBB105_6
###SPA### trampoline_fmt_64
.LBB105_5:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	jmp	.LBB105_7
.LBB105_3:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	cmpb	$7, %bpl
	jbe	.LBB105_5
###SPA### trampoline_fmt_64
.LBB105_6:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	$3, %al
	movq	736(%rbx), %rcx
	movq	744(%rbx), %rdx
	orb	$64, %al
	movb	%al, (%rcx,%rdx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB105_7:
###SPA## trampoline_fmt_64
	andb	$7, %bpl
	orb	$-72, %bpl
	movq	736(%rbx), %rcx
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	$0, 1(%rax,%rcx)
	addq	$4, 744(%rbx)
	movw	%r14w, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	$0, 12(%rsp)
	movzbl	4(%rsp), %ecx           # 1-byte Folded Reload
	leaq	8(%rsp), %rdx
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE
.LBB105_8:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB105_10
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB105_10:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end105:
	.size	_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE, .Lfunc_end105-_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE # -- Begin function _ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	.weak	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE,@function
_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE: # @_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movl	(%rsi), %esi
	leaq	736(%rdi), %r14
	testb	$1, %sil
	jne	.LBB106_11
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdi, %rbx
	movq	744(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rdi)
	jae	.LBB106_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB106_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	744(%rbx), %rax
.LBB106_5:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-23, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	$0, 1(%rax,%rcx)
	movq	744(%rbx), %rdx
	addq	$4, %rdx
	movq	%rdx, 744(%rbx)
	movl	(%r15), %esi
	movl	%esi, %edi
	andl	$1, %edi
	sete	%cl
	cmpl	$-2, %esi
	setb	%al
	andb	%cl, %al
	shrl	%esi
	testb	%al, %al
	movl	$-1, %ecx
	cmovnel	%esi, %ecx
	leal	(%rdi,%rdx,2), %esi
	movl	%esi, (%r15)
	cmpb	$0, 1016(%rbx)
	je	.LBB106_6
###SPA### trampoline_fmt_64
# %bb.10:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB106_11:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	shrl	%esi
	movq	%r14, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE # TAILCALL
.LBB106_6:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	cmpl	$4, %edx
	jle	.LBB106_12
###SPA### trampoline_fmt_64
# %bb.7:
	movslq	%edx, %rdx
	movq	744(%rbx), %rsi
	cmpq	%rdx, %rsi
	jb	.LBB106_13
###SPA### trampoline_fmt_64
# %bb.8:
	movslq	%ecx, %rdi
	cmpq	%rdi, %rsi
	setae	%bl
	xorb	$1, %al
	orb	%bl, %al
	je	.LBB106_14
###SPA### trampoline_fmt_64
# %bb.9:
	movq	(%r14), %rax
	movl	%ecx, -4(%rax,%rdx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB106_4:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB106_5
.LBB106_12:
###SPA## trampoline_fmt_64
	leaq	.L.str.165(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3862, 0                # imm = 0xF16
	callq	abort@PLT
.LBB106_13:
###SPA## trampoline_fmt_64
	leaq	.L.str.166(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3863, 0                # imm = 0xF17
	callq	abort@PLT
.LBB106_14:
###SPA## trampoline_fmt_64
	leaq	.L.str.164(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$3920, 0                # imm = 0xF50
	callq	abort@PLT
.Lfunc_end106:
	.size	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE, .Lfunc_end106-_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE,@function
_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE: # @_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movl	%esi, %ebx
	movq	%rdi, %r14
	movq	8(%rdi), %rax
	movq	16(%rdi), %rcx
	subl	%eax, %ebx
	leal	126(%rbx), %esi
	leaq	16(%rax), %rdx
	cmpl	$255, %esi
	ja	.LBB107_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	%rdx, %rcx
	jae	.LBB107_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB107_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%r14), %rax
.LBB107_5:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$-21, (%rcx,%rax)
	movq	(%r14), %rax
	movq	8(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%r14)
	addb	$-2, %bl
	movb	%bl, 1(%rax,%rcx)
	movl	$1, %eax
	jmp	.LBB107_11
.LBB107_6:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB107_10
###SPA### trampoline_fmt_64
# %bb.7:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB107_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	8(%r14), %rax
.LBB107_10:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$-23, (%rcx,%rax)
	movq	(%r14), %rcx
	movq	8(%r14), %rax
	leaq	1(%rax), %rdx
	movq	%rdx, 8(%r14)
	addl	$-5, %ebx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 4(%rcx,%rax)
	movl	$4, %eax
.LBB107_11:
###SPA## trampoline_fmt_64
	addq	%rax, 8(%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB107_4:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%r14)
	movq	$0, 8(%r14)
	xorl	%eax, %eax
	jmp	.LBB107_5
.LBB107_9:
###SPA## trampoline_fmt_64
	movb	$1, 280(%r14)
	movq	$0, 8(%r14)
	xorl	%eax, %eax
	jmp	.LBB107_10
.Lfunc_end107:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE, .Lfunc_end107-_ZN2js3jit11X86Encoding13BaseAssembler5jmp_iENS1_6JmpDstE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE,"axG",@progbits,_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE,comdat
	.hidden	_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE # -- Begin function _ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE
	.weak	_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE,@function
_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE: # @_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %r13d
	movq	%rdi, %rbx
	movzwl	(%rdx), %ebp
	movl	%ebp, %eax
	andb	$15, %al
	cmpb	$4, %al
	je	.LBB108_13
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %al
	je	.LBB108_8
###SPA### trampoline_fmt_64
# %bb.2:
	testb	%al, %al
	jne	.LBB108_19
###SPA### trampoline_fmt_64
# %bb.3:
	movzwl	%bp, %r14d
	shrl	$4, %r14d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB108_7
###SPA### trampoline_fmt_64
# %bb.4:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB108_6
###SPA### trampoline_fmt_64
# %bb.5:
	movq	744(%rbx), %rax
.LBB108_7:
###SPA## trampoline_fmt_64
	shrb	$5, %bpl
	andb	$4, %bpl
	movl	%r13d, %ecx
	shrb	$3, %cl
	orb	%bpl, %cl
	movq	736(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$59, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r13b
	shlb	$3, %r14b
	orb	%r13b, %r14b
	orb	$-64, %r14b
	movb	%r14b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	jmp	.LBB108_18
.LBB108_8:
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r14
	movl	4(%rdx), %r15d
	shrl	$4, %ebp
	andb	$31, %bpl
	movzbl	%r13b, %r12d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB108_12
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB108_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	744(%rbx), %rax
.LBB108_12:
###SPA## trampoline_fmt_64
	shrb	%r13b
	andb	$52, %r13b
	movzbl	%bpl, %edx
	shrb	$3, %bpl
	orb	%r13b, %bpl
	movq	736(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$57, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movq	%r14, %rdi
	movl	%r15d, %esi
	movl	%r12d, %ecx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB108_13:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movl	4(%rdx), %ebp
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB108_17
###SPA### trampoline_fmt_64
# %bb.14:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB108_16
###SPA### trampoline_fmt_64
# %bb.15:
	movq	744(%rbx), %rax
.LBB108_17:
###SPA## trampoline_fmt_64
	movl	%r13d, %ecx
	shrb	%cl
	orb	$72, %cl
	movq	736(%rbx), %rdx
	andb	$124, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$57, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	shlb	$3, %r13b
	andb	$56, %r13b
	orb	$4, %r13b
	movb	%r13b, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$37, 1(%rax,%rcx)
	movq	736(%rbx), %rsi
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	%ebp, %eax
	movb	%al, 1(%rsi,%rcx)
	movb	%ah, 2(%rsi,%rcx)
	movl	%ebp, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 4(%rsi,%rcx)
	addq	$4, 744(%rbx)
.LBB108_18:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB108_6:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB108_7
.LBB108_11:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB108_12
.LBB108_16:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB108_17
.LBB108_19:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1039, 0                # imm = 0x40F
	callq	abort@PLT
.Lfunc_end108:
	.size	_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE, .Lfunc_end108-_ZN2js3jit9Assembler4cmpqENS0_8RegisterERKNS0_7OperandE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE,"axG",@progbits,_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE # -- Begin function _ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE
	.weak	_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE,@function
_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE: # @_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %r15d
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movzwl	(%rdx), %ebp
	movl	%ebp, %eax
	andb	$15, %al
	cmpb	$3, %al
	je	.LBB109_14
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %al
	je	.LBB109_8
###SPA### trampoline_fmt_64
# %bb.2:
	testb	%al, %al
	jne	.LBB109_20
###SPA### trampoline_fmt_64
# %bb.3:
	movl	%ebp, %r12d
	shrl	$4, %r12d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB109_7
###SPA### trampoline_fmt_64
# %bb.4:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB109_6
###SPA### trampoline_fmt_64
# %bb.5:
	movq	744(%rbx), %rax
.LBB109_7:
###SPA## trampoline_fmt_64
	movl	%r15d, %ecx
	shrb	%cl
	andb	$52, %cl
	shrl	$7, %ebp
	andb	$3, %bpl
	orb	%cl, %bpl
	movq	736(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$15, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	addb	$64, %r14b
	movb	%r14b, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r12b
	shlb	$3, %r15b
	orb	%r12b, %r15b
	orb	$-64, %r15b
	movb	%r15b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB109_8:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r12
	movl	4(%rdx), %esi
	shrl	$4, %ebp
	andb	$31, %bpl
	movzbl	%r15b, %r13d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB109_13
###SPA### trampoline_fmt_64
# %bb.9:
	movl	%esi, 8(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%r12, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB109_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	744(%rbx), %rax
.LBB109_12:
###SPA## trampoline_fmt_64
	movl	8(%rsp), %esi           # 4-byte Reload
.LBB109_13:
###SPA## trampoline_fmt_64
	shrb	%r15b
	andb	$52, %r15b
	movl	%ebp, %ecx
	shrb	$3, %cl
	orb	%r15b, %cl
	movq	736(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$15, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	addb	$64, %r14b
	movb	%r14b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movzbl	%bpl, %edx
	movq	%r12, %rdi
	movl	%r13d, %ecx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB109_14:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %rdi
	movl	4(%rdx), %esi
	movl	%ebp, %r13d
	shrl	$4, %r13d
	andb	$31, %r13b
	movb	2(%rdx), %r12b
	shrl	$9, %ebp
	andl	$7, %ebp
	movzbl	%r15b, %r15d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB109_19
###SPA### trampoline_fmt_64
# %bb.15:
	movl	%esi, 20(%rsp)          # 4-byte Spill
	movl	$16, %esi
	movq	%rdi, 8(%rsp)           # 8-byte Spill
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB109_17
###SPA### trampoline_fmt_64
# %bb.16:
	movq	744(%rbx), %rax
.LBB109_18:
###SPA## trampoline_fmt_64
	movq	8(%rsp), %rdi           # 8-byte Reload
	movl	20(%rsp), %esi          # 4-byte Reload
.LBB109_19:
###SPA## trampoline_fmt_64
	movl	%r15d, %ecx
	shrb	%cl
	andb	$52, %cl
	movl	%r12d, %edx
	shrb	$2, %dl
	andb	$54, %dl
	orb	%cl, %dl
	movl	%r13d, %ecx
	shrb	$3, %cl
	orb	%dl, %cl
	movq	736(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$15, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	addb	$64, %r14b
	movb	%r14b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movzbl	%r13b, %edx
	movzbl	%r12b, %ecx
	movl	%ebp, %r8d
	movl	%r15d, %r9d
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB109_6:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB109_7
.LBB109_11:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB109_12
.LBB109_17:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB109_18
.LBB109_20:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$501, 0                 # imm = 0x1F5
	callq	abort@PLT
.Lfunc_end109:
	.size	_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE, .Lfunc_end109-_ZN2js3jit9Assembler7cmovCCqENS0_18AssemblerX86Shared9ConditionERKNS0_7OperandENS0_8RegisterE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssemblerD2Ev,"axG",@progbits,_ZN2js3jit14MacroAssemblerD2Ev,comdat
	.hidden	_ZN2js3jit14MacroAssemblerD2Ev # -- Begin function _ZN2js3jit14MacroAssemblerD2Ev
	.weak	_ZN2js3jit14MacroAssemblerD2Ev
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssemblerD2Ev,@function
_ZN2js3jit14MacroAssemblerD2Ev:         # @_ZN2js3jit14MacroAssemblerD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$32, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	2184(%rdi), %rdi
	cmpq	$8, %rdi
	je	.LBB110_2
###SPA### trampoline_fmt_64
# %bb.1:
	callq	free@PLT
.LBB110_2:
###SPA## trampoline_fmt_64
	movq	2160(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB110_4
###SPA### trampoline_fmt_64
# %bb.3:
	callq	free@PLT
.LBB110_4:
###SPA## trampoline_fmt_64
	movq	2136(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB110_6
###SPA### trampoline_fmt_64
# %bb.5:
	callq	free@PLT
.LBB110_6:
###SPA## trampoline_fmt_64
	movq	1320(%rbx), %rdi
	leaq	1344(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB110_8
###SPA### trampoline_fmt_64
# %bb.7:
	callq	free@PLT
.LBB110_8:
###SPA## trampoline_fmt_64
	cmpb	$0, 1304(%rbx)
	je	.LBB110_12
###SPA### trampoline_fmt_64
# %bb.9:
	movq	1288(%rbx), %rax
	movq	1296(%rbx), %rcx
	movq	%rcx, 32(%rax)
	movq	1240(%rbx), %rdi
	movups	1248(%rbx), %xmm0
	movups	1264(%rbx), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	callq	_ZN2js9LifoAlloc7releaseENS0_4MarkE
	movq	1240(%rbx), %rdi
	cmpq	$0, 48(%rdi)
	jne	.LBB110_12
###SPA### trampoline_fmt_64
# %bb.10:
	cmpq	$52428801, 72(%rdi)     # imm = 0x3200001
	jb	.LBB110_12
###SPA### trampoline_fmt_64
# %bb.11:
	callq	_ZN2js9LifoAlloc7freeAllEv
.LBB110_12:
###SPA## trampoline_fmt_64
	cmpb	$0, 1232(%rbx)
	je	.LBB110_14
###SPA### trampoline_fmt_64
# %bb.13:
	leaq	1184(%rbx), %rdi
	callq	_ZN2js3jit10JitContextD1Ev
.LBB110_14:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	addq	$32, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit23MacroAssemblerX86SharedD2Ev # TAILCALL
.Lfunc_end110:
	.size	_ZN2js3jit14MacroAssemblerD2Ev, .Lfunc_end110-_ZN2js3jit14MacroAssemblerD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit23MacroAssemblerX86SharedD2Ev,"axG",@progbits,_ZN2js3jit23MacroAssemblerX86SharedD2Ev,comdat
	.hidden	_ZN2js3jit23MacroAssemblerX86SharedD2Ev # -- Begin function _ZN2js3jit23MacroAssemblerX86SharedD2Ev
	.weak	_ZN2js3jit23MacroAssemblerX86SharedD2Ev
	.p2align	4, 0x90
	.type	_ZN2js3jit23MacroAssemblerX86SharedD2Ev,@function
_ZN2js3jit23MacroAssemblerX86SharedD2Ev: # @_ZN2js3jit23MacroAssemblerX86SharedD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	1168(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB111_2
###SPA### trampoline_fmt_64
# %bb.1:
	callq	free@PLT
.LBB111_2:
###SPA## trampoline_fmt_64
	movq	1136(%r14), %rbx
	movq	1144(%r14), %rax
	testq	%rax, %rax
	jle	.LBB111_8
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	(%rax,%rax,2), %r15
	shlq	$4, %r15
	addq	%rbx, %r15
	.p2align	4, 0x90
.LBB111_4:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB111_6
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB111_4 Depth=1
	callq	free@PLT
.LBB111_6:                              #   in Loop: Header=BB111_4 Depth=1
###SPA## trampoline_fmt_64
	addq	$48, %rbx
	cmpq	%r15, %rbx
	jb	.LBB111_4
###SPA### trampoline_fmt_64
# %bb.7:
	movq	1136(%r14), %rbx
.LBB111_8:
###SPA## trampoline_fmt_64
	cmpq	$48, %rbx
	je	.LBB111_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB111_10:
###SPA## trampoline_fmt_64
	movq	1120(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB111_12
###SPA### trampoline_fmt_64
# %bb.11:
	callq	free@PLT
.LBB111_12:
###SPA## trampoline_fmt_64
	movq	1088(%r14), %rbx
	movq	1096(%r14), %r15
	testq	%r15, %r15
	jle	.LBB111_18
###SPA### trampoline_fmt_64
# %bb.13:
	shlq	$5, %r15
	addq	%rbx, %r15
	.p2align	4, 0x90
.LBB111_14:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB111_16
###SPA### trampoline_fmt_64
# %bb.15:                               #   in Loop: Header=BB111_14 Depth=1
	callq	free@PLT
.LBB111_16:                             #   in Loop: Header=BB111_14 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbx
	cmpq	%r15, %rbx
	jb	.LBB111_14
###SPA### trampoline_fmt_64
# %bb.17:
	movq	1088(%r14), %rbx
.LBB111_18:
###SPA## trampoline_fmt_64
	cmpq	$32, %rbx
	je	.LBB111_20
###SPA### trampoline_fmt_64
# %bb.19:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB111_20:
###SPA## trampoline_fmt_64
	movq	1072(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB111_22
###SPA### trampoline_fmt_64
# %bb.21:
	callq	free@PLT
.LBB111_22:
###SPA## trampoline_fmt_64
	movq	1040(%r14), %rbx
	movq	1048(%r14), %r15
	testq	%r15, %r15
	jle	.LBB111_28
###SPA### trampoline_fmt_64
# %bb.23:
	shlq	$5, %r15
	addq	%rbx, %r15
	.p2align	4, 0x90
.LBB111_24:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB111_26
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB111_24 Depth=1
	callq	free@PLT
.LBB111_26:                             #   in Loop: Header=BB111_24 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbx
	cmpq	%r15, %rbx
	jb	.LBB111_24
###SPA### trampoline_fmt_64
# %bb.27:
	movq	1040(%r14), %rbx
.LBB111_28:
###SPA## trampoline_fmt_64
	cmpq	$32, %rbx
	je	.LBB111_30
###SPA### trampoline_fmt_64
# %bb.29:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB111_30:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit18AssemblerX86SharedD2Ev # TAILCALL
.Lfunc_end111:
	.size	_ZN2js3jit23MacroAssemblerX86SharedD2Ev, .Lfunc_end111-_ZN2js3jit23MacroAssemblerX86SharedD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86SharedD2Ev,"axG",@progbits,_ZN2js3jit18AssemblerX86SharedD2Ev,comdat
	.hidden	_ZN2js3jit18AssemblerX86SharedD2Ev # -- Begin function _ZN2js3jit18AssemblerX86SharedD2Ev
	.weak	_ZN2js3jit18AssemblerX86SharedD2Ev
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86SharedD2Ev,@function
_ZN2js3jit18AssemblerX86SharedD2Ev:     # @_ZN2js3jit18AssemblerX86SharedD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	736(%rdi), %rdi
	leaq	760(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB112_2
###SPA### trampoline_fmt_64
# %bb.1:
	callq	free@PLT
.LBB112_2:
###SPA## trampoline_fmt_64
	movq	672(%rbx), %rdi
	leaq	696(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB112_4
###SPA### trampoline_fmt_64
# %bb.3:
	callq	free@PLT
.LBB112_4:
###SPA## trampoline_fmt_64
	movq	608(%rbx), %rdi
	leaq	632(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB112_6
###SPA### trampoline_fmt_64
# %bb.5:
	callq	free@PLT
.LBB112_6:
###SPA## trampoline_fmt_64
	movq	392(%rbx), %rdi
	leaq	416(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB112_8
###SPA### trampoline_fmt_64
# %bb.7:
	callq	free@PLT
.LBB112_8:
###SPA## trampoline_fmt_64
	movq	360(%rbx), %rdi
	cmpq	$16, %rdi
	je	.LBB112_10
###SPA### trampoline_fmt_64
# %bb.9:
	callq	free@PLT
.LBB112_10:
###SPA## trampoline_fmt_64
	movq	336(%rbx), %rdi
	cmpq	$16, %rdi
	je	.LBB112_12
###SPA### trampoline_fmt_64
# %bb.11:
	callq	free@PLT
.LBB112_12:
###SPA## trampoline_fmt_64
	leaq	48(%rbx), %rdi
	callq	_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev
	movq	24(%rbx), %rdi
	cmpq	$4, %rdi
	je	.LBB112_14
###SPA### trampoline_fmt_64
# %bb.13:
	callq	free@PLT
.LBB112_14:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB112_15
###SPA### trampoline_fmt_64
# %bb.16:
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB112_15:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end112:
	.size	_ZN2js3jit18AssemblerX86SharedD2Ev, .Lfunc_end112-_ZN2js3jit18AssemblerX86SharedD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev,"axG",@progbits,_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev,comdat
	.hidden	_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev # -- Begin function _ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev
	.weak	_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev
	.p2align	4, 0x90
	.type	_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev,@function
_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev: # @_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	264(%rdi), %rdi
	cmpq	$8, %rdi
	je	.LBB113_2
###SPA### trampoline_fmt_64
# %bb.1:
	callq	free@PLT
.LBB113_2:
###SPA## trampoline_fmt_64
	movq	240(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_4
###SPA### trampoline_fmt_64
# %bb.3:
	callq	free@PLT
.LBB113_4:
###SPA## trampoline_fmt_64
	movq	216(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_6
###SPA### trampoline_fmt_64
# %bb.5:
	callq	free@PLT
.LBB113_6:
###SPA## trampoline_fmt_64
	movq	192(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_8
###SPA### trampoline_fmt_64
# %bb.7:
	callq	free@PLT
.LBB113_8:
###SPA## trampoline_fmt_64
	movq	168(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_10
###SPA### trampoline_fmt_64
# %bb.9:
	callq	free@PLT
.LBB113_10:
###SPA## trampoline_fmt_64
	movq	144(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_12
###SPA### trampoline_fmt_64
# %bb.11:
	callq	free@PLT
.LBB113_12:
###SPA## trampoline_fmt_64
	movq	120(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_14
###SPA### trampoline_fmt_64
# %bb.13:
	callq	free@PLT
.LBB113_14:
###SPA## trampoline_fmt_64
	movq	96(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_16
###SPA### trampoline_fmt_64
# %bb.15:
	callq	free@PLT
.LBB113_16:
###SPA## trampoline_fmt_64
	movq	72(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_18
###SPA### trampoline_fmt_64
# %bb.17:
	callq	free@PLT
.LBB113_18:
###SPA## trampoline_fmt_64
	movq	48(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_20
###SPA### trampoline_fmt_64
# %bb.19:
	callq	free@PLT
.LBB113_20:
###SPA## trampoline_fmt_64
	movq	24(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_22
###SPA### trampoline_fmt_64
# %bb.21:
	callq	free@PLT
.LBB113_22:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$8, %rdi
	je	.LBB113_23
###SPA### trampoline_fmt_64
# %bb.24:
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB113_23:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end113:
	.size	_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev, .Lfunc_end113-_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js6detail9BumpChunkD2Ev,"axG",@progbits,_ZN2js6detail9BumpChunkD2Ev,comdat
	.hidden	_ZN2js6detail9BumpChunkD2Ev # -- Begin function _ZN2js6detail9BumpChunkD2Ev
	.weak	_ZN2js6detail9BumpChunkD2Ev
	.p2align	4, 0x90
	.type	_ZN2js6detail9BumpChunkD2Ev,@function
_ZN2js6detail9BumpChunkD2Ev:            # @_ZN2js6detail9BumpChunkD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	leaq	24(%rdi), %rax
	movq	%rax, 8(%rdi)
	movq	(%rdi), %rbx
	movq	$0, (%rdi)
	testq	%rbx, %rbx
	je	.LBB114_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rbx, %rdi
	callq	_ZN2js6detail9BumpChunkD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB114_1:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end114:
	.size	_ZN2js6detail9BumpChunkD2Ev, .Lfunc_end114-_ZN2js6detail9BumpChunkD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE # -- Begin function _ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	.weak	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE,@function
_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE: # @_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movzwl	(%rsi), %r14d
	movl	%r14d, %eax
	andb	$15, %al
	cmpb	$4, %al
	ja	.LBB115_24
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movl	%r14d, %eax
	andl	$15, %eax
	leaq	.LJTI115_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB115_2:
###SPA## trampoline_fmt_64
	shrl	$4, %r14d
	movl	%r14d, %r15d
	andb	$31, %r15b
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB115_5
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB115_4
###SPA### trampoline_fmt_64
.LBB115_5:
###SPA## trampoline_fmt_64
	movl	%r15d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	ja	.LBB115_7
###SPA### trampoline_fmt_64
.LBB115_6:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	jmp	.LBB115_8
.LBB115_23:
###SPA## trampoline_fmt_64
	addq	$736, %rbx              # imm = 0x2E0
	movslq	4(%rsi), %rsi
	movzbl	%bpl, %edx
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE # TAILCALL
.LBB115_9:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rsi), %r12d
	shrl	$4, %r14d
	andb	$31, %r14b
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB115_12
###SPA### trampoline_fmt_64
# %bb.10:
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB115_11
###SPA### trampoline_fmt_64
.LBB115_12:
###SPA## trampoline_fmt_64
	movzbl	%bpl, %ecx
	movl	%r14d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	ja	.LBB115_14
###SPA### trampoline_fmt_64
# %bb.13:
	movq	744(%rbx), %rax
	jmp	.LBB115_15
.LBB115_16:
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %rdi
	movl	4(%rsi), %r15d
	movl	%r14d, %r13d
	shrl	$4, %r13d
	andb	$31, %r13b
	movb	2(%rsi), %sil
	shrl	$9, %r14d
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB115_19
###SPA### trampoline_fmt_64
# %bb.17:
	movb	%sil, 7(%rsp)           # 1-byte Spill
	movl	$16, %esi
	movq	%rdi, %r12
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	movb	7(%rsp), %sil           # 1-byte Reload
	movq	%r12, %rdi
	testb	%al, %al
	je	.LBB115_18
###SPA### trampoline_fmt_64
.LBB115_19:
###SPA## trampoline_fmt_64
	andl	$7, %r14d
	movzbl	%bpl, %r9d
	movl	%r13d, %eax
	orb	%bpl, %al
	orb	%sil, %al
	cmpb	$7, %al
	ja	.LBB115_21
###SPA### trampoline_fmt_64
# %bb.20:
	movq	744(%rbx), %rax
	jmp	.LBB115_22
.LBB115_14:
###SPA## trampoline_fmt_64
	shrb	%bpl
	andb	$60, %bpl
	movl	%r14d, %eax
	shrb	$3, %al
	orb	%bpl, %al
	movq	736(%rbx), %rdx
	movq	744(%rbx), %rsi
	orb	$64, %al
	movb	%al, (%rdx,%rsi)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB115_15:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rdx
	movb	$-117, (%rdx,%rax)
	addq	$1, 744(%rbx)
	movzbl	%r14b, %edx
	movq	%r15, %rdi
	movl	%r12d, %esi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB115_21:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	shrb	%bpl
	andb	$60, %bpl
	movl	%esi, %eax
	shrb	$2, %al
	andb	$62, %al
	orb	%bpl, %al
	movl	%r13d, %ecx
	shrb	$3, %cl
	orb	%al, %cl
	movq	736(%rbx), %rax
	movq	744(%rbx), %rdx
	orb	$64, %cl
	movb	%cl, (%rax,%rdx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB115_22:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-117, (%rcx,%rax)
	addq	$1, 744(%rbx)
	movzbl	%r13b, %edx
	movzbl	%sil, %ecx
	movl	%r15d, %esi
	movl	%r14d, %r8d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB115_4:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	movl	%r15d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	jbe	.LBB115_6
###SPA### trampoline_fmt_64
.LBB115_7:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	%al
	andb	$60, %al
	shrb	$3, %r15b
	orb	%al, %r15b
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	orb	$64, %r15b
	movb	%r15b, (%rax,%rcx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB115_8:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-117, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r14b
	shlb	$3, %bpl
	orb	%r14b, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB115_11:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	jmp	.LBB115_12
.LBB115_18:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	jmp	.LBB115_19
.LBB115_24:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$510, 0                 # imm = 0x1FE
	callq	abort@PLT
.Lfunc_end115:
	.size	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE, .Lfunc_end115-_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	.cfi_endproc
	.section	.rodata._ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE,"aG",@progbits,_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE,comdat
	.p2align	2
.LJTI115_0:
	.long	.LBB115_2-.LJTI115_0
	.long	.LBB115_9-.LJTI115_0
	.long	.LBB115_24-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_23-.LJTI115_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	testb	%bpl, %bpl
	jne	.LBB116_7
###SPA### trampoline_fmt_64
# %bb.1:
	movslq	%esi, %rax
	cmpq	%rsi, %rax
	jne	.LBB116_2
###SPA### trampoline_fmt_64
.LBB116_7:
###SPA## trampoline_fmt_64
	movq	%rsi, %r15
	movq	8(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB116_10
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB116_9
###SPA### trampoline_fmt_64
.LBB116_10:
###SPA## trampoline_fmt_64
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	ja	.LBB116_12
###SPA### trampoline_fmt_64
.LBB116_11:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	jmp	.LBB116_13
.LBB116_2:
###SPA## trampoline_fmt_64
	movq	%rsi, %rbp
	leaq	8(%rbx), %r14
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB116_6
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB116_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	(%r14), %rax
.LBB116_6:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-95, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rbp, %rbx
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$16, %rdx
	movb	%dl, 3(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$24, %rdx
	movb	%dl, 4(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$32, %rdx
	movb	%dl, 5(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$40, %rdx
	movb	%dl, 6(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$48, %rdx
	movb	%dl, 7(%rax,%rcx)
	shrq	$56, %rbx
	movb	%bl, 8(%rax,%rcx)
	movl	$8, %eax
	jmp	.LBB116_14
.LBB116_9:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	jbe	.LBB116_11
###SPA### trampoline_fmt_64
.LBB116_12:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	%al
	orb	$64, %al
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	andb	$124, %al
	movb	%al, (%rcx,%rdx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
.LBB116_13:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-117, (%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	shlb	$3, %bpl
	andb	$56, %bpl
	orb	$4, %bpl
	movb	%bpl, 1(%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movb	$37, 1(%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movq	%r15, %rbx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 4(%rcx,%rax)
	movl	$4, %eax
.LBB116_14:
###SPA## trampoline_fmt_64
	addq	%rax, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB116_5:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB116_6
.Lfunc_end116:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE, .Lfunc_end116-_ZN2js3jit11X86Encoding13BaseAssembler7movl_mrEPKvNS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE # -- Begin function _ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	.weak	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE,@function
_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE: # @_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movzwl	(%rdx), %ebx
	movl	%ebx, %eax
	andb	$15, %al
	cmpb	$4, %al
	ja	.LBB117_24
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%esi, %ebp
	movq	%rdi, %r14
	movl	%ebx, %eax
	andl	$15, %eax
	leaq	.LJTI117_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB117_2:
###SPA## trampoline_fmt_64
	shrl	$4, %ebx
	movl	%ebx, %r15d
	andb	$31, %r15b
	movq	744(%r14), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r14)
	jae	.LBB117_5
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	736(%r14), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB117_4
###SPA### trampoline_fmt_64
.LBB117_5:
###SPA## trampoline_fmt_64
	movl	%r15d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	ja	.LBB117_7
###SPA### trampoline_fmt_64
.LBB117_6:
###SPA## trampoline_fmt_64
	movq	744(%r14), %rax
	jmp	.LBB117_8
.LBB117_23:
###SPA## trampoline_fmt_64
	addq	$736, %r14              # imm = 0x2E0
	movslq	4(%rdx), %rdx
	movzbl	%bpl, %esi
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv # TAILCALL
.LBB117_9:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%r14), %r15
	movl	4(%rdx), %r12d
	shrl	$4, %ebx
	andb	$31, %bl
	movq	744(%r14), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r14)
	jae	.LBB117_12
###SPA### trampoline_fmt_64
# %bb.10:
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB117_11
###SPA### trampoline_fmt_64
.LBB117_12:
###SPA## trampoline_fmt_64
	movzbl	%bpl, %ecx
	movl	%ebx, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	ja	.LBB117_14
###SPA### trampoline_fmt_64
# %bb.13:
	movq	744(%r14), %rax
	jmp	.LBB117_15
.LBB117_16:
###SPA## trampoline_fmt_64
	leaq	736(%r14), %rdi
	movl	4(%rdx), %esi
	movl	%ebx, %r13d
	shrl	$4, %r13d
	andb	$31, %r13b
	movb	2(%rdx), %r12b
	shrl	$9, %ebx
	movq	744(%r14), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r14)
	jae	.LBB117_19
###SPA### trampoline_fmt_64
# %bb.17:
	movl	%esi, 4(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%rdi, %r15
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	movq	%r15, %rdi
	movl	4(%rsp), %esi           # 4-byte Reload
	testb	%al, %al
	je	.LBB117_18
###SPA### trampoline_fmt_64
.LBB117_19:
###SPA## trampoline_fmt_64
	andl	$7, %ebx
	movzbl	%bpl, %r9d
	movl	%r13d, %eax
	orb	%bpl, %al
	orb	%r12b, %al
	cmpb	$7, %al
	ja	.LBB117_21
###SPA### trampoline_fmt_64
# %bb.20:
	movq	744(%r14), %rax
	jmp	.LBB117_22
.LBB117_14:
###SPA## trampoline_fmt_64
	shrb	%bpl
	andb	$60, %bpl
	movl	%ebx, %eax
	shrb	$3, %al
	orb	%bpl, %al
	movq	736(%r14), %rdx
	movq	744(%r14), %rsi
	orb	$64, %al
	movb	%al, (%rdx,%rsi)
	movq	744(%r14), %rax
	addq	$1, %rax
	movq	%rax, 744(%r14)
.LBB117_15:
###SPA## trampoline_fmt_64
	movq	736(%r14), %rdx
	movb	$-119, (%rdx,%rax)
	addq	$1, 744(%r14)
	movzbl	%bl, %edx
	movq	%r15, %rdi
	movl	%r12d, %esi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB117_21:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	shrb	%bpl
	andb	$60, %bpl
	movl	%r12d, %eax
	shrb	$2, %al
	andb	$62, %al
	orb	%bpl, %al
	movl	%r13d, %ecx
	shrb	$3, %cl
	orb	%al, %cl
	movq	736(%r14), %rax
	movq	744(%r14), %rdx
	orb	$64, %cl
	movb	%cl, (%rax,%rdx)
	movq	744(%r14), %rax
	addq	$1, %rax
	movq	%rax, 744(%r14)
.LBB117_22:
###SPA## trampoline_fmt_64
	movq	736(%r14), %rcx
	movb	$-119, (%rcx,%rax)
	addq	$1, 744(%r14)
	movzbl	%r13b, %edx
	movzbl	%r12b, %ecx
	movl	%ebx, %r8d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB117_4:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r14)
	movq	$0, 744(%r14)
	movl	%r15d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	jbe	.LBB117_6
###SPA### trampoline_fmt_64
.LBB117_7:
###SPA## trampoline_fmt_64
	shrb	%r15b
	andb	$12, %r15b
	movl	%ebp, %eax
	shrb	$3, %al
	orb	%r15b, %al
	movq	736(%r14), %rcx
	movq	744(%r14), %rdx
	orb	$64, %al
	movb	%al, (%rcx,%rdx)
	movq	744(%r14), %rax
	addq	$1, %rax
	movq	%rax, 744(%r14)
.LBB117_8:
###SPA## trampoline_fmt_64
	movq	736(%r14), %rcx
	movb	$-117, (%rcx,%rax)
	movq	736(%r14), %rax
	movq	744(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r14)
	andb	$7, %bpl
	shlb	$3, %bl
	orb	%bpl, %bl
	orb	$-64, %bl
	movb	%bl, 1(%rax,%rcx)
	addq	$1, 744(%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB117_11:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r14)
	movq	$0, 744(%r14)
	jmp	.LBB117_12
.LBB117_18:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r14)
	movq	$0, 744(%r14)
	jmp	.LBB117_19
.LBB117_24:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$529, 0                 # imm = 0x211
	callq	abort@PLT
.Lfunc_end117:
	.size	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE, .Lfunc_end117-_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	.cfi_endproc
	.section	.rodata._ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE,"aG",@progbits,_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE,comdat
	.p2align	2
.LJTI117_0:
	.long	.LBB117_2-.LJTI117_0
	.long	.LBB117_9-.LJTI117_0
	.long	.LBB117_24-.LJTI117_0
	.long	.LBB117_16-.LJTI117_0
	.long	.LBB117_23-.LJTI117_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv,@function
_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv: # @_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	testb	%bpl, %bpl
	jne	.LBB118_7
###SPA### trampoline_fmt_64
# %bb.1:
	movslq	%edx, %rax
	cmpq	%rdx, %rax
	jne	.LBB118_2
###SPA### trampoline_fmt_64
.LBB118_7:
###SPA## trampoline_fmt_64
	movq	%rdx, %r15
	movq	8(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB118_10
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB118_9
###SPA### trampoline_fmt_64
.LBB118_10:
###SPA## trampoline_fmt_64
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	ja	.LBB118_12
###SPA### trampoline_fmt_64
.LBB118_11:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	jmp	.LBB118_13
.LBB118_2:
###SPA## trampoline_fmt_64
	movq	%rdx, %rbp
	leaq	8(%rbx), %r14
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB118_6
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB118_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	(%r14), %rax
.LBB118_6:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-93, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rbp, %rbx
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$16, %rdx
	movb	%dl, 3(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$24, %rdx
	movb	%dl, 4(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$32, %rdx
	movb	%dl, 5(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$40, %rdx
	movb	%dl, 6(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$48, %rdx
	movb	%dl, 7(%rax,%rcx)
	shrq	$56, %rbx
	movb	%bl, 8(%rax,%rcx)
	movl	$8, %eax
	jmp	.LBB118_14
.LBB118_9:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	jbe	.LBB118_11
###SPA### trampoline_fmt_64
.LBB118_12:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	%al
	orb	$64, %al
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	andb	$124, %al
	movb	%al, (%rcx,%rdx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
.LBB118_13:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-119, (%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	shlb	$3, %bpl
	andb	$56, %bpl
	orb	$4, %bpl
	movb	%bpl, 1(%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movb	$37, 1(%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movq	%r15, %rbx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 4(%rcx,%rax)
	movl	$4, %eax
.LBB118_14:
###SPA## trampoline_fmt_64
	addq	%rax, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB118_5:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB118_6
.Lfunc_end118:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv, .Lfunc_end118-_ZN2js3jit11X86Encoding13BaseAssembler7movl_rmENS1_10RegisterIDEPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB119_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	je	.LBB119_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	.LBB119_17
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB119_44
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r15
	je	.LBB119_21
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB119_22
.LBB119_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB119_25
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB119_25
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB119_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB119_12
.LBB119_10:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB119_13
.LBB119_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB119_12:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	shrq	$3, %r15
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	jne	.LBB119_23
###SPA### trampoline_fmt_64
.LBB119_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB119_43
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	jle	.LBB119_24
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r14), %rcx
	leaq	(%rcx,%rdx,8), %r10
	leaq	8(%rcx), %rsi
	cmpq	%rsi, %r10
	movq	%rsi, %r9
	cmovaq	%r10, %r9
	movq	%rcx, %rdi
	notq	%rdi
	addq	%rdi, %r9
	shrq	$3, %r9
	addq	$1, %r9
	cmpq	$4, %r9
	jb	.LBB119_16
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	%rsi, %r10
	cmovaq	%r10, %rsi
	leaq	(%rsi,%rdi), %rdx
	andq	$-8, %rdx
	addq	%rcx, %rdx
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jae	.LBB119_26
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	(%rsi,%rdi), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	cmpq	%rcx, %rdx
	jbe	.LBB119_26
###SPA### trampoline_fmt_64
.LBB119_16:
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
.LBB119_35:
###SPA## trampoline_fmt_64
	leaq	8(%rcx), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rcx, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %r9d
	shrl	$3, %r9d
	addl	$1, %r9d
	andq	$7, %r9
	je	.LBB119_39
###SPA### trampoline_fmt_64
# %bb.36:
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB119_37:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rbx,8), %rdi
	movq	%rdi, (%rsi,%rbx,8)
	addq	$-8, %rdx
	addq	$1, %rbx
	cmpq	%rbx, %r9
	jne	.LBB119_37
###SPA### trampoline_fmt_64
# %bb.38:
	subq	%rdx, %rcx
	subq	%rdx, %rsi
.LBB119_39:
###SPA## trampoline_fmt_64
	cmpq	$56, %r8
	jb	.LBB119_24
###SPA### trampoline_fmt_64
# %bb.40:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB119_41:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rdi), %rdx
	movq	%rdx, (%rsi,%rdi)
	movq	8(%rcx,%rdi), %rdx
	movq	%rdx, 8(%rsi,%rdi)
	movq	16(%rcx,%rdi), %rdx
	movq	%rdx, 16(%rsi,%rdi)
	movq	24(%rcx,%rdi), %rdx
	movq	%rdx, 24(%rsi,%rdi)
	movq	32(%rcx,%rdi), %rdx
	movq	%rdx, 32(%rsi,%rdi)
	movq	40(%rcx,%rdi), %rdx
	movq	%rdx, 40(%rsi,%rdi)
	movq	48(%rcx,%rdi), %rdx
	movq	%rdx, 48(%rsi,%rdi)
	movq	56(%rcx,%rdi), %rdx
	movq	%rdx, 56(%rsi,%rdi)
	leaq	(%rcx,%rdi), %rdx
	addq	$64, %rdx
	addq	$64, %rdi
	cmpq	%r10, %rdx
	jb	.LBB119_41
###SPA### trampoline_fmt_64
	jmp	.LBB119_24
.LBB119_17:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB119_23
.LBB119_21:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB119_22:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r15
	movq	%r15, %rax
	shrq	$61, %rax
	jne	.LBB119_45
###SPA### trampoline_fmt_64
.LBB119_23:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	je	.LBB119_42
###SPA### trampoline_fmt_64
.LBB119_24:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB119_25:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB119_26:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-4, %r8
	leaq	-4(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$2, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$12, %rsi
	jae	.LBB119_28
###SPA### trampoline_fmt_64
# %bb.27:
	xorl	%ebx, %ebx
	testq	%rdi, %rdi
	jne	.LBB119_31
###SPA### trampoline_fmt_64
	jmp	.LBB119_33
.LBB119_28:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	addq	%rdi, %rsi
	addq	$-1, %rsi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB119_29:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rbx,8), %xmm0
	movups	16(%rcx,%rbx,8), %xmm1
	movups	%xmm0, (%rax,%rbx,8)
	movups	%xmm1, 16(%rax,%rbx,8)
	movups	32(%rcx,%rbx,8), %xmm0
	movups	48(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 32(%rax,%rbx,8)
	movups	%xmm1, 48(%rax,%rbx,8)
	movups	64(%rcx,%rbx,8), %xmm0
	movups	80(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 64(%rax,%rbx,8)
	movups	%xmm1, 80(%rax,%rbx,8)
	movups	96(%rcx,%rbx,8), %xmm0
	movups	112(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 96(%rax,%rbx,8)
	movups	%xmm1, 112(%rax,%rbx,8)
	addq	$16, %rbx
	addq	$4, %rsi
	jne	.LBB119_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rdi, %rdi
	je	.LBB119_33
###SPA### trampoline_fmt_64
.LBB119_31:
###SPA## trampoline_fmt_64
	leaq	16(,%rbx,8), %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB119_32:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB119_32
###SPA### trampoline_fmt_64
.LBB119_33:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB119_24
###SPA### trampoline_fmt_64
# %bb.34:
	leaq	(%rcx,%r8,8), %rcx
	leaq	(%rax,%r8,8), %rsi
	jmp	.LBB119_35
.LBB119_42:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB119_43:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB119_44:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB119_45:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end119:
	.size	_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end119-_ZN7mozilla6VectorIN2js4wasm8CallSiteELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r12
	cmpq	$1, %rsi
	jne	.LBB120_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$4, (%r12)
	je	.LBB120_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r12), %rax
	testq	%rax, %rax
	je	.LBB120_17
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rax, %rcx
	shrq	$60, %rcx
	jne	.LBB120_48
###SPA### trampoline_fmt_64
# %bb.4:
	leaq	(%rax,%rax), %r15
	leaq	(,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB120_21
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB120_22
.LBB120_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r12), %rsi
	jb	.LBB120_47
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$61, %rcx
	jne	.LBB120_47
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$2, %rsi
	testq	%rsi, %rsi
	je	.LBB120_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB120_12
.LBB120_10:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB120_13
.LBB120_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB120_12:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	shrq	$2, %r15
	cmpq	$4, (%r12)
	jne	.LBB120_23
###SPA### trampoline_fmt_64
.LBB120_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,4), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB120_48
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%r12), %rdx
	testq	%rdx, %rdx
	jle	.LBB120_45
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r12), %rcx
	leaq	(%rcx,%rdx,4), %r10
	leaq	4(%rcx), %rdx
	cmpq	%rdx, %r10
	movq	%rdx, %r9
	cmovaq	%r10, %r9
	movq	%rcx, %rsi
	notq	%rsi
	addq	%rsi, %r9
	shrq	$2, %r9
	addq	$1, %r9
	cmpq	$8, %r9
	jb	.LBB120_16
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	leaq	(%rdx,%rsi), %rdi
	andq	$-4, %rdi
	addq	%rcx, %rdi
	addq	$4, %rdi
	cmpq	%rdi, %rax
	jae	.LBB120_29
###SPA### trampoline_fmt_64
# %bb.19:
	addq	%rsi, %rdx
	addq	$4, %rdx
	andq	$-4, %rdx
	addq	%rax, %rdx
	cmpq	%rcx, %rdx
	jbe	.LBB120_29
###SPA### trampoline_fmt_64
.LBB120_16:
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
.LBB120_38:
###SPA## trampoline_fmt_64
	leaq	4(%rcx), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rcx, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %r9d
	shrl	$2, %r9d
	addl	$1, %r9d
	andq	$7, %r9
	je	.LBB120_42
###SPA### trampoline_fmt_64
# %bb.39:
	xorl	%ebx, %ebx
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB120_40:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	(%rcx,%rbx,4), %edx
	movl	%edx, (%rsi,%rbx,4)
	addq	$-4, %rdi
	addq	$1, %rbx
	cmpq	%rbx, %r9
	jne	.LBB120_40
###SPA### trampoline_fmt_64
# %bb.41:
	subq	%rdi, %rcx
	subq	%rdi, %rsi
.LBB120_42:
###SPA## trampoline_fmt_64
	cmpq	$28, %r8
	jb	.LBB120_45
###SPA### trampoline_fmt_64
# %bb.43:
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB120_44:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	(%rcx,%rdx), %edi
	movl	%edi, (%rsi,%rdx)
	movl	4(%rcx,%rdx), %edi
	movl	%edi, 4(%rsi,%rdx)
	movl	8(%rcx,%rdx), %edi
	movl	%edi, 8(%rsi,%rdx)
	movl	12(%rcx,%rdx), %edi
	movl	%edi, 12(%rsi,%rdx)
	movl	16(%rcx,%rdx), %edi
	movl	%edi, 16(%rsi,%rdx)
	movl	20(%rcx,%rdx), %edi
	movl	%edi, 20(%rsi,%rdx)
	movl	24(%rcx,%rdx), %edi
	movl	%edi, 24(%rsi,%rdx)
	movl	28(%rcx,%rdx), %edi
	movl	%edi, 28(%rsi,%rdx)
	leaq	(%rcx,%rdx), %rdi
	addq	$32, %rdi
	addq	$32, %rdx
	cmpq	%r10, %rdi
	jb	.LBB120_44
###SPA### trampoline_fmt_64
	jmp	.LBB120_45
.LBB120_17:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB120_23
.LBB120_21:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB120_22:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$3, %rdx
	seta	%al
	orq	%rax, %r15
	movq	%r15, %rax
	shrq	$62, %rax
	jne	.LBB120_48
###SPA### trampoline_fmt_64
.LBB120_23:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,4), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB120_48
###SPA### trampoline_fmt_64
# %bb.24:
	movq	%rax, %r14
	movq	(%r12), %rax
	cmpq	$0, 8(%r12)
	jle	.LBB120_27
###SPA### trampoline_fmt_64
# %bb.25:
	movq	%r14, %rcx
	.p2align	4, 0x90
.LBB120_26:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	(%rax), %edx
	movl	%edx, (%rcx)
	addq	$4, %rcx
	addq	$4, %rax
	movq	(%r12), %rdi
	movq	8(%r12), %rdx
	leaq	(%rdi,%rdx,4), %rdx
	cmpq	%rdx, %rax
	jb	.LBB120_26
###SPA### trampoline_fmt_64
	jmp	.LBB120_28
.LBB120_27:
###SPA## trampoline_fmt_64
	movq	%rax, %rdi
.LBB120_28:
###SPA## trampoline_fmt_64
	callq	free@PLT
	movq	%r14, (%r12)
	jmp	.LBB120_46
.LBB120_29:
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-8, %r8
	leaq	-8(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$3, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$24, %rsi
	jae	.LBB120_31
###SPA### trampoline_fmt_64
# %bb.30:
	xorl	%esi, %esi
	testq	%rdi, %rdi
	jne	.LBB120_34
###SPA### trampoline_fmt_64
	jmp	.LBB120_36
.LBB120_31:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	leaq	(%rdi,%rsi), %rdx
	addq	$-1, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB120_32:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rsi,4), %xmm0
	movups	16(%rcx,%rsi,4), %xmm1
	movups	%xmm0, (%rax,%rsi,4)
	movups	%xmm1, 16(%rax,%rsi,4)
	movups	32(%rcx,%rsi,4), %xmm0
	movups	48(%rcx,%rsi,4), %xmm1
	movups	%xmm0, 32(%rax,%rsi,4)
	movups	%xmm1, 48(%rax,%rsi,4)
	movups	64(%rcx,%rsi,4), %xmm0
	movups	80(%rcx,%rsi,4), %xmm1
	movups	%xmm0, 64(%rax,%rsi,4)
	movups	%xmm1, 80(%rax,%rsi,4)
	movups	96(%rcx,%rsi,4), %xmm0
	movups	112(%rcx,%rsi,4), %xmm1
	movups	%xmm0, 96(%rax,%rsi,4)
	movups	%xmm1, 112(%rax,%rsi,4)
	addq	$32, %rsi
	addq	$4, %rdx
	jne	.LBB120_32
###SPA### trampoline_fmt_64
# %bb.33:
	testq	%rdi, %rdi
	je	.LBB120_36
###SPA### trampoline_fmt_64
.LBB120_34:
###SPA## trampoline_fmt_64
	leaq	16(,%rsi,4), %rdx
	negq	%rdi
	.p2align	4, 0x90
.LBB120_35:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rdx), %xmm0
	movups	(%rcx,%rdx), %xmm1
	movups	%xmm0, -16(%rax,%rdx)
	movups	%xmm1, (%rax,%rdx)
	addq	$32, %rdx
	addq	$1, %rdi
	jne	.LBB120_35
###SPA### trampoline_fmt_64
.LBB120_36:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	jne	.LBB120_37
###SPA### trampoline_fmt_64
.LBB120_45:
###SPA## trampoline_fmt_64
	movq	%rax, (%r12)
.LBB120_46:
###SPA## trampoline_fmt_64
	movq	%r15, 16(%r12)
	movb	$1, %al
.LBB120_47:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB120_37:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	leaq	(%rcx,%r8,4), %rcx
	leaq	(%rax,%r8,4), %rsi
	jmp	.LBB120_38
.LBB120_48:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB120_47
.Lfunc_end120:
	.size	_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end120-_ZN7mozilla6VectorIN2js4wasm14CallSiteTargetELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj
	.type	_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj,@function
_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj: # @_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	addl	$16, %esi
	movw	$65, (%rsp)
	movb	$16, 2(%rsp)
	movl	%esi, 4(%rsp)
	movq	%rsp, %rsi
	movl	$10, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB121_4
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB121_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	744(%rbx), %rax
.LBB121_4:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$73, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-125, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-30, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-4, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movw	$161, (%rsp)
	movb	$16, 2(%rsp)
	movl	$72, 4(%rsp)
	movq	%rsp, %rsi
	movl	$14, %edx
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB121_6
###SPA### trampoline_fmt_64
# %bb.5:
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB121_3:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB121_4
.LBB121_6:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end121:
	.size	_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj, .Lfunc_end121-_ZL23GenerateJitEntryLoadTlsRN2js3jit14MacroAssemblerEj
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE,"axG",@progbits,_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE,comdat
	.hidden	_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE # -- Begin function _ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE
	.weak	_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE
	.p2align	4, 0x90
	.type	_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE,@function
_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE: # @_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r15
	movl	%edx, %ebp
	movl	%esi, %eax
	movq	%rdi, %rbx
	leaq	736(%rdi), %r14
	andl	$31, %eax
	movzbl	%bpl, %r9d
	leaq	.L.str.212(%rip), %rsi
	movl	$3, %edx
	movl	$44, %ecx
	movq	%r14, %rdi
	movl	%eax, %r8d
	callq	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB122_4
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB122_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	744(%rbx), %rax
.LBB122_4:
###SPA## trampoline_fmt_64
	movl	%ebp, %r12d
	shrb	$3, %r12b
	movq	736(%rbx), %rcx
	movl	%r12d, %edx
	orb	$72, %dl
	movb	%dl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-125, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	%ebp, %edx
	orb	$-8, %dl
	movb	%dl, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$1, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	xorl	%esi, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB122_7
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB122_6
###SPA### trampoline_fmt_64
.LBB122_7:
###SPA## trampoline_fmt_64
	cmpb	$7, %bpl
	ja	.LBB122_9
###SPA### trampoline_fmt_64
.LBB122_8:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	jmp	.LBB122_10
.LBB122_3:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB122_4
.LBB122_6:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	cmpb	$7, %bpl
	jbe	.LBB122_8
###SPA### trampoline_fmt_64
.LBB122_9:
###SPA## trampoline_fmt_64
	movl	%r12d, %eax
	shlb	$2, %al
	movq	736(%rbx), %rcx
	movq	744(%rbx), %rdx
	orb	%r12b, %al
	orb	$64, %al
	movb	%al, (%rcx,%rdx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB122_10:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-117, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	%ebp, %edx
	andb	$7, %dl
	shlb	$3, %bpl
	orb	%dl, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end122:
	.size	_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE, .Lfunc_end122-_ZN2js3jit14MacroAssembler34branchTruncateDoubleMaybeModUint32ENS0_13FloatRegisterENS0_8RegisterEPNS0_5LabelE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_,"axG",@progbits,_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_,comdat
	.hidden	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_ # -- Begin function _ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	.weak	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	.p2align	4, 0x90
	.type	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_,@function
_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_: # @_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movq	(%r15), %rsi
	movq	%rsi, %r13
	shrq	$48, %r13
	cmpq	$65531, %r13            # imm = 0xFFFB
	jb	.LBB123_17
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %rbp
	movabsq	$-1407374883553281, %rsi # imm = 0xFFFAFFFFFFFFFFFF
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB123_6
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rsi, %rbx
	leaq	736(%r12), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB123_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	744(%r12), %rax
.LBB123_5:
###SPA## trampoline_fmt_64
	movq	%rbx, %rsi
.LBB123_6:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$73, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-69, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movq	%rbp, %rbx
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$16, %rdx
	movb	%dl, 3(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$24, %rdx
	movb	%dl, 4(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$32, %rdx
	movb	%dl, 5(%rax,%rcx)
	movq	%rbp, %rdx
	shrq	$40, %rdx
	movb	%dl, 6(%rax,%rcx)
	movb	%r13b, 7(%rax,%rcx)
	shrq	$56, %rbx
	movb	%bl, 8(%rax,%rcx)
	movq	744(%r12), %rbx
	addq	$8, %rbx
	movq	%rbx, 744(%r12)
	movq	(%r15), %rax
	cmpq	%rsi, %rax
	jbe	.LBB123_24
###SPA### trampoline_fmt_64
# %bb.7:
	movabsq	$140737487306752, %rcx  # imm = 0x7FFFFFF00000
	leaq	1048575(%rcx), %rdx
	testq	%rdx, %rax
	je	.LBB123_10
###SPA### trampoline_fmt_64
# %bb.8:
	andq	%rcx, %rax
	orq	$1048552, %rax          # imm = 0xFFFE8
	cmpl	$1, (%rax)
	jne	.LBB123_10
###SPA### trampoline_fmt_64
# %bb.9:
	movb	$1, 385(%r12)
.LBB123_10:
###SPA## trampoline_fmt_64
	leaq	672(%r12), %r15
	.p2align	4, 0x90
.LBB123_11:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	xorl	%r13d, %r13d
	cmpl	$127, %ebx
	seta	%bpl
	movq	680(%r12), %rax
	cmpq	688(%r12), %rax
	jne	.LBB123_15
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB123_11 Depth=1
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB123_13
###SPA### trampoline_fmt_64
# %bb.14:                               #   in Loop: Header=BB123_11 Depth=1
	movq	680(%r12), %rax
.LBB123_15:                             #   in Loop: Header=BB123_11 Depth=1
###SPA## trampoline_fmt_64
	movb	%bpl, %r13b
	leal	(%r13,%rbx,2), %ecx
	movq	672(%r12), %rdx
	movb	%cl, (%rdx,%rax)
	addq	$1, 680(%r12)
	movb	$1, %al
	andb	%al, 728(%r12)
	shrl	$7, %ebx
	jne	.LBB123_11
###SPA### trampoline_fmt_64
	jmp	.LBB123_24
.LBB123_13:                             #   in Loop: Header=BB123_11 Depth=1
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	andb	%al, 728(%r12)
	shrl	$7, %ebx
	jne	.LBB123_11
###SPA### trampoline_fmt_64
	jmp	.LBB123_24
.LBB123_17:
###SPA## trampoline_fmt_64
	testq	%rsi, %rsi
	je	.LBB123_18
###SPA### trampoline_fmt_64
# %bb.23:
	movl	$11, %edx
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	jmp	.LBB123_24
.LBB123_18:
###SPA## trampoline_fmt_64
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB123_22
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	736(%r12), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB123_21
###SPA### trampoline_fmt_64
# %bb.20:
	movq	744(%r12), %rax
.LBB123_22:
###SPA## trampoline_fmt_64
	movq	736(%r12), %rcx
	movb	$69, (%rcx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$51, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-37, 1(%rax,%rcx)
	addq	$1, 744(%r12)
.LBB123_24:
###SPA## trampoline_fmt_64
	movzbl	(%r14), %eax
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	4(%r14), %eax
	movl	%eax, 12(%rsp)
	leaq	8(%rsp), %rdx
	movl	$11, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB123_26
###SPA### trampoline_fmt_64
# %bb.25:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB123_4:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB123_5
.LBB123_21:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB123_22
.LBB123_26:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end123:
	.size	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_, .Lfunc_end123-_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE,"axG",@progbits,_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE,comdat
	.hidden	_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE # -- Begin function _ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE
	.weak	_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE,@function
_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE: # @_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movzbl	(%rsi), %eax
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 8(%rsp)
	movb	$16, 10(%rsp)
	movl	4(%rsi), %eax
	movl	%eax, 12(%rsp)
	leaq	8(%rsp), %rsi
	movl	$12, %ecx
	callq	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	movq	%rbx, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movabsq	$-1125899906842625, %rsi # imm = 0xFFFBFFFFFFFFFFFF
	movl	$11, %edx
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB124_4
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB124_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	744(%rbx), %rax
.LBB124_4:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	%cl
	orb	$73, %cl
	movq	736(%rbx), %rdx
	andb	$125, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$35, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	shlb	$3, %bpl
	orb	$-61, %bpl
	movb	%bpl, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB124_6
###SPA### trampoline_fmt_64
# %bb.5:
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB124_3:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB124_4
.LBB124_6:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end124:
	.size	_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE, .Lfunc_end124-_ZN2js3jit17MacroAssemblerX6417unboxObjectOrNullINS0_7AddressEEEvRKT_NS0_8RegisterE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE
	.type	_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE,@function
_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE: # @_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %r12
	movq	%r8, %rbp
	movl	%ecx, %r15d
	movl	%edx, %r14d
	movl	%esi, %r13d
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 48(%rsp)
	movabsq	$140735340838911, %rax  # imm = 0x7FFF7FFF7FFF
	movw	$1991, 32(%rsp)         # imm = 0x7C7
	movq	%rax, 40(%rsp)
	leaq	32(%rsp), %rsi
	callq	_ZN2js3jit14MacroAssembler14PushRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	addl	1316(%rbx), %r13d
	negl	%r13d
	andl	$15, %r13d
	movq	%rbx, %rdi
	movl	%r13d, %esi
	callq	_ZN2js3jit14MacroAssembler15subFromStackPtrENS0_5Imm32E
	addl	%r13d, 1316(%rbx)
	testq	%rbp, %rbp
	je	.LBB125_3
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$0, 184(%rbp)
	je	.LBB125_2
###SPA### trampoline_fmt_64
.LBB125_3:
###SPA## trampoline_fmt_64
	movl	$35, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	testb	%r15b, %r15b
	je	.LBB125_5
###SPA### trampoline_fmt_64
.LBB125_6:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rcx
	leaq	16(%rcx), %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB125_10
###SPA### trampoline_fmt_64
# %bb.7:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB125_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	744(%rbx), %rcx
.LBB125_10:
###SPA## trampoline_fmt_64
	leaq	752(%rbx), %rdi
	movl	%r15d, %edx
	shrb	%dl
	orb	$72, %dl
	movq	736(%rbx), %rsi
	andb	$124, %dl
	movb	%dl, (%rsi,%rcx)
	movq	736(%rbx), %rcx
	movq	744(%rbx), %rdx
	leaq	1(%rdx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$-117, 1(%rcx,%rdx)
	movq	736(%rbx), %rcx
	movq	744(%rbx), %rdx
	leaq	1(%rdx), %rsi
	movq	%rsi, 744(%rbx)
	movl	%r15d, %eax
	shlb	$3, %al
	orb	$-64, %al
	movb	%al, 1(%rcx,%rdx)
	movq	744(%rbx), %rcx
	addq	$1, %rcx
	movq	%rcx, 744(%rbx)
	addq	$16, %rcx
	cmpq	%rcx, (%rdi)
	jb	.LBB125_12
###SPA### trampoline_fmt_64
	jmp	.LBB125_14
.LBB125_2:
###SPA## trampoline_fmt_64
	movl	$35, %edi
	callq	_ZN2js4wasm21SymbolicAddressTargetENS0_15SymbolicAddressE
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN2js3jit14MacroAssembler4callENS0_6ImmPtrE
	testb	%r15b, %r15b
	jne	.LBB125_6
###SPA### trampoline_fmt_64
.LBB125_5:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rcx
	leaq	752(%rbx), %rdi
	addq	$16, %rcx
	cmpq	%rcx, (%rdi)
	jae	.LBB125_14
###SPA### trampoline_fmt_64
.LBB125_12:
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB125_13
###SPA### trampoline_fmt_64
.LBB125_14:
###SPA## trampoline_fmt_64
	cmpb	$7, %r15b
	ja	.LBB125_16
###SPA### trampoline_fmt_64
.LBB125_15:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	jmp	.LBB125_17
.LBB125_13:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	cmpb	$7, %r15b
	jbe	.LBB125_15
###SPA### trampoline_fmt_64
.LBB125_16:
###SPA## trampoline_fmt_64
	movl	%r15d, %eax
	shrb	$3, %al
	movl	%eax, %ecx
	shlb	$2, %cl
	movq	736(%rbx), %rdx
	movq	744(%rbx), %rsi
	orb	%al, %cl
	orb	$64, %cl
	movb	%cl, (%rdx,%rsi)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB125_17:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-123, (%rcx,%rax)
	movq	736(%rbx), %rsi
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	%r15d, %edx
	andb	$7, %dl
	movl	%r15d, %eax
	shlb	$3, %al
	orb	%dl, %al
	orb	$-64, %al
	movb	%al, 1(%rsi,%rcx)
	addq	$1, 744(%rbx)
	movl	$4, %esi
	movq	%rbx, %rdi
	movq	%r12, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movq	%rbx, %rdi
	movl	%r13d, %esi
	callq	_ZN2js3jit14MacroAssembler9freeStackEj
	movl	$1, %eax
	movl	%r15d, %ecx
	shll	%cl, %eax
	movw	$1991, 16(%rsp)         # imm = 0x7C7
	movabsq	$140735340838911, %rcx  # imm = 0x7FFF7FFF7FFF
	movq	%rcx, 24(%rsp)
	movw	%ax, (%rsp)
	movq	$0, 8(%rsp)
	leaq	16(%rsp), %rsi
	movq	%rsp, %rdx
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler19PopRegsInMaskIgnoreENS0_7LiveSetINS0_11RegisterSetEEES4_
	movzbl	%r15b, %edx
	movzbl	%r14b, %ecx
	movl	$9, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit14MacroAssembler18initializeBigInt64ENS_6Scalar4TypeENS0_8RegisterENS0_10Register64E
	movq	%fs:40, %rax
	cmpq	48(%rsp), %rax
	jne	.LBB125_19
###SPA### trampoline_fmt_64
# %bb.18:
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB125_9:
	.cfi_def_cfa_offset 112
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%ecx, %ecx
	jmp	.LBB125_10
.LBB125_19:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end125:
	.size	_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE, .Lfunc_end125-_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE,"axG",@progbits,_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE # -- Begin function _ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	.weak	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE,@function
_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE: # @_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movb	(%rsi), %r15b
	leaq	736(%rdi), %r14
	movq	744(%rdi), %rax
	cmpb	%bpl, %r15b
	jne	.LBB126_2
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	752(%rbx), %rsi
	leaq	16(%rax), %rcx
	cmpq	%rcx, (%rsi)
	jb	.LBB126_8
###SPA### trampoline_fmt_64
	jmp	.LBB126_11
.LBB126_2:
###SPA## trampoline_fmt_64
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB126_6
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB126_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	744(%rbx), %rax
.LBB126_6:
###SPA## trampoline_fmt_64
	leaq	752(%rbx), %rsi
	movl	%ebp, %edx
	shrb	%dl
	andb	$52, %dl
	movl	%r15d, %ecx
	shrb	$3, %cl
	orb	%dl, %cl
	movq	736(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-117, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r15b
	movl	%ebp, %edx
	shlb	$3, %dl
	orb	%r15b, %dl
	orb	$-64, %dl
	movb	%dl, 1(%rax,%rcx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
	leaq	16(%rax), %rcx
	cmpq	%rcx, (%rsi)
	jae	.LBB126_11
###SPA### trampoline_fmt_64
.LBB126_8:
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB126_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	744(%rbx), %rax
.LBB126_11:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	736(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-63, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %bpl
	orb	$-24, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$47, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB126_10:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB126_11
.LBB126_5:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB126_6
.Lfunc_end126:
	.size	_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE, .Lfunc_end126-_ZN2js3jit17MacroAssemblerX648splitTagERKNS0_12ValueOperandENS0_8RegisterE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	testl	%esi, %esi
	je	.LBB127_1
###SPA### trampoline_fmt_64
# %bb.8:
	movsbl	%sil, %eax
	movl	%esi, %r15d
	cmpl	%esi, %eax
	jne	.LBB127_16
###SPA### trampoline_fmt_64
# %bb.9:
	movq	8(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB127_12
###SPA### trampoline_fmt_64
# %bb.10:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB127_11
###SPA### trampoline_fmt_64
.LBB127_12:
###SPA## trampoline_fmt_64
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	ja	.LBB127_14
###SPA### trampoline_fmt_64
.LBB127_13:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	jmp	.LBB127_15
.LBB127_1:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB127_4
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB127_3
###SPA### trampoline_fmt_64
.LBB127_4:
###SPA## trampoline_fmt_64
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	ja	.LBB127_6
###SPA### trampoline_fmt_64
.LBB127_5:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	jmp	.LBB127_7
.LBB127_16:
###SPA## trampoline_fmt_64
	leaq	8(%rbx), %r14
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	leaq	16(%rax), %rdx
	testb	%bpl, %bpl
	je	.LBB127_17
###SPA### trampoline_fmt_64
# %bb.22:
	cmpq	%rdx, %rcx
	jae	.LBB127_25
###SPA### trampoline_fmt_64
# %bb.23:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB127_24
###SPA### trampoline_fmt_64
.LBB127_25:
###SPA## trampoline_fmt_64
	cmpb	$7, %bpl
	ja	.LBB127_27
###SPA### trampoline_fmt_64
.LBB127_26:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	jmp	.LBB127_28
.LBB127_17:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB127_21
###SPA### trampoline_fmt_64
# %bb.18:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB127_20
###SPA### trampoline_fmt_64
# %bb.19:
	movq	(%r14), %rax
.LBB127_21:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$61, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movl	%r15d, %ebx
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movl	%r15d, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rcx)
	shrl	$24, %ebx
	movb	%bl, 4(%rax,%rcx)
	jmp	.LBB127_29
.LBB127_3:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	jbe	.LBB127_5
###SPA### trampoline_fmt_64
.LBB127_6:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	$3, %al
	movl	%eax, %ecx
	shlb	$2, %cl
	movq	(%rbx), %rdx
	movq	8(%rbx), %rsi
	orb	%al, %cl
	orb	$64, %cl
	movb	%cl, (%rdx,%rsi)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
.LBB127_7:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-123, (%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movl	%ebp, %ecx
	andb	$7, %cl
	movq	(%rbx), %rdx
	shlb	$3, %bpl
	orb	%cl, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rdx,%rax)
	movl	$1, %eax
	jmp	.LBB127_30
.LBB127_11:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	leaq	8(%rbx), %r14
	cmpb	$7, %bpl
	jbe	.LBB127_13
###SPA### trampoline_fmt_64
.LBB127_14:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	$3, %al
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	orb	$64, %al
	movb	%al, (%rcx,%rdx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
.LBB127_15:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-125, (%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	orb	$-8, %bpl
	movb	%bpl, 1(%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movb	%r15b, 1(%rcx,%rax)
	movl	$1, %eax
	jmp	.LBB127_30
.LBB127_24:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	cmpb	$7, %bpl
	jbe	.LBB127_26
###SPA### trampoline_fmt_64
.LBB127_27:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	$3, %al
	movq	(%rbx), %rcx
	movq	8(%rbx), %rdx
	orb	$64, %al
	movb	%al, (%rcx,%rdx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
.LBB127_28:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-127, (%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	orb	$-8, %bpl
	movb	%bpl, 1(%rcx,%rax)
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movl	%r15d, %ebx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%r15d, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 4(%rcx,%rax)
.LBB127_29:
###SPA## trampoline_fmt_64
	movl	$4, %eax
.LBB127_30:
###SPA## trampoline_fmt_64
	addq	%rax, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB127_20:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB127_21
.Lfunc_end127:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE, .Lfunc_end127-_ZN2js3jit11X86Encoding13BaseAssembler7cmpl_irEiNS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_ # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_: # @_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r8d, %r12d
	movl	%ecx, %r15d
	movq	%rdi, %rbx
	movl	80(%rsp), %ebp
	cmpl	%ebp, %r9d
	je	.LBB128_2
###SPA### trampoline_fmt_64
# %bb.1:
	movb	288(%rbx), %al
	testb	%al, %al
	je	.LBB128_2
###SPA### trampoline_fmt_64
# %bb.7:
	movl	%r9d, %r13d
	movl	%r15d, 12(%rsp)         # 4-byte Spill
	movl	%ebp, %r14d
	shrl	$3, %r14d
	movl	%r12d, %eax
	shrb	$3, %al
	movzbl	%al, %r15d
	leaq	8(%rbx), %r8
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB128_12
###SPA### trampoline_fmt_64
# %bb.8:
	movl	%edx, 8(%rsp)           # 4-byte Spill
	movq	%r8, 16(%rsp)           # 8-byte Spill
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB128_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	16(%rsp), %r8           # 8-byte Reload
	movq	(%r8), %rax
.LBB128_11:
###SPA## trampoline_fmt_64
	movl	8(%rsp), %edx           # 4-byte Reload
.LBB128_12:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-60, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 8(%rbx)
	shll	$7, %r14d
	shll	$5, %r15d
	orl	%r14d, %r15d
	xorb	$-31, %r15b
	movb	%r15b, 1(%rax,%rcx)
	movq	(%rbx), %r9
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rax
	leal	(,%r13,8), %esi
	xorl	%edi, %edi
	cmpl	$16, %r13d
	movq	%rax, 8(%rbx)
	cmovnel	%esi, %edi
	orl	%edx, %edi
	orb	$-128, %dil
	xorb	$120, %dil
	movb	%dil, 1(%r9,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movl	12(%rsp), %edx          # 4-byte Reload
	movb	%dl, 1(%rax,%rcx)
	jmp	.LBB128_13
.LBB128_2:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movl	%edx, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	leaq	8(%rbx), %r8
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB128_6
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%r8, %r14
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB128_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%r14, %r8
	movq	(%r14), %rax
.LBB128_6:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrl	$3, %ecx
	movl	%r12d, %edx
	shrb	$3, %dl
	movq	(%rbx), %rsi
	shlb	$2, %cl
	orb	%dl, %cl
	orb	$72, %cl
	movb	%cl, (%rsi,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$15, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	%r15b, 1(%rax,%rcx)
.LBB128_13:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	andb	$7, %r12b
	movq	(%rbx), %rcx
	shlb	$3, %bpl
	orb	%r12b, %bpl
	orb	$-64, %bpl
	movb	%bpl, (%rcx,%rax)
	addq	$1, (%r8)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB128_10:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	movq	16(%rsp), %r8           # 8-byte Reload
	jmp	.LBB128_11
.LBB128_5:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	movq	%r14, %r8
	jmp	.LBB128_6
.Lfunc_end128:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_, .Lfunc_end128-_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpInt64SimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDES8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, %r12d
	movl	%r8d, %r14d
	movl	%ecx, %r15d
	movl	%edx, %ebx
	movq	%rdi, %rbp
	cmpb	$0, 288(%rdi)
	je	.LBB129_1
###SPA### trampoline_fmt_64
# %bb.6:
	movl	%r15d, 4(%rsp)          # 4-byte Spill
	movl	%r12d, %eax
	shrb	$3, %al
	movzbl	%al, %r15d
	leaq	8(%rbp), %r13
	movq	8(%rbp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbp)
	jae	.LBB129_10
###SPA### trampoline_fmt_64
# %bb.7:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB129_9
###SPA### trampoline_fmt_64
# %bb.8:
	movq	(%r13), %rax
.LBB129_10:
###SPA## trampoline_fmt_64
	movq	(%rbp), %rcx
	movb	$-60, (%rcx,%rax)
	movq	(%rbp), %rax
	movq	8(%rbp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbp)
	shll	$7, %r15d
	movl	%r14d, %edx
	andl	$56, %edx
	shll	$2, %edx
	orl	%r15d, %edx
	xorb	$-31, %dl
	movb	%dl, 1(%rax,%rcx)
	movq	(%rbp), %rax
	movq	8(%rbp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbp)
	orb	$-128, %bl
	xorb	$120, %bl
	movb	%bl, 1(%rax,%rcx)
	movq	(%rbp), %rax
	movq	8(%rbp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbp)
	movl	4(%rsp), %edx           # 4-byte Reload
	movb	%dl, 1(%rax,%rcx)
	jmp	.LBB129_11
.LBB129_1:
###SPA## trampoline_fmt_64
	movq	%rbp, %rdi
	movl	%ebx, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	leaq	8(%rbp), %r13
	movq	8(%rbp), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbp)
	jae	.LBB129_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB129_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r13), %rax
.LBB129_5:
###SPA## trampoline_fmt_64
	movl	%r12d, %ecx
	shrb	%cl
	andb	$52, %cl
	movl	%r14d, %edx
	shrb	$3, %dl
	orb	%cl, %dl
	movq	(%rbp), %rcx
	orb	$72, %dl
	movb	%dl, (%rcx,%rax)
	movq	(%rbp), %rax
	movq	8(%rbp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbp)
	movb	$15, 1(%rax,%rcx)
	movq	(%rbp), %rax
	movq	8(%rbp), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbp)
	movb	%r15b, 1(%rax,%rcx)
.LBB129_11:
###SPA## trampoline_fmt_64
	movq	8(%rbp), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbp)
	andb	$7, %r14b
	movq	(%rbp), %rcx
	shlb	$3, %r12b
	orb	%r14b, %r12b
	orb	$-64, %r12b
	movb	%r12b, (%rcx,%rax)
	addq	$1, (%r13)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB129_9:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbp)
	movq	$0, 8(%rbp)
	xorl	%eax, %eax
	jmp	.LBB129_10
.LBB129_4:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbp)
	movq	$0, 8(%rbp)
	xorl	%eax, %eax
	jmp	.LBB129_5
.Lfunc_end129:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE, .Lfunc_end129-_ZN2js3jit11X86Encoding16BaseAssemblerX6418twoByteOpSimdInt64EPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDENS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	cmpq	$1, %rsi
	jne	.LBB130_13
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r15), %rsi
	leaq	24(%r15), %rax
	cmpq	%rax, %rsi
	je	.LBB130_2
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%r15), %rdx
	testq	%rdx, %rdx
	je	.LBB130_4
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rdx, %rcx
	shrq	$62, %rcx
	jne	.LBB130_8
###SPA### trampoline_fmt_64
# %bb.9:
	addq	%rdx, %rdx
	je	.LBB130_10
###SPA### trampoline_fmt_64
# %bb.11:
	leaq	-1(%rdx), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB130_12
.LBB130_13:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r15), %rsi
	jb	.LBB130_38
###SPA### trampoline_fmt_64
# %bb.14:
	testq	%rsi, %rsi
	js	.LBB130_38
###SPA### trampoline_fmt_64
# %bb.15:
	cmpq	$2, %rsi
	jae	.LBB130_17
###SPA### trampoline_fmt_64
# %bb.16:
	xorl	%ecx, %ecx
	jmp	.LBB130_18
.LBB130_17:
###SPA## trampoline_fmt_64
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
.LBB130_18:
###SPA## trampoline_fmt_64
	movl	$1, %r14d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r14
	movq	(%r15), %rsi
	leaq	24(%r15), %rax
	cmpq	%rax, %rsi
	jne	.LBB130_5
###SPA### trampoline_fmt_64
	jmp	.LBB130_20
.LBB130_2:
###SPA## trampoline_fmt_64
	movl	$64, %r14d
	jmp	.LBB130_20
.LBB130_4:
###SPA## trampoline_fmt_64
	movl	$1, %r14d
	jmp	.LBB130_5
.LBB130_10:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB130_12:
###SPA## trampoline_fmt_64
	movl	$1, %edi
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdi
	xorl	%r14d, %r14d
	cmpq	%rdx, %rdi
	setne	%r14b
	orq	%rdx, %r14
	cmpq	%rax, %rsi
	je	.LBB130_20
###SPA### trampoline_fmt_64
.LBB130_5:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r14, %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	jne	.LBB130_37
###SPA### trampoline_fmt_64
# %bb.6:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB130_20:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r14, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB130_21
###SPA### trampoline_fmt_64
# %bb.22:
	movq	8(%r15), %r9
	testq	%r9, %r9
	jle	.LBB130_37
###SPA### trampoline_fmt_64
# %bb.23:
	movq	(%r15), %rcx
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	$32, %r9
	jb	.LBB130_35
###SPA### trampoline_fmt_64
# %bb.24:
	leaq	(%rcx,%r9), %rdx
	cmpq	%rdx, %rax
	jae	.LBB130_26
###SPA### trampoline_fmt_64
# %bb.25:
	leaq	(%rax,%r9), %rdi
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	%rdi, %rcx
	jb	.LBB130_35
###SPA### trampoline_fmt_64
.LBB130_26:
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$5, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$96, %rsi
	jae	.LBB130_28
###SPA### trampoline_fmt_64
# %bb.27:
	xorl	%esi, %esi
	testq	%rdi, %rdi
	jne	.LBB130_31
###SPA### trampoline_fmt_64
	jmp	.LBB130_33
.LBB130_28:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	leaq	(%rdi,%rsi), %rdx
	addq	$-1, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB130_29:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rsi), %xmm0
	movups	16(%rcx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rcx,%rsi), %xmm0
	movups	48(%rcx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rcx,%rsi), %xmm0
	movups	80(%rcx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rcx,%rsi), %xmm0
	movups	112(%rcx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB130_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rdi, %rdi
	je	.LBB130_33
###SPA### trampoline_fmt_64
.LBB130_31:
###SPA## trampoline_fmt_64
	addq	$16, %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB130_32:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB130_32
###SPA### trampoline_fmt_64
.LBB130_33:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB130_37
###SPA### trampoline_fmt_64
# %bb.34:
	leaq	(%rcx,%r8), %rdx
	movq	%rax, %rsi
	addq	%r8, %rsi
.LBB130_35:
###SPA## trampoline_fmt_64
	subq	%rdx, %r9
	addq	%r9, %rcx
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB130_36:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movzbl	(%rdx,%rdi), %ebx
	movb	%bl, (%rsi,%rdi)
	addq	$1, %rdi
	cmpq	%rdi, %rcx
	jne	.LBB130_36
###SPA### trampoline_fmt_64
.LBB130_37:
###SPA## trampoline_fmt_64
	movq	%rax, (%r15)
	movq	%r14, 16(%r15)
	movb	$1, %al
.LBB130_38:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB130_21:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB130_8:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end130:
	.size	_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end130-_ZN7mozilla6VectorIhLm32EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE # -- Begin function _ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	.weak	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE,@function
_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE: # @_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, 4(%rsp)           # 4-byte Spill
	movzwl	(%rdx), %ebx
	movl	%ebx, %eax
	andb	$15, %al
	cmpb	$4, %al
	ja	.LBB131_31
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdi, %r15
	movl	%ebx, %eax
	andl	$15, %eax
	leaq	.LJTI131_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB131_2:
###SPA## trampoline_fmt_64
	leaq	736(%r15), %r14
	shrl	$4, %ebx
	movl	%ebx, %ebp
	andb	$31, %bpl
	movq	744(%r15), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r15)
	jae	.LBB131_4
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB131_20
###SPA### trampoline_fmt_64
.LBB131_4:
###SPA## trampoline_fmt_64
	addq	$744, %r15              # imm = 0x2E8
	cmpb	$7, %bpl
	ja	.LBB131_21
###SPA### trampoline_fmt_64
.LBB131_5:
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
	jmp	.LBB131_22
.LBB131_6:
###SPA## trampoline_fmt_64
	leaq	736(%r15), %r14
	movl	4(%rdx), %ebx
	leaq	744(%r15), %rbp
	movq	744(%r15), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r15)
	jae	.LBB131_9
###SPA### trampoline_fmt_64
# %bb.7:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB131_23
###SPA### trampoline_fmt_64
# %bb.8:
	movq	(%rbp), %rax
.LBB131_9:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$-57, (%rcx,%rax)
	movq	(%rbp), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbp)
	movq	(%r14), %rcx
	movb	$4, 1(%rcx,%rax)
	movq	(%rbp), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbp)
	movq	(%r14), %rcx
	movb	$37, 1(%rcx,%rax)
	movq	(%rbp), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbp)
	movq	(%r14), %rcx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 4(%rcx,%rax)
	movq	(%rbp), %rax
	addq	$4, %rax
	movq	%rax, (%rbp)
	jmp	.LBB131_29
.LBB131_10:
###SPA## trampoline_fmt_64
	leaq	736(%r15), %r14
	movl	4(%rdx), %ebp
	shrl	$4, %ebx
	andb	$31, %bl
	movq	744(%r15), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r15)
	jae	.LBB131_12
###SPA### trampoline_fmt_64
# %bb.11:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB131_24
###SPA### trampoline_fmt_64
.LBB131_12:
###SPA## trampoline_fmt_64
	addq	$744, %r15              # imm = 0x2E8
	cmpb	$7, %bl
	ja	.LBB131_25
###SPA### trampoline_fmt_64
.LBB131_13:
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
	jmp	.LBB131_26
.LBB131_14:
###SPA## trampoline_fmt_64
	leaq	736(%r15), %r14
	movl	4(%rdx), %esi
	movl	%ebx, %ebp
	shrl	$4, %ebp
	andb	$31, %bpl
	movb	2(%rdx), %r13b
	shrl	$9, %ebx
	movq	744(%r15), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r15)
	jae	.LBB131_16
###SPA### trampoline_fmt_64
# %bb.15:
	movl	%esi, %r12d
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	movl	%r12d, %esi
	testb	%al, %al
	je	.LBB131_30
###SPA### trampoline_fmt_64
.LBB131_16:
###SPA## trampoline_fmt_64
	andl	$7, %ebx
	addq	$744, %r15              # imm = 0x2E8
	movl	%r13d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	ja	.LBB131_18
###SPA### trampoline_fmt_64
# %bb.17:
	movq	(%r15), %rax
	jmp	.LBB131_19
.LBB131_18:
###SPA## trampoline_fmt_64
	movl	%r13d, %eax
	shrb	$2, %al
	andb	$62, %al
	movl	%ebp, %ecx
	shrb	$3, %cl
	orb	%al, %cl
	movq	(%r15), %rax
	movq	(%r14), %rdx
	orb	$64, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, (%r15)
.LBB131_19:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$-57, (%rcx,%rax)
	addq	$1, (%r15)
	movzbl	%bpl, %edx
	movzbl	%r13b, %ecx
	xorl	%r9d, %r9d
	movq	%r14, %rdi
	movl	%ebx, %r8d
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
	jmp	.LBB131_27
.LBB131_20:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r15)
	movq	$0, 744(%r15)
	addq	$744, %r15              # imm = 0x2E8
	cmpb	$7, %bpl
	jbe	.LBB131_5
###SPA### trampoline_fmt_64
.LBB131_21:
###SPA## trampoline_fmt_64
	shrb	$3, %bpl
	movq	(%r15), %rax
	movq	(%r14), %rcx
	orb	$64, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, (%r15)
.LBB131_22:
###SPA## trampoline_fmt_64
	andb	$7, %bl
	orb	$-72, %bl
	movq	(%r14), %rcx
	movb	%bl, (%rcx,%rax)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, (%r15)
	jmp	.LBB131_28
.LBB131_23:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r15)
	movq	$0, 744(%r15)
	xorl	%eax, %eax
	jmp	.LBB131_9
.LBB131_24:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r15)
	movq	$0, 744(%r15)
	addq	$744, %r15              # imm = 0x2E8
	cmpb	$7, %bl
	jbe	.LBB131_13
###SPA### trampoline_fmt_64
.LBB131_25:
###SPA## trampoline_fmt_64
	movl	%ebx, %eax
	shrb	$3, %al
	movq	(%r15), %rcx
	movq	(%r14), %rdx
	orb	$64, %al
	movb	%al, (%rdx,%rcx)
	movq	(%r15), %rax
	addq	$1, %rax
	movq	%rax, (%r15)
.LBB131_26:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$-57, (%rcx,%rax)
	addq	$1, (%r15)
	movzbl	%bl, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rdi
	movl	%ebp, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
.LBB131_27:
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
.LBB131_28:
###SPA## trampoline_fmt_64
	movq	%r15, %rbp
.LBB131_29:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movl	4(%rsp), %ebx           # 4-byte Reload
	movb	%bl, (%rcx,%rax)
	movb	%bh, 1(%rcx,%rax)
	movl	%ebx, %edx
	shrl	$16, %edx
	movb	%dl, 2(%rcx,%rax)
	shrl	$24, %ebx
	movb	%bl, 3(%rcx,%rax)
	addq	$4, (%rbp)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB131_30:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r15)
	movq	$0, 744(%r15)
	jmp	.LBB131_16
.LBB131_31:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$548, 0                 # imm = 0x224
	callq	abort@PLT
.Lfunc_end131:
	.size	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE, .Lfunc_end131-_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	.cfi_endproc
	.section	.rodata._ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE,"aG",@progbits,_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE,comdat
	.p2align	2
.LJTI131_0:
	.long	.LBB131_2-.LJTI131_0
	.long	.LBB131_10-.LJTI131_0
	.long	.LBB131_31-.LJTI131_0
	.long	.LBB131_14-.LJTI131_0
	.long	.LBB131_6-.LJTI131_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_ # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_,@function
_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_: # @_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r8d, %r14d
	movl	%ecx, %r15d
	movq	%rdi, %rbx
	movl	48(%rsp), %ebp
	cmpl	%ebp, %r9d
	je	.LBB132_2
###SPA### trampoline_fmt_64
# %bb.1:
	movb	288(%rbx), %al
	testb	%al, %al
	je	.LBB132_2
###SPA### trampoline_fmt_64
# %bb.9:
	movzbl	%r14b, %ecx
	movq	%rbx, %rdi
	movl	%edx, %esi
	movl	%r15d, %edx
	movl	%r9d, %r8d
	movl	%ebp, %r9d
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter12twoByteOpVexENS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_10RegisterIDENS1_13XMMRegisterIDEi # TAILCALL
.LBB132_2:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	movl	%edx, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter15legacySSEPrefixENS1_14VexOperandTypeE
	movq	8(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 16(%rbx)
	jae	.LBB132_5
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB132_4
###SPA### trampoline_fmt_64
.LBB132_5:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	orl	%r14d, %eax
	testb	$-8, %al
	je	.LBB132_6
###SPA### trampoline_fmt_64
.LBB132_7:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrl	%eax
	andl	$188, %eax
	movl	%r14d, %ecx
	shrl	$3, %ecx
	andl	$31, %ecx
	orl	%eax, %ecx
	movq	(%rbx), %rax
	movq	8(%rbx), %rdx
	orb	$64, %cl
	movb	%cl, (%rax,%rdx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	jmp	.LBB132_8
.LBB132_4:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	movl	%ebp, %eax
	orl	%r14d, %eax
	testb	$-8, %al
	jne	.LBB132_7
###SPA### trampoline_fmt_64
.LBB132_6:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
.LBB132_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	%r15b, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	andb	$7, %r14b
	shlb	$3, %bpl
	orb	%r14b, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	addq	$1, 8(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end132:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_, .Lfunc_end132-_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi,@function
_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi: # @_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
                                        # kill: def $esi killed $esi def $rsi
	addl	$-1, %esi
	cmpl	$14, %esi
	ja	.LBB133_47
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdi, %rbx
	leaq	.LJTI133_0(%rip), %rax
	movslq	(%rax,%rsi,4), %rcx
	addq	%rax, %rcx
	jmpq	*%rcx
.LBB133_2:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_28
###SPA### trampoline_fmt_64
	jmp	.LBB133_3
.LBB133_5:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_8
###SPA### trampoline_fmt_64
# %bb.6:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB133_42
###SPA### trampoline_fmt_64
# %bb.7:
	movq	8(%rbx), %rax
.LBB133_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-112, (%rcx,%rax)
	addq	$1, 8(%rbx)
.LBB133_9:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv
.LBB133_10:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv # TAILCALL
.LBB133_11:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_14
###SPA### trampoline_fmt_64
# %bb.12:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB133_43
###SPA### trampoline_fmt_64
# %bb.13:
	movq	8(%rbx), %rax
.LBB133_14:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$102, (%rcx,%rax)
	addq	$1, 8(%rbx)
	movq	%rbx, %rdi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_34
###SPA### trampoline_fmt_64
	jmp	.LBB133_15
.LBB133_17:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv # TAILCALL
.LBB133_18:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_21
###SPA### trampoline_fmt_64
# %bb.19:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB133_44
###SPA### trampoline_fmt_64
# %bb.20:
	movq	8(%rbx), %rax
.LBB133_21:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$102, (%rcx,%rax)
	addq	$1, 8(%rbx)
	movq	%rbx, %rdi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv # TAILCALL
.LBB133_22:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_25
###SPA### trampoline_fmt_64
# %bb.23:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB133_45
###SPA### trampoline_fmt_64
# %bb.24:
	movq	8(%rbx), %rax
.LBB133_25:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$102, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB133_28
###SPA### trampoline_fmt_64
.LBB133_3:
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB133_4
###SPA### trampoline_fmt_64
# %bb.27:
	movq	8(%rbx), %rax
.LBB133_28:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-112, (%rcx,%rax)
	addq	$1, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB133_29:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv # TAILCALL
.LBB133_30:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv # TAILCALL
.LBB133_31:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_34
###SPA### trampoline_fmt_64
.LBB133_15:
###SPA## trampoline_fmt_64
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB133_16
###SPA### trampoline_fmt_64
# %bb.33:
	movq	8(%rbx), %rax
.LBB133_34:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$102, (%rcx,%rax)
	addq	$1, 8(%rbx)
.LBB133_35:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv # TAILCALL
.LBB133_36:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB133_39
###SPA### trampoline_fmt_64
# %bb.37:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB133_46
###SPA### trampoline_fmt_64
# %bb.38:
	movq	8(%rbx), %rax
.LBB133_39:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$102, (%rcx,%rax)
	addq	$1, 8(%rbx)
.LBB133_40:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv # TAILCALL
.LBB133_41:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv # TAILCALL
.LBB133_4:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB133_28
.LBB133_16:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB133_34
.LBB133_42:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB133_8
.LBB133_43:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB133_14
.LBB133_44:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB133_21
.LBB133_45:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB133_25
.LBB133_46:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB133_39
.LBB133_47:
###SPA## trampoline_fmt_64
	leaq	.L.str.219(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$215, 0
	callq	abort@PLT
.Lfunc_end133:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi, .Lfunc_end133-_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi
	.cfi_endproc
	.section	.rodata._ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi,"aG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler10insert_nopEi,comdat
	.p2align	2
.LJTI133_0:
	.long	.LBB133_2-.LJTI133_0
	.long	.LBB133_22-.LJTI133_0
	.long	.LBB133_29-.LJTI133_0
	.long	.LBB133_30-.LJTI133_0
	.long	.LBB133_35-.LJTI133_0
	.long	.LBB133_31-.LJTI133_0
	.long	.LBB133_10-.LJTI133_0
	.long	.LBB133_40-.LJTI133_0
	.long	.LBB133_36-.LJTI133_0
	.long	.LBB133_17-.LJTI133_0
	.long	.LBB133_41-.LJTI133_0
	.long	.LBB133_11-.LJTI133_0
	.long	.LBB133_18-.LJTI133_0
	.long	.LBB133_9-.LJTI133_0
	.long	.LBB133_5-.LJTI133_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv,@function
_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv: # @_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rdi)
	jae	.LBB134_4
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB134_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rax
.LBB134_4:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB134_8
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB134_7
###SPA### trampoline_fmt_64
# %bb.6:
	movq	8(%rbx), %rax
.LBB134_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$31, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB134_12
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB134_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rbx), %rax
.LBB134_12:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	addq	$1, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB134_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB134_4
.LBB134_7:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB134_8
.LBB134_11:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB134_12
.Lfunc_end134:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv, .Lfunc_end134-_ZN2js3jit11X86Encoding13BaseAssembler9nop_threeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv,@function
_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv: # @_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rdi)
	jae	.LBB135_4
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB135_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rax
.LBB135_4:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB135_8
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB135_7
###SPA### trampoline_fmt_64
# %bb.6:
	movq	8(%rbx), %rax
.LBB135_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$31, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB135_12
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB135_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rbx), %rax
.LBB135_12:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$64, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB135_16
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB135_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%rbx), %rax
.LBB135_16:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	addq	$1, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB135_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB135_4
.LBB135_7:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB135_8
.LBB135_11:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB135_12
.LBB135_15:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB135_16
.Lfunc_end135:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv, .Lfunc_end135-_ZN2js3jit11X86Encoding13BaseAssembler8nop_fourEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv,@function
_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv: # @_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rdi)
	jae	.LBB136_4
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB136_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rax
.LBB136_4:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB136_8
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB136_7
###SPA### trampoline_fmt_64
# %bb.6:
	movq	8(%rbx), %rax
.LBB136_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$31, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB136_12
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB136_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rbx), %rax
.LBB136_12:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$68, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB136_16
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB136_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%rbx), %rax
.LBB136_16:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB136_20
###SPA### trampoline_fmt_64
# %bb.17:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB136_19
###SPA### trampoline_fmt_64
# %bb.18:
	movq	8(%rbx), %rax
.LBB136_20:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	addq	$1, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB136_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB136_4
.LBB136_7:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB136_8
.LBB136_11:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB136_12
.LBB136_15:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB136_16
.LBB136_19:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB136_20
.Lfunc_end136:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv, .Lfunc_end136-_ZN2js3jit11X86Encoding13BaseAssembler8nop_fiveEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv,@function
_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv: # @_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rdi)
	jae	.LBB137_4
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB137_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rax
.LBB137_4:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB137_8
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB137_7
###SPA### trampoline_fmt_64
# %bb.6:
	movq	8(%rbx), %rax
.LBB137_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$31, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB137_12
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB137_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rbx), %rax
.LBB137_12:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-128, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB137_16
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB137_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%rbx), %rax
.LBB137_16:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB137_20
###SPA### trampoline_fmt_64
# %bb.17:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB137_18
###SPA### trampoline_fmt_64
# %bb.19:
	movq	8(%rbx), %rax
.LBB137_20:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB137_24
###SPA### trampoline_fmt_64
# %bb.21:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB137_22
###SPA### trampoline_fmt_64
# %bb.23:
	movq	8(%rbx), %rax
.LBB137_24:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB137_28
###SPA### trampoline_fmt_64
# %bb.25:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB137_26
###SPA### trampoline_fmt_64
# %bb.27:
	movq	8(%rbx), %rax
.LBB137_28:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	addq	$1, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB137_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB137_4
.LBB137_7:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB137_8
.LBB137_11:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB137_12
.LBB137_15:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB137_16
.LBB137_18:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB137_20
.LBB137_22:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB137_24
.LBB137_26:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB137_28
.Lfunc_end137:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv, .Lfunc_end137-_ZN2js3jit11X86Encoding13BaseAssembler9nop_sevenEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv,"axG",@progbits,_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv,comdat
	.hidden	_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv # -- Begin function _ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv
	.weak	_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv,@function
_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv: # @_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rdi)
	jae	.LBB138_4
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rax
.LBB138_4:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB138_8
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_7
###SPA### trampoline_fmt_64
# %bb.6:
	movq	8(%rbx), %rax
.LBB138_8:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$31, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB138_12
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rbx), %rax
.LBB138_12:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$-124, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB138_16
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%rbx), %rax
.LBB138_16:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB138_20
###SPA### trampoline_fmt_64
# %bb.17:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_18
###SPA### trampoline_fmt_64
# %bb.19:
	movq	8(%rbx), %rax
.LBB138_20:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB138_24
###SPA### trampoline_fmt_64
# %bb.21:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_22
###SPA### trampoline_fmt_64
# %bb.23:
	movq	8(%rbx), %rax
.LBB138_24:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB138_28
###SPA### trampoline_fmt_64
# %bb.25:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_26
###SPA### trampoline_fmt_64
# %bb.27:
	movq	8(%rbx), %rax
.LBB138_28:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rcx
	movq	16(%rbx), %rdx
	leaq	1(%rcx), %rax
	movq	%rax, 8(%rbx)
	addq	$17, %rcx
	cmpq	%rcx, %rdx
	jae	.LBB138_32
###SPA### trampoline_fmt_64
# %bb.29:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB138_30
###SPA### trampoline_fmt_64
# %bb.31:
	movq	8(%rbx), %rax
.LBB138_32:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	addq	$1, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB138_3:
	.cfi_def_cfa_offset 16
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_4
.LBB138_7:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_8
.LBB138_11:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_12
.LBB138_15:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_16
.LBB138_18:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_20
.LBB138_22:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_24
.LBB138_26:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_28
.LBB138_30:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB138_32
.Lfunc_end138:
	.size	_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv, .Lfunc_end138-_ZN2js3jit11X86Encoding13BaseAssembler9nop_eightEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType,"axG",@progbits,_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType,comdat
	.hidden	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType # -- Begin function _ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	.weak	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	.p2align	4, 0x90
	.type	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType,@function
_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType: # @_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebp
	movl	%edx, %r15d
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movl	%ebp, %eax
	addb	$-1, %al
	cmpb	$1, %al
	ja	.LBB139_1
###SPA### trampoline_fmt_64
# %bb.16:
	movzbl	%r15b, %edx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE # TAILCALL
.LBB139_1:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movzwl	(%r14), %eax
	movl	%eax, %ecx
	andb	$15, %cl
	je	.LBB139_14
###SPA### trampoline_fmt_64
# %bb.2:
	cmpb	$1, %cl
	je	.LBB139_14
###SPA### trampoline_fmt_64
# %bb.3:
	cmpb	$3, %cl
	jne	.LBB139_4
###SPA### trampoline_fmt_64
# %bb.5:
	movabsq	$-2251799813685248, %rcx # imm = 0xFFF8000000000000
	shrl	$4, %eax
	andb	$31, %al
	movzbl	%bpl, %esi
	shlq	$47, %rsi
	orq	%rcx, %rsi
	cmpb	%r15b, %al
	je	.LBB139_7
###SPA### trampoline_fmt_64
# %bb.6:
	cmpb	%r15b, 2(%r14)
	je	.LBB139_7
###SPA### trampoline_fmt_64
	jmp	.LBB139_15
.LBB139_14:
###SPA## trampoline_fmt_64
	shrl	$4, %eax
	andb	$31, %al
	movzbl	%bpl, %esi
	orq	$-16, %rsi
	shlq	$47, %rsi
	cmpb	%r15b, %al
	jne	.LBB139_15
###SPA### trampoline_fmt_64
.LBB139_7:
###SPA## trampoline_fmt_64
	movl	$11, %edx
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	testb	$15, (%r14)
	je	.LBB139_9
###SPA### trampoline_fmt_64
# %bb.8:
	movzbl	%r15b, %edx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
.LBB139_9:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB139_13
###SPA### trampoline_fmt_64
# %bb.10:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB139_12
###SPA### trampoline_fmt_64
# %bb.11:
	movq	744(%rbx), %rax
.LBB139_13:
###SPA## trampoline_fmt_64
	movl	%r15d, %ecx
	shrb	%cl
	orb	$73, %cl
	movq	736(%rbx), %rdx
	andb	$125, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$51, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	shlb	$3, %r15b
	orb	$-61, %r15b
	movb	%r15b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB139_4:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movzbl	%bpl, %esi
	orq	$-16, %rsi
	shlq	$47, %rsi
.LBB139_15:
###SPA## trampoline_fmt_64
	movzbl	%r15b, %ebp
	movq	%rbx, %rdi
	movl	%ebp, %edx
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movl	%ebp, %edx
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE # TAILCALL
.LBB139_12:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB139_13
.Lfunc_end139:
	.size	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType, .Lfunc_end139-_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_7OperandENS0_8RegisterE11JSValueType
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE,"axG",@progbits,_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE # -- Begin function _ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE
	.weak	_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE,@function
_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE: # @_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movzwl	(%rsi), %ebp
	movl	%ebp, %eax
	andb	$15, %al
	cmpb	$4, %al
	ja	.LBB140_24
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%edx, %r14d
	movq	%rdi, %rbx
	movl	%ebp, %eax
	andl	$15, %eax
	leaq	.LJTI140_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB140_2:
###SPA## trampoline_fmt_64
	movl	%ebp, %r15d
	shrl	$4, %r15d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB140_6
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB140_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	744(%rbx), %rax
.LBB140_6:
###SPA## trampoline_fmt_64
	movl	%r14d, %ecx
	shrb	%cl
	andb	$52, %cl
	shrl	$7, %ebp
	andb	$3, %bpl
	orb	%cl, %bpl
	movq	736(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$51, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r15b
	shlb	$3, %r14b
	orb	%r15b, %r14b
	orb	$-64, %r14b
	movb	%r14b, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	jmp	.LBB140_23
.LBB140_18:
###SPA## trampoline_fmt_64
	movl	4(%rsi), %ebp
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB140_22
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB140_21
###SPA### trampoline_fmt_64
# %bb.20:
	movq	744(%rbx), %rax
.LBB140_22:
###SPA## trampoline_fmt_64
	movl	%r14d, %ecx
	shrb	%cl
	orb	$72, %cl
	movq	736(%rbx), %rdx
	andb	$124, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$51, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	shlb	$3, %r14b
	andb	$56, %r14b
	orb	$4, %r14b
	movb	%r14b, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$37, 1(%rax,%rcx)
	movq	736(%rbx), %rsi
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	%ebp, %eax
	movb	%al, 1(%rsi,%rcx)
	movb	%ah, 2(%rsi,%rcx)
	movl	%ebp, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 4(%rsi,%rcx)
	addq	$4, 744(%rbx)
.LBB140_23:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB140_7:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rsi), %r12d
	shrl	$4, %ebp
	andb	$31, %bpl
	movzbl	%r14b, %r13d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB140_11
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB140_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	744(%rbx), %rax
.LBB140_11:
###SPA## trampoline_fmt_64
	shrb	%r14b
	andb	$52, %r14b
	movzbl	%bpl, %edx
	shrb	$3, %bpl
	orb	%r14b, %bpl
	movq	736(%rbx), %rcx
	orb	$72, %bpl
	movb	%bpl, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$51, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movq	%r15, %rdi
	movl	%r12d, %esi
	movl	%r13d, %ecx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB140_12:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rsi), %r8d
	movl	%ebp, %r13d
	shrl	$4, %r13d
	andb	$31, %r13b
	movb	2(%rsi), %r12b
	shrl	$9, %ebp
	andl	$7, %ebp
	movzbl	%r14b, %r9d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB140_17
###SPA### trampoline_fmt_64
# %bb.13:
	movl	%r9d, (%rsp)            # 4-byte Spill
	movl	%r8d, 4(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB140_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	744(%rbx), %rax
.LBB140_16:
###SPA## trampoline_fmt_64
	movl	4(%rsp), %r8d           # 4-byte Reload
	movl	(%rsp), %r9d            # 4-byte Reload
.LBB140_17:
###SPA## trampoline_fmt_64
	shrb	%r14b
	andb	$52, %r14b
	movl	%r12d, %ecx
	shrb	$2, %cl
	andb	$54, %cl
	orb	%r14b, %cl
	movzbl	%r13b, %edx
	shrb	$3, %r13b
	orb	%cl, %r13b
	movq	736(%rbx), %rcx
	orb	$72, %r13b
	movb	%r13b, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$51, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movzbl	%r12b, %ecx
	movq	%r15, %rdi
	movl	%r8d, %esi
	movl	%ebp, %r8d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB140_5:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB140_6
.LBB140_21:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB140_22
.LBB140_10:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB140_11
.LBB140_15:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB140_16
.LBB140_24:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$869, 0                 # imm = 0x365
	callq	abort@PLT
.Lfunc_end140:
	.size	_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE, .Lfunc_end140-_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE
	.cfi_endproc
	.section	.rodata._ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE,"aG",@progbits,_ZN2js3jit9Assembler4xorqERKNS0_7OperandENS0_8RegisterE,comdat
	.p2align	2
.LJTI140_0:
	.long	.LBB140_2-.LJTI140_0
	.long	.LBB140_7-.LJTI140_0
	.long	.LBB140_24-.LJTI140_0
	.long	.LBB140_12-.LJTI140_0
	.long	.LBB140_18-.LJTI140_0
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE,"axG",@progbits,_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE # -- Begin function _ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
	.weak	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE,@function
_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE: # @_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %r14d
	movq	%rdi, %rbx
	movzwl	(%rsi), %r12d
	movl	%r12d, %eax
	andb	$15, %al
	cmpb	$3, %al
	je	.LBB141_7
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %al
	jne	.LBB141_13
###SPA### trampoline_fmt_64
# %bb.2:
	leaq	736(%rbx), %r15
	movl	4(%rsi), %ebp
	shrl	$4, %r12d
	andb	$31, %r12b
	movzbl	%r14b, %r13d
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB141_6
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB141_5
###SPA### trampoline_fmt_64
# %bb.4:
	movq	744(%rbx), %rax
.LBB141_6:
###SPA## trampoline_fmt_64
	shrb	%r14b
	andb	$52, %r14b
	movzbl	%r12b, %edx
	shrb	$3, %r12b
	orb	%r14b, %r12b
	movq	736(%rbx), %rcx
	orb	$72, %r12b
	movb	%r12b, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$-115, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movq	%r15, %rdi
	movl	%ebp, %esi
	movl	%r13d, %ecx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB141_7:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rsi), %r8d
	movl	%r12d, %ebp
	shrl	$4, %ebp
	andb	$31, %bpl
	movb	2(%rsi), %r13b
	shrl	$9, %r12d
	andl	$7, %r12d
	movzbl	%r14b, %r14d
	movq	744(%rbx), %rsi
	leaq	16(%rsi), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB141_12
###SPA### trampoline_fmt_64
# %bb.8:
	movl	%r8d, 4(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB141_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	744(%rbx), %rsi
.LBB141_11:
###SPA## trampoline_fmt_64
	movl	4(%rsp), %r8d           # 4-byte Reload
.LBB141_12:
###SPA## trampoline_fmt_64
	movl	%r14d, %ecx
	shrb	%cl
	andb	$52, %cl
	movl	%r13d, %eax
	shrb	$2, %al
	andb	$54, %al
	orb	%cl, %al
	movzbl	%bpl, %edx
	shrb	$3, %bpl
	orb	%al, %bpl
	movq	736(%rbx), %rax
	orb	$72, %bpl
	movb	%bpl, (%rax,%rsi)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$-115, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movzbl	%r13b, %ecx
	movq	%r15, %rdi
	movl	%r8d, %esi
	movl	%r12d, %r8d
	movl	%r14d, %r9d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB141_5:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB141_6
.LBB141_10:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%esi, %esi
	jmp	.LBB141_11
.LBB141_13:
###SPA## trampoline_fmt_64
	leaq	.L.str.227(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$977, 0                 # imm = 0x3D1
	callq	abort@PLT
.Lfunc_end141:
	.size	_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE, .Lfunc_end141-_ZN2js3jit9Assembler3leaERKNS0_7OperandENS0_8RegisterE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE # -- Begin function _ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE
	.weak	_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE,@function
_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE: # @_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movzwl	(%rsi), %ebp
	movl	%ebp, %eax
	andb	$15, %al
	je	.LBB142_17
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$3, %al
	je	.LBB142_10
###SPA### trampoline_fmt_64
# %bb.2:
	cmpb	$1, %al
	jne	.LBB142_24
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	736(%rbx), %r14
	movl	4(%rsi), %r15d
	shrl	$4, %ebp
	andb	$31, %bpl
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB142_6
###SPA### trampoline_fmt_64
# %bb.4:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB142_5
###SPA### trampoline_fmt_64
.LBB142_6:
###SPA## trampoline_fmt_64
	cmpb	$7, %bpl
	ja	.LBB142_8
###SPA### trampoline_fmt_64
.LBB142_7:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	jmp	.LBB142_9
.LBB142_10:
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r14
	movl	4(%rsi), %r15d
	movl	%ebp, %r12d
	shrl	$4, %r12d
	andb	$31, %r12b
	movb	2(%rsi), %r13b
	shrl	$9, %ebp
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB142_13
###SPA### trampoline_fmt_64
# %bb.11:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB142_12
###SPA### trampoline_fmt_64
.LBB142_13:
###SPA## trampoline_fmt_64
	andl	$7, %ebp
	movl	%r13d, %eax
	orb	%r12b, %al
	cmpb	$7, %al
	ja	.LBB142_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	744(%rbx), %rax
	jmp	.LBB142_16
.LBB142_17:
###SPA## trampoline_fmt_64
	shrl	$4, %ebp
	movl	%ebp, %r14d
	andb	$31, %r14b
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB142_20
###SPA### trampoline_fmt_64
# %bb.18:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB142_19
###SPA### trampoline_fmt_64
.LBB142_20:
###SPA## trampoline_fmt_64
	cmpb	$7, %r14b
	ja	.LBB142_22
###SPA### trampoline_fmt_64
.LBB142_21:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	jmp	.LBB142_23
.LBB142_15:
###SPA## trampoline_fmt_64
	movl	%r13d, %eax
	shrb	$2, %al
	andb	$62, %al
	movl	%r12d, %ecx
	shrb	$3, %cl
	orb	%al, %cl
	movq	736(%rbx), %rax
	movq	744(%rbx), %rdx
	orb	$64, %cl
	movb	%cl, (%rax,%rdx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB142_16:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-1, (%rcx,%rax)
	addq	$1, 744(%rbx)
	movzbl	%r12b, %edx
	movzbl	%r13b, %ecx
	movl	$4, %r9d
	movq	%r14, %rdi
	movl	%r15d, %esi
	movl	%ebp, %r8d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB142_5:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	cmpb	$7, %bpl
	jbe	.LBB142_7
###SPA### trampoline_fmt_64
.LBB142_8:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	$3, %al
	movq	736(%rbx), %rcx
	movq	744(%rbx), %rdx
	orb	$64, %al
	movb	%al, (%rcx,%rdx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB142_9:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-1, (%rcx,%rax)
	addq	$1, 744(%rbx)
	movzbl	%bpl, %edx
	movl	$4, %ecx
	movq	%r14, %rdi
	movl	%r15d, %esi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB142_12:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	jmp	.LBB142_13
.LBB142_19:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	cmpb	$7, %r14b
	jbe	.LBB142_21
###SPA### trampoline_fmt_64
.LBB142_22:
###SPA## trampoline_fmt_64
	shrb	$3, %r14b
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	orb	$64, %r14b
	movb	%r14b, (%rax,%rcx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB142_23:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$-1, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %bpl
	orb	$-32, %bpl
	movb	%bpl, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB142_24:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$957, 0                 # imm = 0x3BD
	callq	abort@PLT
.Lfunc_end142:
	.size	_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE, .Lfunc_end142-_ZN2js3jit18AssemblerX86Shared3jmpERKNS0_7OperandE
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE
.LCPI143_0:
	.quad	9221120237041090560     # double NaN
	.section	.text._ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE,"ax",@progbits
	.p2align	4, 0x90
	.type	_ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE,@function
_ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE: # @_ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, 12(%rsp)          # 4-byte Spill
	movl	%r8d, 28(%rsp)          # 4-byte Spill
	movl	%ecx, 8(%rsp)           # 4-byte Spill
	movl	%edx, %r15d
	movq	%rdi, %r12
	movq	%fs:40, %rax
	movq	%rax, 112(%rsp)
	leaq	96(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	leaq	48(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGeneratorC1Ev
	movq	%r14, 80(%rsp)
	movl	$0, 88(%rsp)
	movq	96(%rsp), %rsi
	movq	8(%rsi), %rax
	movzbl	104(%rsp), %edx
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	addq	%rdx, %rdi
	je	.LBB143_13
###SPA### trampoline_fmt_64
# %bb.1:
	testq	%rax, %rax
	je	.LBB143_7
###SPA### trampoline_fmt_64
# %bb.2:
	movq	(%rsi), %rax
	movl	(%rax), %eax
	movzbl	%al, %edx
	movb	$108, %cl
	cmpl	$123, %edx
	jb	.LBB143_4
###SPA### trampoline_fmt_64
# %bb.3:
	movl	%eax, %ecx
.LBB143_4:
###SPA## trampoline_fmt_64
	movb	$3, %al
	addb	$-108, %cl
	cmpb	$18, %cl
	ja	.LBB143_12
###SPA### trampoline_fmt_64
# %bb.5:
	movzbl	%cl, %ecx
	leaq	.LJTI143_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	jmpq	*%rcx
.LBB143_6:
###SPA## trampoline_fmt_64
	movb	$23, %al
	jmp	.LBB143_12
.LBB143_7:
###SPA## trampoline_fmt_64
	movb	$24, %al
	jmp	.LBB143_12
.LBB143_8:
###SPA## trampoline_fmt_64
	movb	$5, %al
	jmp	.LBB143_12
.LBB143_9:
###SPA## trampoline_fmt_64
	movb	$10, %al
	jmp	.LBB143_12
.LBB143_10:
###SPA## trampoline_fmt_64
	movb	$6, %al
	jmp	.LBB143_12
.LBB143_11:
###SPA## trampoline_fmt_64
	movb	$4, %al
.LBB143_12:
###SPA## trampoline_fmt_64
	movzbl	%al, %esi
	leaq	48(%rsp), %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	88(%rsp), %ecx
	movq	80(%rsp), %r14
	movq	(%r14), %rax
	movq	8(%rax), %rax
	movzbl	8(%r14), %edx
.LBB143_13:
###SPA## trampoline_fmt_64
	addq	%rax, %rdx
	movl	%ecx, %eax
	cmpq	%rax, %rdx
	je	.LBB143_88
###SPA### trampoline_fmt_64
# %bb.14:
	leaq	736(%r12), %rdx
	movq	%rdx, 16(%rsp)          # 8-byte Spill
	movl	28(%rsp), %edx          # 4-byte Reload
	movl	%edx, %ebx
	shrb	%bl
	andb	$124, %bl
	movb	%bl, 7(%rsp)            # 1-byte Spill
                                        # kill: def $dl killed $dl killed $edx
	shlb	$3, %dl
	movb	%dl, 6(%rsp)            # 1-byte Spill
	leaq	48(%rsp), %rbp
	leaq	.LJTI143_2(%rip), %r13
	leaq	.L.str.62(%rip), %rbx
	jmp	.LBB143_32
	.p2align	4, 0x90
.LBB143_15:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rsi), %rcx
	movl	(%rcx,%rax,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB143_17
###SPA### trampoline_fmt_64
# %bb.16:                               #   in Loop: Header=BB143_32 Depth=1
	movl	%ecx, %eax
.LBB143_17:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %cl
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB143_86
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB143_32 Depth=1
	movzbl	%al, %eax
	leaq	.LJTI143_4(%rip), %rdx
	movslq	(%rdx,%rax,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
.LBB143_19:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %cl
	jmp	.LBB143_86
.LBB143_20:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$5, %cl
	jmp	.LBB143_86
.LBB143_21:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %cl
	jmp	.LBB143_86
.LBB143_22:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %cl
	jmp	.LBB143_86
.LBB143_23:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$4, %cl
	jmp	.LBB143_86
.LBB143_24:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	%ecx, %edx
	addb	$-5, %dl
	cmpb	$1, %dl
	ja	.LBB143_28
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB143_32 Depth=1
	cmpb	$6, %cl
	jne	.LBB143_29
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB143_32 Depth=1
	movl	$2, %edx
	movl	$16, %ecx
	movl	$5, %r9d
	leaq	.L.str.103(%rip), %rsi
	movq	%rdi, %rbx
	movl	%eax, %r8d
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$8, %rsp
	.cfi_adjust_cfa_offset -8
	movl	$2, %edx
	movl	$90, %ecx
	movl	$15, %r8d
	movl	$15, %r9d
	movq	%rbx, %rdi
	leaq	.L.str.226(%rip), %rsi
	pushq	$15
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_
	jmp	.LBB143_30
.LBB143_27:                             #   in Loop: Header=BB143_32 Depth=1
	.cfi_def_cfa_offset 176
###SPA## trampoline_fmt_64
	movw	$65, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%r8d, 44(%rsp)
	movzbl	%bl, %esi
	movq	%r12, %rdi
	leaq	40(%rsp), %rdx
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	leaq	.L.str.62(%rip), %rbx
	jmp	.LBB143_84
.LBB143_28:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$10, %cl
	je	.LBB143_56
###SPA### trampoline_fmt_64
	jmp	.LBB143_93
.LBB143_29:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	$3, %edx
	movl	$16, %ecx
	movl	$5, %r9d
	movq	%rbx, %rsi
	movq	%rdi, %rbx
	movl	%eax, %r8d
	pushq	$15
	.cfi_adjust_cfa_offset 8
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
.LBB143_30:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	$-2, 40(%rsp)
	movl	$1, %edx
	movl	$46, %ecx
	movl	$15, %r8d
	movl	$15, %r9d
	movq	%rbx, %rdi
	leaq	.L.str.174(%rip), %rsi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	movl	$11, %esi
	movq	%r12, %rdi
	leaq	40(%rsp), %r14
	movq	%r14, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movl	$47, %esi
	movq	%r12, %rdi
	movsd	.LCPI143_0(%rip), %xmm0 # xmm0 = mem[0],zero
	callq	_ZN2js3jit17MacroAssemblerX6418loadConstantDoubleEdNS0_13FloatRegisterE
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	36(%rsp), %r8d
	movzbl	32(%rsp), %r9d
	movl	$3, %edx
	movl	$17, %ecx
	movq	%rbx, %rdi
	leaq	.L.str.62(%rip), %rbx
	jmp	.LBB143_63
.LBB143_31:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r12)
	movq	$0, 744(%r12)
	xorl	%eax, %eax
	jmp	.LBB143_73
	.p2align	4, 0x90
.LBB143_32:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	leal	(%r15,%rcx,8), %r8d
	movb	$4, 32(%rsp)
	movl	%r8d, 36(%rsp)
	movq	(%r14), %rdx
	movb	$24, %cl
	cmpq	%rax, 8(%rdx)
	jne	.LBB143_39
###SPA### trampoline_fmt_64
.LBB143_33:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	64(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	ja	.LBB143_84
###SPA### trampoline_fmt_64
.LBB143_34:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movslq	(%r13,%rax,4), %rax
	addq	%r13, %rax
	jmpq	*%rax
.LBB143_35:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	addb	$-3, %cl
	cmpb	$21, %cl
	ja	.LBB143_91
###SPA### trampoline_fmt_64
# %bb.36:                               #   in Loop: Header=BB143_32 Depth=1
	movzbl	%cl, %eax
	leaq	.LJTI143_3(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB143_37:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movzbl	72(%rsp), %eax
	cmpb	$0, 12(%rsp)            # 1-byte Folded Reload
	je	.LBB143_79
###SPA### trampoline_fmt_64
# %bb.38:                               #   in Loop: Header=BB143_32 Depth=1
	movw	$65, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%r8d, 44(%rsp)
	movzbl	%al, %esi
	movq	%r12, %rdi
	leaq	40(%rsp), %rbx
	jmp	.LBB143_54
	.p2align	4, 0x90
.LBB143_39:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdx), %rcx
	movl	(%rcx,%rax,4), %ecx
	movzbl	%cl, %edx
	movb	$108, %al
	cmpl	$123, %edx
	jb	.LBB143_41
###SPA### trampoline_fmt_64
# %bb.40:                               #   in Loop: Header=BB143_32 Depth=1
	movl	%ecx, %eax
.LBB143_41:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$3, %cl
	addb	$-108, %al
	cmpb	$18, %al
	ja	.LBB143_33
###SPA### trampoline_fmt_64
# %bb.42:                               #   in Loop: Header=BB143_32 Depth=1
	movzbl	%al, %eax
	leaq	.LJTI143_1(%rip), %rdx
	movslq	(%rdx,%rax,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
.LBB143_43:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$23, %cl
	movl	64(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB143_34
###SPA### trampoline_fmt_64
	jmp	.LBB143_84
	.p2align	4, 0x90
.LBB143_44:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$10, %cl
	je	.LBB143_56
###SPA### trampoline_fmt_64
# %bb.45:                               #   in Loop: Header=BB143_32 Depth=1
	movl	72(%rsp), %eax
	andl	$15, %eax
	cmpb	$6, %cl
	je	.LBB143_60
###SPA### trampoline_fmt_64
# %bb.46:                               #   in Loop: Header=BB143_32 Depth=1
	cmpb	$5, %cl
	jne	.LBB143_92
###SPA### trampoline_fmt_64
# %bb.47:                               #   in Loop: Header=BB143_32 Depth=1
	cmpb	$0, 12(%rsp)            # 1-byte Folded Reload
	je	.LBB143_74
###SPA### trampoline_fmt_64
# %bb.48:                               #   in Loop: Header=BB143_32 Depth=1
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movl	$1, %edx
	movl	$40, %ecx
	movl	$16, %r9d
	movq	24(%rsp), %rbx          # 8-byte Reload
	movq	%rbx, %rdi
	leaq	.L.str.239(%rip), %rsi
	jmp	.LBB143_62
	.p2align	4, 0x90
.LBB143_49:                             #   in Loop: Header=BB143_32 Depth=1
	.cfi_def_cfa_offset 176
###SPA## trampoline_fmt_64
	movl	72(%rsp), %eax
	addl	$24, %eax
	cmpb	$0, 12(%rsp)            # 1-byte Folded Reload
	je	.LBB143_55
###SPA### trampoline_fmt_64
# %bb.50:                               #   in Loop: Header=BB143_32 Depth=1
	cmpb	$23, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	je	.LBB143_80
###SPA### trampoline_fmt_64
# %bb.51:                               #   in Loop: Header=BB143_32 Depth=1
	cmpb	$4, %cl
	je	.LBB143_78
###SPA### trampoline_fmt_64
# %bb.52:                               #   in Loop: Header=BB143_32 Depth=1
	cmpb	$3, %cl
	jne	.LBB143_24
###SPA### trampoline_fmt_64
# %bb.53:                               #   in Loop: Header=BB143_32 Depth=1
	movw	$81, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%eax, 44(%rsp)
	movzbl	8(%rsp), %ebp           # 1-byte Folded Reload
	movq	%r12, %rdi
	leaq	40(%rsp), %rbx
	movq	%rbx, %rsi
	movl	%ebp, %edx
	callq	_ZN2js3jit18AssemblerX86Shared4movlERKNS0_7OperandENS0_8RegisterE
	movl	32(%rsp), %eax
	movl	36(%rsp), %ecx
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%ecx, 44(%rsp)
	movq	%r12, %rdi
	movl	%ebp, %esi
	leaq	48(%rsp), %rbp
.LBB143_54:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	movzbl	32(%rsp), %eax
	andq	$31, %rax
	shlq	$4, %rax
	movl	36(%rsp), %ecx
	shlq	$32, %rcx
	orq	%rax, %rcx
	movabsq	$17179869184, %rdx      # imm = 0x400000000
	addq	%rdx, %rcx
	addq	$1048577, %rcx          # imm = 0x100001
	movabsq	$-4294967296, %rdx      # imm = 0xFFFFFFFF00000000
	andq	%rdx, %rcx
	orq	%rax, %rcx
	orq	$1048577, %rcx          # imm = 0x100001
	movq	%rcx, 40(%rsp)
	movl	$-491520, %esi          # imm = 0xFFF88000
	movq	%r12, %rdi
	movq	%rbx, %rdx
	leaq	.L.str.62(%rip), %rbx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_5Imm32ERKNS0_7OperandE
	jmp	.LBB143_84
.LBB143_55:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$10, %cl
	jne	.LBB143_68
###SPA### trampoline_fmt_64
.LBB143_56:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	xorps	%xmm0, %xmm0
	movl	$47, %esi
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX6418loadConstantDoubleEdNS0_13FloatRegisterE
	movl	36(%rsp), %r8d
	movzbl	32(%rsp), %r9d
	movl	$3, %edx
	movl	$17, %ecx
	movq	16(%rsp), %rdi          # 8-byte Reload
	jmp	.LBB143_63
.LBB143_57:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$5, %cl
	movl	64(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB143_34
###SPA### trampoline_fmt_64
	jmp	.LBB143_84
.LBB143_58:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$10, %cl
	movl	64(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB143_34
###SPA### trampoline_fmt_64
	jmp	.LBB143_84
.LBB143_59:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movb	$6, %cl
	movl	64(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB143_34
###SPA### trampoline_fmt_64
	jmp	.LBB143_84
.LBB143_60:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$0, 12(%rsp)            # 1-byte Folded Reload
	je	.LBB143_75
###SPA### trampoline_fmt_64
# %bb.61:                               #   in Loop: Header=BB143_32 Depth=1
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movl	$2, %edx
	movl	$90, %ecx
	movl	$15, %r9d
	movq	24(%rsp), %rbx          # 8-byte Reload
	movq	%rbx, %rdi
	leaq	.L.str.226(%rip), %rsi
.LBB143_62:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	%eax, %r8d
	pushq	$15
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_S7_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movl	$-2, 40(%rsp)
	movl	$1, %edx
	movl	$46, %ecx
	movl	$15, %r8d
	movl	$15, %r9d
	movq	%rbx, %rdi
	leaq	.L.str.174(%rip), %rsi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler18twoByteOpSimdFlagsEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDENS1_13XMMRegisterIDES7_
	movl	$11, %esi
	movq	%r12, %rdi
	leaq	40(%rsp), %rbp
	movq	%rbp, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movl	$47, %esi
	movq	%r12, %rdi
	movsd	.LCPI143_0(%rip), %xmm0 # xmm0 = mem[0],zero
	callq	_ZN2js3jit17MacroAssemblerX6418loadConstantDoubleEdNS0_13FloatRegisterE
	movq	%r12, %rdi
	movq	%rbp, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movl	36(%rsp), %r8d
	movzbl	32(%rsp), %r9d
	movl	$3, %edx
	movl	$17, %ecx
	movq	%rbx, %rdi
	leaq	.L.str.62(%rip), %rbx
	leaq	48(%rsp), %rbp
.LBB143_63:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rsi
	pushq	$15
	.cfi_adjust_cfa_offset 8
	jmp	.LBB143_77
.LBB143_64:                             #   in Loop: Header=BB143_32 Depth=1
	.cfi_def_cfa_offset 176
###SPA## trampoline_fmt_64
	movb	$4, %cl
	movl	64(%rsp), %eax
	addl	$1, %eax
	cmpl	$3, %eax
	jbe	.LBB143_34
###SPA### trampoline_fmt_64
	jmp	.LBB143_84
.LBB143_65:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	72(%rsp), %esi
	movw	$65, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%r8d, 44(%rsp)
	jmp	.LBB143_82
.LBB143_66:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movzbl	72(%rsp), %eax
	cmpb	$0, 12(%rsp)            # 1-byte Folded Reload
	je	.LBB143_81
###SPA### trampoline_fmt_64
# %bb.67:                               #   in Loop: Header=BB143_32 Depth=1
	movzbl	%al, %edx
	movzbl	8(%rsp), %ebp           # 1-byte Folded Reload
	movl	$24, %esi
	xorl	%r8d, %r8d
	movq	%r12, %rdi
	movl	%ebp, %ecx
	movq	176(%rsp), %r9
	callq	_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movl	$9, %esi
	movl	$11, %ecx
	movq	%r12, %rdi
	movl	%ebp, %edx
	leaq	48(%rsp), %rbp
	callq	_ZN2js3jit17MacroAssemblerX648boxValueE11JSValueTypeNS0_8RegisterES3_
	movl	32(%rsp), %eax
	movl	36(%rsp), %ecx
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%ecx, 44(%rsp)
	movl	$11, %esi
	jmp	.LBB143_82
.LBB143_68:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	shlq	$32, %rax
	orq	$5, %rax
	movq	32(%rsp), %r8
	movzbl	%cl, %esi
	movzbl	8(%rsp), %edx           # 1-byte Folded Reload
	movq	%r12, %rdi
	movq	%rax, %rcx
	callq	_ZL9StackCopyRN2js3jit14MacroAssemblerENS0_7MIRTypeENS0_8RegisterENS0_7AddressES5_
	jmp	.LBB143_84
.LBB143_69:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movzbl	72(%rsp), %ebx
	cmpb	$0, 12(%rsp)            # 1-byte Folded Reload
	je	.LBB143_27
###SPA### trampoline_fmt_64
# %bb.70:                               #   in Loop: Header=BB143_32 Depth=1
	movq	744(%r12), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r12)
	jae	.LBB143_73
###SPA### trampoline_fmt_64
# %bb.71:                               #   in Loop: Header=BB143_32 Depth=1
	movl	$16, %esi
	movq	16(%rsp), %rdi          # 8-byte Reload
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB143_31
###SPA### trampoline_fmt_64
# %bb.72:                               #   in Loop: Header=BB143_32 Depth=1
	movq	744(%r12), %rax
.LBB143_73:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	%ebx, %ecx
	shrb	$3, %cl
	orb	7(%rsp), %cl            # 1-byte Folded Reload
	movq	736(%r12), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	movb	$-117, 1(%rax,%rcx)
	movq	736(%r12), %rax
	movq	744(%r12), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r12)
	andb	$7, %bl
	orb	6(%rsp), %bl            # 1-byte Folded Reload
	orb	$-64, %bl
	movb	%bl, 1(%rax,%rcx)
	addq	$1, 744(%r12)
	movzbl	28(%rsp), %esi          # 1-byte Folded Reload
	movzbl	8(%rsp), %ecx           # 1-byte Folded Reload
	movq	%r12, %rdi
	leaq	32(%rsp), %rdx
	callq	_ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_
	leaq	.L.str.62(%rip), %rbx
	jmp	.LBB143_84
.LBB143_74:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	$3, %edx
	movl	$17, %ecx
	movl	$4, %r9d
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	%rbx, %rsi
	jmp	.LBB143_76
.LBB143_75:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	$2, %edx
	movl	$17, %ecx
	movl	$4, %r9d
	movq	16(%rsp), %rdi          # 8-byte Reload
	leaq	.L.str.103(%rip), %rsi
.LBB143_76:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	pushq	%rax
	.cfi_adjust_cfa_offset 8
.LBB143_77:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	pushq	$16
	.cfi_adjust_cfa_offset 8
	callq	_ZN2js3jit11X86Encoding13BaseAssembler13twoByteOpSimdEPKcNS1_14VexOperandTypeENS1_15TwoByteOpcodeIDEiNS1_10RegisterIDENS1_13XMMRegisterIDES8_
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	jmp	.LBB143_84
.LBB143_78:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movw	$81, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%eax, 44(%rsp)
	movzbl	28(%rsp), %ebp          # 1-byte Folded Reload
	movq	%r12, %rdi
	leaq	40(%rsp), %r14
	movq	%r14, %rsi
	movl	%ebp, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movzbl	8(%rsp), %ebx           # 1-byte Folded Reload
	movl	$24, %esi
	xorl	%r8d, %r8d
	movq	%r12, %rdi
	movl	%ebp, %edx
	leaq	48(%rsp), %rbp
	movl	%ebx, %ecx
	movq	176(%rsp), %r9
	callq	_ZL28GenerateBigIntInitializationRN2js3jit14MacroAssemblerEjNS0_10Register64ENS0_8RegisterEPKNS_4wasm10FuncExportEPNS0_5LabelE
	movq	%r12, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movl	$9, %esi
	movl	$11, %ecx
	movq	%r12, %rdi
	movl	%ebx, %edx
	leaq	.L.str.62(%rip), %rbx
	callq	_ZN2js3jit17MacroAssemblerX648boxValueE11JSValueTypeNS0_8RegisterES3_
	movl	32(%rsp), %eax
	movl	36(%rsp), %ecx
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%ecx, 44(%rsp)
	movl	$11, %esi
	movq	%r12, %rdi
	movq	%r14, %rdx
	jmp	.LBB143_83
.LBB143_79:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movw	$65, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%r8d, 44(%rsp)
	movzbl	%al, %esi
	movq	%r12, %rdi
	leaq	40(%rsp), %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4movlENS0_8RegisterERKNS0_7OperandE
	jmp	.LBB143_84
.LBB143_80:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movw	$81, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%eax, 44(%rsp)
	movzbl	8(%rsp), %ebx           # 1-byte Folded Reload
	movq	%r12, %rdi
	leaq	40(%rsp), %rsi
	movl	%ebx, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movzbl	28(%rsp), %ecx          # 1-byte Folded Reload
	movq	%r12, %rdi
	movl	%ebx, %esi
	leaq	.L.str.62(%rip), %rbx
	leaq	32(%rsp), %rdx
	callq	_ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_
	jmp	.LBB143_84
.LBB143_81:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movq	32(%rsp), %rcx
	movq	%rcx, %rdx
	shrq	$32, %rdx
	andl	$31, %ecx
	shll	$4, %ecx
	orl	$1, %ecx
	movw	%cx, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%edx, 44(%rsp)
	movzbl	%al, %esi
.LBB143_82:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	leaq	40(%rsp), %rdx
.LBB143_83:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	.p2align	4, 0x90
.LBB143_84:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	88(%rsp), %eax
	addl	$1, %eax
	movl	%eax, 88(%rsp)
	movq	80(%rsp), %r14
	movq	(%r14), %rsi
	movq	8(%rsi), %rdi
	movzbl	8(%r14), %edx
	addq	%rdi, %rdx
	cmpq	%rax, %rdx
	je	.LBB143_87
###SPA### trampoline_fmt_64
# %bb.85:                               #   in Loop: Header=BB143_32 Depth=1
	movb	$24, %cl
	cmpq	%rax, %rdi
	jne	.LBB143_15
###SPA### trampoline_fmt_64
.LBB143_86:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movzbl	%cl, %esi
	movq	%rbp, %rdi
	callq	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	movl	88(%rsp), %eax
	movq	80(%rsp), %r14
	movq	(%r14), %rcx
	movzbl	8(%r14), %edx
	addq	8(%rcx), %rdx
.LBB143_87:                             #   in Loop: Header=BB143_32 Depth=1
###SPA## trampoline_fmt_64
	movl	%eax, %ecx
	cmpq	%rax, %rdx
	jne	.LBB143_32
###SPA### trampoline_fmt_64
.LBB143_88:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	112(%rsp), %rax
	jne	.LBB143_94
###SPA### trampoline_fmt_64
# %bb.89:
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB143_90:
	.cfi_def_cfa_offset 176
###SPA## trampoline_fmt_64
	leaq	.L.str.198(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1857, 0                # imm = 0x741
	callq	abort@PLT
.LBB143_91:
###SPA## trampoline_fmt_64
	leaq	.L.str.236(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1727, 0                # imm = 0x6BF
	callq	abort@PLT
.LBB143_92:
###SPA## trampoline_fmt_64
	leaq	.L.str.237(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1789, 0                # imm = 0x6FD
	callq	abort@PLT
.LBB143_93:
###SPA## trampoline_fmt_64
	leaq	.L.str.238(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$1841, 0                # imm = 0x731
	callq	abort@PLT
.LBB143_94:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end143:
	.size	_ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE, .Lfunc_end143-_ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE
	.cfi_endproc
	.section	.rodata._ZL24FillArgumentArrayForExitRN2js3jit14MacroAssemblerENS0_8RegisterEjRKNS_4wasm8FuncTypeEjjS3_S3_S3_bPNS0_5LabelE,"a",@progbits
	.p2align	2
.LJTI143_0:
	.long	.LBB143_6-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_12-.LJTI143_0
	.long	.LBB143_9-.LJTI143_0
	.long	.LBB143_8-.LJTI143_0
	.long	.LBB143_10-.LJTI143_0
	.long	.LBB143_11-.LJTI143_0
.LJTI143_1:
	.long	.LBB143_43-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_33-.LJTI143_1
	.long	.LBB143_58-.LJTI143_1
	.long	.LBB143_57-.LJTI143_1
	.long	.LBB143_59-.LJTI143_1
	.long	.LBB143_64-.LJTI143_1
.LJTI143_2:
	.long	.LBB143_90-.LJTI143_2
	.long	.LBB143_35-.LJTI143_2
	.long	.LBB143_44-.LJTI143_2
	.long	.LBB143_49-.LJTI143_2
.LJTI143_3:
	.long	.LBB143_37-.LJTI143_3
	.long	.LBB143_66-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_91-.LJTI143_3
	.long	.LBB143_69-.LJTI143_3
	.long	.LBB143_65-.LJTI143_3
.LJTI143_4:
	.long	.LBB143_19-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_86-.LJTI143_4
	.long	.LBB143_21-.LJTI143_4
	.long	.LBB143_20-.LJTI143_4
	.long	.LBB143_22-.LJTI143_4
	.long	.LBB143_23-.LJTI143_4
                                        # -- End function
	.section	.text._ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_
	.type	_ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_,@function
_ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_: # @_ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %r15d
	movq	%rdx, %r14
	movl	%esi, %ebp
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 48(%rsp)
	movl	$-2, 32(%rsp)
	movl	$-2, 24(%rsp)
	movl	$-2, 16(%rsp)
	movq	744(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rdi)
	jae	.LBB144_4
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB144_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	744(%rbx), %rax
.LBB144_4:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movl	%ecx, %edx
	shlb	$2, %dl
	movq	736(%rbx), %rsi
	orb	%cl, %dl
	orb	$72, %dl
	movb	%dl, (%rsi,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-123, 1(%rax,%rcx)
	movq	736(%rbx), %rsi
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movl	%ebp, %edx
	andb	$7, %dl
	movl	%ebp, %eax
	shlb	$3, %al
	orb	%dl, %al
	orb	$-64, %al
	movb	%al, 1(%rsi,%rcx)
	addq	$1, 744(%rbx)
	leaq	32(%rsp), %r13
	movl	$5, %esi
	movq	%rbx, %rdi
	movq	%r13, %rdx
	callq	_ZN2js3jit18AssemblerX86Shared4jSrcENS1_9ConditionEPNS0_5LabelE
	movabsq	$-1688849860263936, %rax # imm = 0xFFFA000000000000
	movq	%rax, 40(%rsp)
	leaq	40(%rsp), %rsi
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	_ZN2js3jit17MacroAssemblerX6410storeValueINS0_7AddressEEEvRKN2JS5ValueERKT_
	leaq	16(%rsp), %r12
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	%rbx, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movzbl	%bpl, %ebp
	movl	$12, %esi
	movl	$11, %ecx
	movq	%rbx, %rdi
	movl	%ebp, %edx
	callq	_ZN2js3jit17MacroAssemblerX648boxValueE11JSValueTypeNS0_8RegisterES3_
	movzbl	(%r14), %eax
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	4(%r14), %eax
	movl	%eax, 44(%rsp)
	leaq	40(%rsp), %rdx
	movl	$11, %esi
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movb	$14, 40(%rsp)
	movl	$40, 44(%rsp)
	leaq	24(%rsp), %r13
	movq	%r13, (%rsp)
	movzbl	%r15b, %r15d
	leaq	40(%rsp), %rcx
	movl	$4, %esi
	movq	%rbx, %rdi
	movl	%ebp, %edx
	movl	%r15d, %r8d
	movl	%ebp, %r9d
	callq	_ZN2js3jit14MacroAssembler18branchTestObjClassENS0_18AssemblerX86Shared9ConditionENS0_8RegisterERKNS0_7AddressES4_S4_PNS0_5LabelE
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared6jmpSrcEPNS0_5LabelE
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	andl	$31, %ebp
	shll	$4, %ebp
	orl	$1, %ebp
	movw	%bp, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	$32, 44(%rsp)
	leaq	40(%rsp), %rsi
	movq	%rbx, %rdi
	movl	%r15d, %edx
	callq	_ZN2js3jit9Assembler4movqERKNS0_7OperandENS0_8RegisterE
	movq	(%r14), %rax
	movq	%rax, %rcx
	shrq	$32, %rcx
	andl	$31, %eax
	shll	$4, %eax
	orl	$1, %eax
	movw	%ax, 40(%rsp)
	movb	$16, 42(%rsp)
	movl	%ecx, 44(%rsp)
	leaq	40(%rsp), %rdx
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	_ZN2js3jit9Assembler4movqENS0_8RegisterERKNS0_7OperandE
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	_ZN2js3jit18AssemblerX86Shared4bindEPNS0_5LabelE
	movq	%fs:40, %rax
	cmpq	48(%rsp), %rax
	jne	.LBB144_6
###SPA### trampoline_fmt_64
# %bb.5:
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB144_3:
	.cfi_def_cfa_offset 112
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB144_4
.LBB144_6:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end144:
	.size	_ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_, .Lfunc_end144-_ZL20UnboxAnyrefIntoValueRN2js3jit14MacroAssemblerENS0_8RegisterES3_RKNS0_7AddressES3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE,"axG",@progbits,_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE,comdat
	.hidden	_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE # -- Begin function _ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE
	.weak	_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE
	.p2align	4, 0x90
	.type	_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE,@function
_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE: # @_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movzwl	(%rsi), %r14d
	movl	%r14d, %eax
	andb	$15, %al
	cmpb	$3, %al
	je	.LBB145_17
###SPA### trampoline_fmt_64
# %bb.1:
	cmpb	$1, %al
	je	.LBB145_10
###SPA### trampoline_fmt_64
# %bb.2:
	testb	%al, %al
	jne	.LBB145_24
###SPA### trampoline_fmt_64
# %bb.3:
	shrl	$4, %r14d
	movl	%r14d, %r15d
	andb	$31, %r15b
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB145_6
###SPA### trampoline_fmt_64
# %bb.4:
	leaq	736(%rbx), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB145_5
###SPA### trampoline_fmt_64
.LBB145_6:
###SPA## trampoline_fmt_64
	movl	%r15d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	ja	.LBB145_8
###SPA### trampoline_fmt_64
.LBB145_7:
###SPA## trampoline_fmt_64
	movq	744(%rbx), %rax
	jmp	.LBB145_9
.LBB145_10:
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %r15
	movl	4(%rsi), %r12d
	shrl	$4, %r14d
	andb	$31, %r14b
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB145_13
###SPA### trampoline_fmt_64
# %bb.11:
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB145_12
###SPA### trampoline_fmt_64
.LBB145_13:
###SPA## trampoline_fmt_64
	movzbl	%bpl, %ecx
	movl	%r14d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	ja	.LBB145_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	744(%rbx), %rax
	jmp	.LBB145_16
.LBB145_17:
###SPA## trampoline_fmt_64
	leaq	736(%rbx), %rdi
	movl	4(%rsi), %r15d
	movl	%r14d, %r13d
	shrl	$4, %r13d
	andb	$31, %r13b
	movb	2(%rsi), %sil
	shrl	$9, %r14d
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB145_20
###SPA### trampoline_fmt_64
# %bb.18:
	movb	%sil, 7(%rsp)           # 1-byte Spill
	movl	$16, %esi
	movq	%rdi, %r12
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	movb	7(%rsp), %sil           # 1-byte Reload
	movq	%r12, %rdi
	testb	%al, %al
	je	.LBB145_19
###SPA### trampoline_fmt_64
.LBB145_20:
###SPA## trampoline_fmt_64
	andl	$7, %r14d
	movzbl	%bpl, %r9d
	movl	%r13d, %eax
	orb	%bpl, %al
	orb	%sil, %al
	cmpb	$7, %al
	ja	.LBB145_22
###SPA### trampoline_fmt_64
# %bb.21:
	movq	744(%rbx), %rax
	jmp	.LBB145_23
.LBB145_15:
###SPA## trampoline_fmt_64
	shrb	%bpl
	andb	$60, %bpl
	movl	%r14d, %eax
	shrb	$3, %al
	orb	%bpl, %al
	movq	736(%rbx), %rdx
	movq	744(%rbx), %rsi
	orb	$64, %al
	movb	%al, (%rdx,%rsi)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB145_16:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rdx
	movb	$15, (%rdx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rdx
	leaq	1(%rdx), %rsi
	movq	%rsi, 744(%rbx)
	movb	$-73, 1(%rax,%rdx)
	addq	$1, 744(%rbx)
	movzbl	%r14b, %edx
	movq	%r15, %rdi
	movl	%r12d, %esi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi # TAILCALL
.LBB145_22:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	shrb	%bpl
	andb	$60, %bpl
	movl	%esi, %eax
	shrb	$2, %al
	andb	$62, %al
	orb	%bpl, %al
	movl	%r13d, %ecx
	shrb	$3, %cl
	orb	%al, %cl
	movq	736(%rbx), %rax
	movq	744(%rbx), %rdx
	orb	$64, %cl
	movb	%cl, (%rax,%rdx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB145_23:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-73, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	movzbl	%r13b, %edx
	movzbl	%sil, %ecx
	movl	%r15d, %esi
	movl	%r14d, %r8d
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii # TAILCALL
.LBB145_5:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	movl	%r15d, %eax
	orb	%bpl, %al
	cmpb	$7, %al
	jbe	.LBB145_7
###SPA### trampoline_fmt_64
.LBB145_8:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	shrb	%al
	andb	$60, %al
	shrb	$3, %r15b
	orb	%al, %r15b
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	orb	$64, %r15b
	movb	%r15b, (%rax,%rcx)
	movq	744(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 744(%rbx)
.LBB145_9:
###SPA## trampoline_fmt_64
	movq	736(%rbx), %rcx
	movb	$15, (%rcx,%rax)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	movb	$-73, 1(%rax,%rcx)
	movq	736(%rbx), %rax
	movq	744(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%rbx)
	andb	$7, %r14b
	shlb	$3, %bpl
	orb	%r14b, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	addq	$1, 744(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB145_12:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	jmp	.LBB145_13
.LBB145_19:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	jmp	.LBB145_20
.LBB145_24:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$818, 0                 # imm = 0x332
	callq	abort@PLT
.Lfunc_end145:
	.size	_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE, .Lfunc_end145-_ZN2js3jit18AssemblerX86Shared6movzwlERKNS0_7OperandENS0_8RegisterE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE: # @_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movsbl	%sil, %eax
	movl	%esi, %r15d
	leaq	8(%rdi), %r14
	cmpl	%esi, %eax
	jne	.LBB146_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	8(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rbx)
	jae	.LBB146_5
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB146_4
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r14), %rax
.LBB146_5:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-125, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	andb	$7, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	movq	8(%rbx), %rax
	addq	$1, %rax
	movq	%rax, 8(%rbx)
	addq	(%rbx), %rax
	movl	$1, %ecx
	movl	%r15d, %ebx
	jmp	.LBB146_18
.LBB146_6:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rax
	movq	16(%rbx), %rcx
	leaq	16(%rax), %rdx
	testb	%bpl, %bpl
	je	.LBB146_7
###SPA### trampoline_fmt_64
# %bb.12:
	cmpq	%rdx, %rcx
	jae	.LBB146_16
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB146_15
###SPA### trampoline_fmt_64
# %bb.14:
	movq	(%r14), %rax
.LBB146_16:
###SPA## trampoline_fmt_64
	movl	%ebp, %ecx
	shrb	$3, %cl
	movq	(%rbx), %rdx
	orb	$72, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-127, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	andb	$7, %bpl
	orb	$-64, %bpl
	movb	%bpl, 1(%rax,%rcx)
	jmp	.LBB146_17
.LBB146_7:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	jae	.LBB146_11
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB146_10
###SPA### trampoline_fmt_64
# %bb.9:
	movq	(%r14), %rax
.LBB146_11:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$5, 1(%rax,%rcx)
.LBB146_17:
###SPA## trampoline_fmt_64
	movq	(%r14), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%r14)
	movq	(%rbx), %rcx
	movl	%r15d, %ebx
	movb	%bl, 1(%rcx,%rax)
	movb	%bh, 2(%rcx,%rax)
	movl	%r15d, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rcx,%rax)
	addq	%rcx, %rax
	addq	$4, %rax
	shrl	$24, %ebx
	movl	$4, %ecx
.LBB146_18:
###SPA## trampoline_fmt_64
	movb	%bl, (%rax)
	addq	%rcx, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB146_4:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB146_5
.LBB146_15:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB146_16
.LBB146_10:
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB146_11
.Lfunc_end146:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE, .Lfunc_end146-_ZN2js3jit11X86Encoding16BaseAssemblerX647addq_irEiNS1_10RegisterIDE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType,"axG",@progbits,_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType,comdat
	.hidden	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType # -- Begin function _ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType
	.weak	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType
	.p2align	4, 0x90
	.type	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType,@function
_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType: # @_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebp
	movl	%edx, %r15d
	movq	%rdi, %rbx
	movl	%ebp, %eax
	addb	$-1, %al
	movb	(%rsi), %r12b
	cmpb	$1, %al
	ja	.LBB147_8
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	736(%rbx), %r14
	movq	744(%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%rbx)
	jae	.LBB147_4
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB147_3
###SPA### trampoline_fmt_64
.LBB147_4:
###SPA## trampoline_fmt_64
	addq	$744, %rbx              # imm = 0x2E8
	movl	%r12d, %eax
	orb	%r15b, %al
	cmpb	$7, %al
	ja	.LBB147_6
###SPA### trampoline_fmt_64
# %bb.5:
	movq	(%rbx), %rax
	jmp	.LBB147_7
.LBB147_8:
###SPA## trampoline_fmt_64
	movabsq	$-2251799813685248, %r13 # imm = 0xFFF8000000000000
	cmpb	%r15b, %r12b
	jne	.LBB147_14
###SPA### trampoline_fmt_64
# %bb.9:
	movq	%rbx, %rdi
	callq	_ZN2js3jit17MacroAssemblerX646asMasmEv
	movzbl	%bpl, %esi
	shlq	$47, %rsi
	orq	%r13, %rsi
	movl	$11, %edx
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	leaq	736(%rbx), %r14
	leaq	744(%rbx), %rbp
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB147_13
###SPA### trampoline_fmt_64
# %bb.10:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB147_12
###SPA### trampoline_fmt_64
# %bb.11:
	movq	(%rbp), %rax
.LBB147_13:
###SPA## trampoline_fmt_64
	movl	%r15d, %ecx
	shrb	%cl
	orb	$73, %cl
	movq	(%r14), %rdx
	andb	$125, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbp), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbp)
	movq	(%r14), %rcx
	movb	$51, 1(%rcx,%rax)
	movq	(%rbp), %rax
	addq	$1, %rax
	movq	%rax, (%rbp)
	addq	(%r14), %rax
	shlb	$3, %r15b
	orb	$-61, %r15b
	jmp	.LBB147_19
.LBB147_6:
###SPA## trampoline_fmt_64
	movl	%r15d, %eax
	shrb	%al
	andb	$60, %al
	movl	%r12d, %ecx
	shrb	$3, %cl
	orb	%al, %cl
	movq	(%rbx), %rax
	movq	(%r14), %rdx
	orb	$64, %cl
	movb	%cl, (%rdx,%rax)
	movq	(%rbx), %rax
	addq	$1, %rax
	movq	%rax, (%rbx)
.LBB147_7:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	movb	$-117, (%rcx,%rax)
	movq	(%rbx), %rax
	addq	$1, %rax
	movq	%rax, (%rbx)
	addq	(%r14), %rax
	andb	$7, %r12b
	shlb	$3, %r15b
	orb	%r12b, %r15b
	orb	$-64, %r15b
	movq	%rbx, %rbp
	jmp	.LBB147_19
.LBB147_14:
###SPA## trampoline_fmt_64
	movq	%rsi, %r14
	movzbl	%bpl, %esi
	shlq	$47, %rsi
	orq	%r13, %rsi
	movzbl	%r15b, %edx
	movq	%rbx, %rdi
	callq	_ZN2js3jit9Assembler4movqENS0_7ImmWordENS0_8RegisterE
	movb	(%r14), %r12b
	leaq	736(%rbx), %r14
	leaq	744(%rbx), %rbp
	movq	744(%rbx), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%rbx)
	jae	.LBB147_18
###SPA### trampoline_fmt_64
# %bb.15:
	movl	$16, %esi
	movq	%r14, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB147_17
###SPA### trampoline_fmt_64
# %bb.16:
	movq	(%rbp), %rax
.LBB147_18:
###SPA## trampoline_fmt_64
	movl	%r15d, %ecx
	shrb	%cl
	andb	$52, %cl
	movl	%r12d, %edx
	shrb	$3, %dl
	orb	%cl, %dl
	movq	(%r14), %rcx
	orb	$72, %dl
	movb	%dl, (%rcx,%rax)
	movq	(%rbp), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rbp)
	movq	(%r14), %rcx
	movb	$51, 1(%rcx,%rax)
	movq	(%rbp), %rax
	addq	$1, %rax
	movq	%rax, (%rbp)
	addq	(%r14), %rax
	andb	$7, %r12b
	shlb	$3, %r15b
	orb	%r12b, %r15b
	orb	$-64, %r15b
.LBB147_19:
###SPA## trampoline_fmt_64
	movb	%r15b, (%rax)
	addq	$1, (%rbp)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB147_3:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	jmp	.LBB147_4
.LBB147_12:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB147_13
.LBB147_17:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%rbx)
	movq	$0, 744(%rbx)
	xorl	%eax, %eax
	jmp	.LBB147_18
.Lfunc_end147:
	.size	_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType, .Lfunc_end147-_ZN2js3jit17MacroAssemblerX6414unboxNonDoubleERKNS0_12ValueOperandENS0_8RegisterE11JSValueType
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE,"axG",@progbits,_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE,comdat
	.hidden	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE # -- Begin function _ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
	.weak	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
	.p2align	4, 0x90
	.type	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE,@function
_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE: # @_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movzwl	(%rdx), %ebx
	movl	%ebx, %eax
	andb	$15, %al
	cmpb	$4, %al
	ja	.LBB148_23
###SPA### trampoline_fmt_64
# %bb.1:
	movl	%esi, %r12d
	movq	%rdi, %r14
	movl	%ebx, %eax
	andl	$15, %eax
	leaq	.LJTI148_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB148_2:
###SPA## trampoline_fmt_64
	shrl	$4, %ebx
	movl	%ebx, %ebp
	andb	$31, %bpl
	movq	744(%r14), %rax
	addq	$16, %rax
	cmpq	%rax, 752(%r14)
	jae	.LBB148_5
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	736(%r14), %rdi
	movl	$16, %esi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB148_4
###SPA### trampoline_fmt_64
.LBB148_5:
###SPA## trampoline_fmt_64
	cmpb	$7, %bpl
	ja	.LBB148_7
###SPA### trampoline_fmt_64
.LBB148_6:
###SPA## trampoline_fmt_64
	movq	744(%r14), %rax
	jmp	.LBB148_8
.LBB148_22:
###SPA## trampoline_fmt_64
	addq	$736, %r14              # imm = 0x2E0
	movslq	4(%rdx), %rdx
	movq	%r14, %rdi
	movl	%r12d, %esi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv # TAILCALL
.LBB148_10:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	leaq	736(%r14), %rbp
	movl	4(%rdx), %r15d
	shrl	$4, %ebx
	andb	$31, %bl
	movq	744(%r14), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r14)
	jae	.LBB148_14
###SPA### trampoline_fmt_64
# %bb.11:
	movl	$16, %esi
	movq	%rbp, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB148_13
###SPA### trampoline_fmt_64
# %bb.12:
	movq	744(%r14), %rax
.LBB148_14:
###SPA## trampoline_fmt_64
	movzbl	%bl, %edx
	shrb	$3, %bl
	movq	736(%r14), %rcx
	orb	$72, %bl
	movb	%bl, (%rcx,%rax)
	movq	736(%r14), %rax
	movq	744(%r14), %rcx
	leaq	1(%rcx), %rsi
	movq	%rsi, 744(%r14)
	movb	$-57, 1(%rax,%rcx)
	addq	$1, 744(%r14)
	xorl	%ecx, %ecx
	movq	%rbp, %rdi
	movl	%r15d, %esi
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDEi
	jmp	.LBB148_15
.LBB148_16:
###SPA## trampoline_fmt_64
	leaq	736(%r14), %r15
	movl	4(%rdx), %esi
	movl	%ebx, %ebp
	shrl	$4, %ebp
	andb	$31, %bpl
	movb	2(%rdx), %r13b
	shrl	$9, %ebx
	andl	$7, %ebx
	movq	744(%r14), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 752(%r14)
	jae	.LBB148_21
###SPA### trampoline_fmt_64
# %bb.17:
	movl	%esi, 4(%rsp)           # 4-byte Spill
	movl	$16, %esi
	movq	%r15, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB148_19
###SPA### trampoline_fmt_64
# %bb.18:
	movq	744(%r14), %rax
.LBB148_20:
###SPA## trampoline_fmt_64
	movl	4(%rsp), %esi           # 4-byte Reload
.LBB148_21:
###SPA## trampoline_fmt_64
	movl	%r13d, %ecx
	shrb	$2, %cl
	andb	$54, %cl
	movl	%ebp, %edx
	shrb	$3, %dl
	orb	%cl, %dl
	movq	736(%r14), %rcx
	orb	$72, %dl
	movb	%dl, (%rcx,%rax)
	movq	736(%r14), %rax
	movq	744(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r14)
	movb	$-57, 1(%rax,%rcx)
	addq	$1, 744(%r14)
	movzbl	%bpl, %edx
	movzbl	%r13b, %ecx
	xorl	%r9d, %r9d
	movq	%r15, %rdi
	movl	%ebx, %r8d
	callq	_ZN2js3jit11X86Encoding13BaseAssembler23X86InstructionFormatter11memoryModRMEiNS1_10RegisterIDES4_ii
.LBB148_15:
###SPA## trampoline_fmt_64
	movq	736(%r14), %rax
	movq	744(%r14), %rcx
	movl	%r12d, %ebx
	movb	%bl, (%rax,%rcx)
	movb	%bh, 1(%rax,%rcx)
	movl	%r12d, %edx
	shrl	$16, %edx
	movb	%dl, 2(%rax,%rcx)
	shrl	$24, %ebx
	movb	%bl, 3(%rax,%rcx)
	jmp	.LBB148_9
.LBB148_4:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r14)
	movq	$0, 744(%r14)
	cmpb	$7, %bpl
	jbe	.LBB148_6
###SPA### trampoline_fmt_64
.LBB148_7:
###SPA## trampoline_fmt_64
	shrb	$3, %bpl
	movq	736(%r14), %rax
	movq	744(%r14), %rcx
	orb	$64, %bpl
	movb	%bpl, (%rax,%rcx)
	movq	744(%r14), %rax
	addq	$1, %rax
	movq	%rax, 744(%r14)
.LBB148_8:
###SPA## trampoline_fmt_64
	andb	$7, %bl
	orb	$-72, %bl
	movq	736(%r14), %rcx
	movb	%bl, (%rcx,%rax)
	movq	736(%r14), %rax
	movq	744(%r14), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 744(%r14)
	movl	%r12d, %ebx
	movb	%bl, 1(%rax,%rcx)
	movb	%bh, 2(%rax,%rcx)
	movl	%r12d, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rax,%rcx)
	shrl	$24, %ebx
	movb	%bl, 4(%rax,%rcx)
.LBB148_9:
###SPA## trampoline_fmt_64
	addq	$4, 744(%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB148_13:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r14)
	movq	$0, 744(%r14)
	xorl	%eax, %eax
	jmp	.LBB148_14
.LBB148_19:
###SPA## trampoline_fmt_64
	movb	$1, 1016(%r14)
	movq	$0, 744(%r14)
	xorl	%eax, %eax
	jmp	.LBB148_20
.LBB148_23:
###SPA## trampoline_fmt_64
	leaq	.L.str.109(%rip), %rax
	movq	gMozCrashReason@GOTPCREL(%rip), %rcx
	movq	%rax, (%rcx)
	movl	$474, 0                 # imm = 0x1DA
	callq	abort@PLT
.Lfunc_end148:
	.size	_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE, .Lfunc_end148-_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE
	.cfi_endproc
	.section	.rodata._ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE,"aG",@progbits,_ZN2js3jit9Assembler4movqENS0_5Imm32ERKNS0_7OperandE,comdat
	.p2align	2
.LJTI148_0:
	.long	.LBB148_2-.LJTI148_0
	.long	.LBB148_10-.LJTI148_0
	.long	.LBB148_23-.LJTI148_0
	.long	.LBB148_16-.LJTI148_0
	.long	.LBB148_22-.LJTI148_0
                                        # -- End function
	.section	.text._ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv,"axG",@progbits,_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv,comdat
	.hidden	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv # -- Begin function _ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv
	.weak	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv
	.p2align	4, 0x90
	.type	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv,@function
_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv: # @_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rbp
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	leaq	16(%rax), %rcx
	cmpq	%rcx, 16(%rdi)
	jae	.LBB149_4
###SPA### trampoline_fmt_64
# %bb.1:
	movl	$16, %esi
	movq	%rbx, %rdi
	callq	_ZN7mozilla6VectorIhLm256EN2js3jit26AssemblerBufferAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB149_3
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%rbx), %rax
.LBB149_4:
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	movb	$72, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$-57, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$4, 1(%rax,%rcx)
	movq	(%rbx), %rax
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movb	$37, 1(%rax,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	leaq	1(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rbp, %rax
	movb	%al, 1(%rsi,%rcx)
	movb	%ah, 2(%rsi,%rcx)
	movl	%eax, %edx
	shrl	$16, %edx
	movb	%dl, 3(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 4(%rsi,%rcx)
	movq	(%rbx), %rsi
	movq	8(%rbx), %rcx
	leaq	4(%rcx), %rdx
	movq	%rdx, 8(%rbx)
	movl	%r14d, %eax
	movb	%al, 4(%rsi,%rcx)
	movb	%ah, 5(%rsi,%rcx)
	movl	%r14d, %edx
	shrl	$16, %edx
	movb	%dl, 6(%rsi,%rcx)
	shrl	$24, %eax
	movb	%al, 7(%rsi,%rcx)
	addq	$4, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB149_3:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movb	$1, 280(%rbx)
	movq	$0, 8(%rbx)
	xorl	%eax, %eax
	jmp	.LBB149_4
.Lfunc_end149:
	.size	_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv, .Lfunc_end149-_ZN2js3jit11X86Encoding16BaseAssemblerX649movq_i32mEiPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev,"axG",@progbits,_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev # -- Begin function _ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev
	.weak	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev,@function
_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev: # @_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	jmp	_ZdlPv@PLT              # TAILCALL
.Lfunc_end150:
	.size	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev, .Lfunc_end150-_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc,"axG",@progbits,_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc # -- Begin function _ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc
	.weak	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc,@function
_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc: # @_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	%rsi, %rax
	leaq	8(%rdi), %rdx
	movl	$2, %esi
	movq	%rax, %rdi
	jmp	_ZN2js15TraceValueArrayEP8JSTracermPN2JS5ValueE # TAILCALL
.Lfunc_end151:
	.size	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc, .Lfunc_end151-_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm12MetadataTierD2Ev,"axG",@progbits,_ZN2js4wasm12MetadataTierD2Ev,comdat
	.hidden	_ZN2js4wasm12MetadataTierD2Ev # -- Begin function _ZN2js4wasm12MetadataTierD2Ev
	.weak	_ZN2js4wasm12MetadataTierD2Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm12MetadataTierD2Ev,@function
_ZN2js4wasm12MetadataTierD2Ev:          # @_ZN2js4wasm12MetadataTierD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	480(%rdi), %rdi
	leaq	504(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB152_2
###SPA### trampoline_fmt_64
# %bb.1:
	callq	free@PLT
.LBB152_2:
###SPA## trampoline_fmt_64
	cmpq	$0, 464(%r14)
	movq	456(%r14), %rdi
	je	.LBB152_5
###SPA### trampoline_fmt_64
# %bb.3:
	xorl	%r15d, %r15d
	movl	$8, %ebx
	.p2align	4, 0x90
.LBB152_4:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdi,%rbx), %rdi
	callq	free@PLT
	movq	456(%r14), %rax
	movq	$0, (%rax,%rbx)
	addq	$1, %r15
	movq	456(%r14), %rdi
	addq	$16, %rbx
	cmpq	464(%r14), %r15
	jb	.LBB152_4
###SPA### trampoline_fmt_64
.LBB152_5:
###SPA## trampoline_fmt_64
	cmpq	$16, %rdi
	je	.LBB152_7
###SPA### trampoline_fmt_64
# %bb.6:
	callq	free@PLT
.LBB152_7:
###SPA## trampoline_fmt_64
	movq	424(%r14), %rbx
	movq	432(%r14), %rax
	testq	%rax, %rax
	jle	.LBB152_15
###SPA### trampoline_fmt_64
# %bb.8:
	leaq	(%rax,%rax,2), %r15
	shlq	$6, %r15
	addq	%rbx, %r15
	.p2align	4, 0x90
.LBB152_9:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	88(%rbx), %rdi
	leaq	112(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB152_11
###SPA### trampoline_fmt_64
# %bb.10:                               #   in Loop: Header=BB152_9 Depth=1
	callq	free@PLT
.LBB152_11:                             #   in Loop: Header=BB152_9 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	leaq	24(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB152_13
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB152_9 Depth=1
	callq	free@PLT
.LBB152_13:                             #   in Loop: Header=BB152_9 Depth=1
###SPA## trampoline_fmt_64
	addq	$192, %rbx
	cmpq	%r15, %rbx
	jb	.LBB152_9
###SPA### trampoline_fmt_64
# %bb.14:
	movq	424(%r14), %rbx
.LBB152_15:
###SPA## trampoline_fmt_64
	cmpq	$192, %rbx
	je	.LBB152_17
###SPA### trampoline_fmt_64
# %bb.16:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB152_17:
###SPA## trampoline_fmt_64
	movq	400(%r14), %rbx
	movq	408(%r14), %rax
	testq	%rax, %rax
	jle	.LBB152_25
###SPA### trampoline_fmt_64
# %bb.18:
	leaq	(%rax,%rax,2), %r15
	shlq	$6, %r15
	addq	%rbx, %r15
	.p2align	4, 0x90
.LBB152_19:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	88(%rbx), %rdi
	leaq	112(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB152_21
###SPA### trampoline_fmt_64
# %bb.20:                               #   in Loop: Header=BB152_19 Depth=1
	callq	free@PLT
.LBB152_21:                             #   in Loop: Header=BB152_19 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	leaq	24(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB152_23
###SPA### trampoline_fmt_64
# %bb.22:                               #   in Loop: Header=BB152_19 Depth=1
	callq	free@PLT
.LBB152_23:                             #   in Loop: Header=BB152_19 Depth=1
###SPA## trampoline_fmt_64
	addq	$192, %rbx
	cmpq	%r15, %rbx
	jb	.LBB152_19
###SPA### trampoline_fmt_64
# %bb.24:
	movq	400(%r14), %rbx
.LBB152_25:
###SPA## trampoline_fmt_64
	cmpq	$192, %rbx
	je	.LBB152_27
###SPA### trampoline_fmt_64
# %bb.26:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB152_27:
###SPA## trampoline_fmt_64
	leaq	112(%r14), %rdi
	callq	_ZN7mozilla5ArrayINS_6VectorIN2js4wasm8TrapSiteELm0ENS2_17SystemAllocPolicyEEELm12EED2Ev
	movq	88(%r14), %rdi
	cmpq	$8, %rdi
	je	.LBB152_29
###SPA### trampoline_fmt_64
# %bb.28:
	callq	free@PLT
.LBB152_29:
###SPA## trampoline_fmt_64
	movq	64(%r14), %rdi
	cmpq	$28, %rdi
	je	.LBB152_31
###SPA### trampoline_fmt_64
# %bb.30:
	callq	free@PLT
.LBB152_31:
###SPA## trampoline_fmt_64
	movq	8(%r14), %rdi
	addq	$32, %r14
	cmpq	%r14, %rdi
	je	.LBB152_32
###SPA### trampoline_fmt_64
# %bb.33:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB152_32:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end152:
	.size	_ZN2js4wasm12MetadataTierD2Ev, .Lfunc_end152-_ZN2js4wasm12MetadataTierD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm4CodeD2Ev,"axG",@progbits,_ZN2js4wasm4CodeD2Ev,comdat
	.hidden	_ZN2js4wasm4CodeD2Ev    # -- Begin function _ZN2js4wasm4CodeD2Ev
	.weak	_ZN2js4wasm4CodeD2Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm4CodeD2Ev,@function
_ZN2js4wasm4CodeD2Ev:                   # @_ZN2js4wasm4CodeD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	136(%rdi), %rbx
	movq	144(%rdi), %r15
	testq	%r15, %r15
	jle	.LBB153_6
###SPA### trampoline_fmt_64
# %bb.1:
	shlq	$5, %r15
	addq	%rbx, %r15
	.p2align	4, 0x90
.LBB153_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$12, %rdi
	je	.LBB153_4
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB153_2 Depth=1
	callq	free@PLT
.LBB153_4:                              #   in Loop: Header=BB153_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbx
	cmpq	%r15, %rbx
	jb	.LBB153_2
###SPA### trampoline_fmt_64
# %bb.5:
	movq	136(%r14), %rbx
.LBB153_6:
###SPA## trampoline_fmt_64
	cmpq	$32, %rbx
	je	.LBB153_8
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB153_8:
###SPA## trampoline_fmt_64
	movq	120(%r14), %rdi
	movq	$0, 120(%r14)
	testq	%rdi, %rdi
	je	.LBB153_10
###SPA### trampoline_fmt_64
# %bb.9:
	callq	free@PLT
.LBB153_10:
###SPA## trampoline_fmt_64
	movq	112(%r14), %rdi
	movq	$0, 112(%r14)
	testq	%rdi, %rdi
	je	.LBB153_12
###SPA### trampoline_fmt_64
# %bb.11:
	callq	free@PLT
.LBB153_12:
###SPA## trampoline_fmt_64
	movq	80(%r14), %rbx
	movq	88(%r14), %rax
	testq	%rax, %rax
	jle	.LBB153_18
###SPA### trampoline_fmt_64
# %bb.13:
	leaq	(%rbx,%rax,8), %r15
	.p2align	4, 0x90
.LBB153_14:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB153_16
###SPA### trampoline_fmt_64
# %bb.15:                               #   in Loop: Header=BB153_14 Depth=1
	callq	free@PLT
.LBB153_16:                             #   in Loop: Header=BB153_14 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r15, %rbx
	jb	.LBB153_14
###SPA### trampoline_fmt_64
# %bb.17:
	movq	80(%r14), %rbx
.LBB153_18:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB153_20
###SPA### trampoline_fmt_64
# %bb.19:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB153_20:
###SPA## trampoline_fmt_64
	leaq	40(%r14), %rdi
	callq	_ZN7mozilla6detail9MutexImplD2Ev@PLT
	movq	32(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB153_23
###SPA### trampoline_fmt_64
# %bb.21:
	lock		subq	$1, 8(%rbx)
	jne	.LBB153_23
###SPA### trampoline_fmt_64
# %bb.22:
	addq	$8, %rbx
	movq	-8(%rbx), %rax
	addq	$-8, %rbx
	movq	%rbx, %rdi
	callq	*(%rax)
	movq	%rbx, %rdi
	callq	free@PLT
.LBB153_23:
###SPA## trampoline_fmt_64
	movq	16(%r14), %rbx
	movq	$0, 16(%r14)
	testq	%rbx, %rbx
	je	.LBB153_25
###SPA### trampoline_fmt_64
# %bb.24:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm8CodeTierD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB153_25:
###SPA## trampoline_fmt_64
	movq	8(%r14), %rbx
	movq	$0, 8(%r14)
	testq	%rbx, %rbx
	je	.LBB153_26
###SPA### trampoline_fmt_64
# %bb.27:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm8CodeTierD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB153_26:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end153:
	.size	_ZN2js4wasm4CodeD2Ev, .Lfunc_end153-_ZN2js4wasm4CodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm8CodeTierD2Ev,"axG",@progbits,_ZN2js4wasm8CodeTierD2Ev,comdat
	.hidden	_ZN2js4wasm8CodeTierD2Ev # -- Begin function _ZN2js4wasm8CodeTierD2Ev
	.weak	_ZN2js4wasm8CodeTierD2Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm8CodeTierD2Ev,@function
_ZN2js4wasm8CodeTierD2Ev:               # @_ZN2js4wasm8CodeTierD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	88(%rdi), %rdi
	cmpq	$24, %rdi
	je	.LBB154_2
###SPA### trampoline_fmt_64
# %bb.1:
	callq	free@PLT
.LBB154_2:
###SPA## trampoline_fmt_64
	movq	64(%r14), %rbx
	movq	72(%r14), %rax
	testq	%rax, %rax
	jle	.LBB154_10
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	(%rbx,%rax,8), %r12
	.p2align	4, 0x90
.LBB154_4:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r15
	movq	$0, (%rbx)
	testq	%r15, %r15
	je	.LBB154_8
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB154_4 Depth=1
	movq	40(%r15), %rdi
	cmpq	$28, %rdi
	je	.LBB154_7
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB154_4 Depth=1
	callq	free@PLT
.LBB154_7:                              #   in Loop: Header=BB154_4 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	callq	_ZN2js4wasm11CodeSegmentD2Ev
	movq	%r15, %rdi
	callq	free@PLT
.LBB154_8:                              #   in Loop: Header=BB154_4 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r12, %rbx
	jb	.LBB154_4
###SPA### trampoline_fmt_64
# %bb.9:
	movq	64(%r14), %rbx
.LBB154_10:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB154_12
###SPA### trampoline_fmt_64
# %bb.11:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB154_12:
###SPA## trampoline_fmt_64
	leaq	24(%r14), %rdi
	callq	_ZN7mozilla6detail9MutexImplD2Ev@PLT
	movq	16(%r14), %rbx
	movq	$0, 16(%r14)
	testq	%rbx, %rbx
	je	.LBB154_14
###SPA### trampoline_fmt_64
# %bb.13:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm11CodeSegmentD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB154_14:
###SPA## trampoline_fmt_64
	movq	8(%r14), %rbx
	movq	$0, 8(%r14)
	testq	%rbx, %rbx
	je	.LBB154_15
###SPA### trampoline_fmt_64
# %bb.16:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm12MetadataTierD2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB154_15:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end154:
	.size	_ZN2js4wasm8CodeTierD2Ev, .Lfunc_end154-_ZN2js4wasm8CodeTierD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv,"axG",@progbits,_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv,comdat
	.hidden	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv # -- Begin function _ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv
	.weak	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv,@function
_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv: # @_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movl	$9, %eax
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end155:
	.size	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv, .Lfunc_end155-_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv,"axG",@progbits,_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv,comdat
	.hidden	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv # -- Begin function _ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv
	.weak	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv,@function
_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv: # @_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movq	8(%rdi), %rax
	movq	16(%rdi), %rsi
	addq	$8, %rsi
	movq	24(%rdi), %rdx
	leaq	32(%rdi), %rcx
	movq	%rax, %rdi
	jmp	_ZN2js4wasm12CompileTier2ERKNS0_11CompileArgsERKN7mozilla6VectorIhLm0ENS_17SystemAllocPolicyEEERKNS0_6ModuleEPNS4_6AtomicIbLNS4_14MemoryOrderingE2EvEE # TAILCALL
.Lfunc_end156:
	.size	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv, .Lfunc_end156-_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev,"axG",@progbits,_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev,comdat
	.hidden	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev # -- Begin function _ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev
	.weak	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev,@function
_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev: # @_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	leaq	_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	24(%rdi), %rax
	movq	176(%rax), %rdi
	movq	$0, 176(%rax)
	testq	%rdi, %rdi
	je	.LBB157_2
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%rdi), %rax
	callq	*24(%rax)
.LBB157_2:
###SPA## trampoline_fmt_64
	movq	24(%r15), %rax
	xorl	%ecx, %ecx
	xchgl	%ecx, 188(%rax)
	movq	24(%r15), %rbx
	testq	%rbx, %rbx
	je	.LBB157_5
###SPA### trampoline_fmt_64
# %bb.3:
	lock		subq	$1, 8(%rbx)
	jne	.LBB157_5
###SPA### trampoline_fmt_64
# %bb.4:
	addq	$8, %rbx
	movq	-8(%rbx), %rax
	addq	$-8, %rbx
	movq	%rbx, %rdi
	callq	*(%rax)
	movq	%rbx, %rdi
	callq	free@PLT
.LBB157_5:
###SPA## trampoline_fmt_64
	movq	16(%r15), %r14
	testq	%r14, %r14
	je	.LBB157_10
###SPA### trampoline_fmt_64
# %bb.6:
	lock		subq	$1, (%r14)
	jne	.LBB157_10
###SPA### trampoline_fmt_64
# %bb.7:
	movq	8(%r14), %rdi
	cmpq	$1, %rdi
	je	.LBB157_9
###SPA### trampoline_fmt_64
# %bb.8:
	callq	free@PLT
.LBB157_9:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	callq	free@PLT
.LBB157_10:
###SPA## trampoline_fmt_64
	movq	8(%r15), %rbx
	testq	%rbx, %rbx
	je	.LBB157_17
###SPA### trampoline_fmt_64
# %bb.11:
	lock		subq	$1, (%rbx)
	jne	.LBB157_17
###SPA### trampoline_fmt_64
# %bb.12:
	movq	24(%rbx), %rdi
	movq	$0, 24(%rbx)
	testq	%rdi, %rdi
	je	.LBB157_14
###SPA### trampoline_fmt_64
# %bb.13:
	callq	free@PLT
.LBB157_14:
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	movq	$0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB157_16
###SPA### trampoline_fmt_64
# %bb.15:
	callq	free@PLT
.LBB157_16:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB157_17:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end157:
	.size	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev, .Lfunc_end157-_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev,"axG",@progbits,_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev,comdat
	.hidden	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev # -- Begin function _ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev
	.weak	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev,@function
_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev: # @_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv@PLT              # TAILCALL
.Lfunc_end158:
	.size	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev, .Lfunc_end158-_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv,"axG",@progbits,_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv,comdat
	.hidden	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv # -- Begin function _ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv
	.weak	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv
	.p2align	4, 0x90
	.type	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv,@function
_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv: # @_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movl	$1, %eax
	xchgl	%eax, 32(%rdi)
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end159:
	.size	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv, .Lfunc_end159-_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB160_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	leaq	24(%r14), %rax
	cmpq	%rax, %rsi
	je	.LBB160_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	.LBB160_14
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rdx
	shrq	$60, %rdx
	jne	.LBB160_44
###SPA### trampoline_fmt_64
# %bb.4:
	leaq	(%rcx,%rcx), %r15
	leaq	(,%rcx,8), %rdx
	testq	%rdx, %rdx
	je	.LBB160_16
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rdx), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB160_17
.LBB160_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB160_43
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$61, %rcx
	jne	.LBB160_43
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$2, %rsi
	testq	%rsi, %rsi
	je	.LBB160_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB160_12
.LBB160_10:
###SPA## trampoline_fmt_64
	movl	$16, %r15d
	jmp	.LBB160_19
.LBB160_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB160_12:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	shrq	$2, %r15
	movq	(%r14), %rsi
	leaq	24(%r14), %rax
	cmpq	%rax, %rsi
	je	.LBB160_18
###SPA### trampoline_fmt_64
.LBB160_13:
###SPA## trampoline_fmt_64
	movq	%r15, %rax
	shrq	$62, %rax
	je	.LBB160_15
###SPA### trampoline_fmt_64
	jmp	.LBB160_44
.LBB160_14:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
.LBB160_15:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,4), %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	jne	.LBB160_42
###SPA### trampoline_fmt_64
	jmp	.LBB160_44
.LBB160_16:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB160_17:
###SPA## trampoline_fmt_64
	movl	$1, %edi
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdi
	subq	%rdx, %rdi
	xorl	%ecx, %ecx
	cmpq	$3, %rdi
	seta	%cl
	orq	%rcx, %r15
	cmpq	%rax, %rsi
	jne	.LBB160_13
###SPA### trampoline_fmt_64
.LBB160_18:
###SPA## trampoline_fmt_64
	movq	%r15, %rax
	shrq	$62, %rax
	jne	.LBB160_44
###SPA### trampoline_fmt_64
.LBB160_19:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,4), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB160_44
###SPA### trampoline_fmt_64
# %bb.20:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	jle	.LBB160_42
###SPA### trampoline_fmt_64
# %bb.21:
	movq	(%r14), %rcx
	leaq	(%rcx,%rdx,4), %r10
	leaq	4(%rcx), %rsi
	cmpq	%rsi, %r10
	movq	%rsi, %r9
	cmovaq	%r10, %r9
	movq	%rcx, %rdi
	notq	%rdi
	addq	%rdi, %r9
	shrq	$2, %r9
	addq	$1, %r9
	cmpq	$8, %r9
	jb	.LBB160_22
###SPA### trampoline_fmt_64
# %bb.23:
	cmpq	%rsi, %r10
	cmovaq	%r10, %rsi
	leaq	(%rsi,%rdi), %rdx
	andq	$-4, %rdx
	addq	%rcx, %rdx
	addq	$4, %rdx
	cmpq	%rdx, %rax
	jae	.LBB160_26
###SPA### trampoline_fmt_64
# %bb.24:
	leaq	(%rsi,%rdi), %rdx
	addq	$4, %rdx
	andq	$-4, %rdx
	addq	%rax, %rdx
	cmpq	%rcx, %rdx
	jbe	.LBB160_26
###SPA### trampoline_fmt_64
.LBB160_22:
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
.LBB160_35:
###SPA## trampoline_fmt_64
	leaq	4(%rcx), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rcx, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %r9d
	shrl	$2, %r9d
	addl	$1, %r9d
	andq	$7, %r9
	je	.LBB160_39
###SPA### trampoline_fmt_64
# %bb.36:
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB160_37:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	(%rcx,%rbx,4), %edi
	movl	%edi, (%rsi,%rbx,4)
	addq	$-4, %rdx
	addq	$1, %rbx
	cmpq	%rbx, %r9
	jne	.LBB160_37
###SPA### trampoline_fmt_64
# %bb.38:
	subq	%rdx, %rcx
	subq	%rdx, %rsi
.LBB160_39:
###SPA## trampoline_fmt_64
	cmpq	$28, %r8
	jb	.LBB160_42
###SPA### trampoline_fmt_64
# %bb.40:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB160_41:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	(%rcx,%rdi), %edx
	movl	%edx, (%rsi,%rdi)
	movl	4(%rcx,%rdi), %edx
	movl	%edx, 4(%rsi,%rdi)
	movl	8(%rcx,%rdi), %edx
	movl	%edx, 8(%rsi,%rdi)
	movl	12(%rcx,%rdi), %edx
	movl	%edx, 12(%rsi,%rdi)
	movl	16(%rcx,%rdi), %edx
	movl	%edx, 16(%rsi,%rdi)
	movl	20(%rcx,%rdi), %edx
	movl	%edx, 20(%rsi,%rdi)
	movl	24(%rcx,%rdi), %edx
	movl	%edx, 24(%rsi,%rdi)
	movl	28(%rcx,%rdi), %edx
	movl	%edx, 28(%rsi,%rdi)
	leaq	(%rcx,%rdi), %rdx
	addq	$32, %rdx
	addq	$32, %rdi
	cmpq	%r10, %rdx
	jb	.LBB160_41
###SPA### trampoline_fmt_64
	jmp	.LBB160_42
.LBB160_26:
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-8, %r8
	leaq	-8(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$3, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$24, %rsi
	jae	.LBB160_28
###SPA### trampoline_fmt_64
# %bb.27:
	xorl	%ebx, %ebx
	testq	%rdi, %rdi
	jne	.LBB160_31
###SPA### trampoline_fmt_64
	jmp	.LBB160_33
.LBB160_28:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	addq	%rdi, %rsi
	addq	$-1, %rsi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB160_29:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rbx,4), %xmm0
	movups	16(%rcx,%rbx,4), %xmm1
	movups	%xmm0, (%rax,%rbx,4)
	movups	%xmm1, 16(%rax,%rbx,4)
	movups	32(%rcx,%rbx,4), %xmm0
	movups	48(%rcx,%rbx,4), %xmm1
	movups	%xmm0, 32(%rax,%rbx,4)
	movups	%xmm1, 48(%rax,%rbx,4)
	movups	64(%rcx,%rbx,4), %xmm0
	movups	80(%rcx,%rbx,4), %xmm1
	movups	%xmm0, 64(%rax,%rbx,4)
	movups	%xmm1, 80(%rax,%rbx,4)
	movups	96(%rcx,%rbx,4), %xmm0
	movups	112(%rcx,%rbx,4), %xmm1
	movups	%xmm0, 96(%rax,%rbx,4)
	movups	%xmm1, 112(%rax,%rbx,4)
	addq	$32, %rbx
	addq	$4, %rsi
	jne	.LBB160_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rdi, %rdi
	je	.LBB160_33
###SPA### trampoline_fmt_64
.LBB160_31:
###SPA## trampoline_fmt_64
	leaq	16(,%rbx,4), %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB160_32:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB160_32
###SPA### trampoline_fmt_64
.LBB160_33:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	jne	.LBB160_34
###SPA### trampoline_fmt_64
.LBB160_42:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB160_43:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB160_34:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	leaq	(%rcx,%r8,4), %rcx
	leaq	(%rax,%r8,4), %rsi
	jmp	.LBB160_35
.LBB160_44:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end160:
	.size	_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end160-_ZN7mozilla6VectorIjLm8EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.weak	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm,@function
_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm: # @_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	8(%rdi), %rax
	movq	%rax, %r15
	subq	%rsi, %r15
	jae	.LBB161_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %rbx
	subq	%rax, %rbx
	movq	16(%r14), %rcx
	subq	%rax, %rcx
	cmpq	%rbx, %rcx
	jae	.LBB161_5
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB161_3
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%r14), %rax
.LBB161_5:
###SPA## trampoline_fmt_64
	testq	%rbx, %rbx
	jle	.LBB161_7
###SPA### trampoline_fmt_64
# %bb.6:
	leaq	(%rax,%rax,2), %rdi
	shlq	$3, %rdi
	addq	(%r14), %rdi
	leaq	(%rbx,%rbx,2), %rax
	leaq	(%rdi,%rax,8), %rcx
	movq	%rdi, %rax
	notq	%rax
	addq	%rcx, %rax
	movabsq	$-6148914691236517205, %rcx # imm = 0xAAAAAAAAAAAAAAAB
	mulq	%rcx
	shrq	$4, %rdx
	leaq	(%rdx,%rdx,2), %rax
	leaq	24(,%rax,8), %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	movq	8(%r14), %rax
.LBB161_7:
###SPA## trampoline_fmt_64
	addq	%rbx, %rax
	jmp	.LBB161_17
.LBB161_8:
###SPA## trampoline_fmt_64
	movq	%r15, %rcx
	negq	%rcx
	jns	.LBB161_16
###SPA### trampoline_fmt_64
# %bb.9:
	leaq	(%rax,%rax,2), %r12
	shlq	$3, %r12
	addq	(%r14), %r12
	leaq	(%rcx,%rcx,2), %rax
	leaq	(%r12,%rax,8), %rbx
	.p2align	4, 0x90
.LBB161_10:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	movq	$0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB161_12
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB161_10 Depth=1
	callq	free@PLT
.LBB161_12:                             #   in Loop: Header=BB161_10 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB161_14
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB161_10 Depth=1
	callq	free@PLT
.LBB161_14:                             #   in Loop: Header=BB161_10 Depth=1
###SPA## trampoline_fmt_64
	addq	$24, %rbx
	cmpq	%r12, %rbx
	jb	.LBB161_10
###SPA### trampoline_fmt_64
# %bb.15:
	movq	8(%r14), %rax
.LBB161_16:
###SPA## trampoline_fmt_64
	subq	%r15, %rax
.LBB161_17:
###SPA## trampoline_fmt_64
	movq	%rax, 8(%r14)
	movb	$1, %al
.LBB161_18:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB161_3:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB161_18
.Lfunc_end161:
	.size	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm, .Lfunc_end161-_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	cmpq	$1, %rsi
	jne	.LBB162_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$24, (%r15)
	je	.LBB162_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r15), %rax
	testq	%rax, %rax
	je	.LBB162_14
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rax, %rcx
	shrq	$57, %rcx
	jne	.LBB162_32
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rax, %rcx
	shlq	$4, %rcx
	leaq	(%rax,%rax), %r14
	leaq	(%rcx,%rcx,2), %rax
	testq	%rax, %rax
	je	.LBB162_15
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB162_16
.LBB162_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r15), %rsi
	jb	.LBB162_31
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$58, %rcx
	jne	.LBB162_31
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	leaq	(%rsi,%rsi,2), %rax
	testq	%rax, %rax
	je	.LBB162_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rax
	bsrq	%rax, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB162_12
.LBB162_10:
###SPA## trampoline_fmt_64
	movl	$1, %r14d
	jmp	.LBB162_13
.LBB162_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB162_12:
###SPA## trampoline_fmt_64
	movl	$1, %eax
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rax
	movabsq	$-6148914691236517205, %rcx # imm = 0xAAAAAAAAAAAAAAAB
	mulq	%rcx
	movq	%rdx, %r14
	shrq	$4, %r14
	cmpq	$24, (%r15)
	jne	.LBB162_17
###SPA### trampoline_fmt_64
.LBB162_13:
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	movq	%r14, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm # TAILCALL
.LBB162_14:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movl	$1, %r14d
	jmp	.LBB162_18
.LBB162_15:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB162_16:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$23, %rdx
	seta	%al
	orq	%rax, %r14
.LBB162_17:
###SPA## trampoline_fmt_64
	movq	%r14, %rax
	shrq	$59, %rax
	jne	.LBB162_32
###SPA### trampoline_fmt_64
.LBB162_18:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r14,8), %rax
	leaq	(%rax,%rax,2), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB162_32
###SPA### trampoline_fmt_64
# %bb.19:
	movq	%rax, %r12
	movq	(%r15), %rdi
	cmpq	$0, 8(%r15)
	jle	.LBB162_30
###SPA### trampoline_fmt_64
# %bb.20:
	xorl	%eax, %eax
	.p2align	4, 0x90
.LBB162_21:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdi,%rax), %rcx
	movq	$0, (%rdi,%rax)
	movq	%rcx, (%r12,%rax)
	movq	8(%rdi,%rax), %rcx
	movq	$0, 8(%rdi,%rax)
	movq	%rcx, 8(%r12,%rax)
	movl	16(%rdi,%rax), %ecx
	movl	%ecx, 16(%r12,%rax)
	movq	(%r15), %rbx
	movq	8(%r15), %rcx
	leaq	(%rcx,%rcx,2), %rdx
	leaq	(%rbx,%rdx,8), %r13
	leaq	(%rdi,%rax), %rdx
	addq	$24, %rdx
	addq	$24, %rax
	cmpq	%r13, %rdx
	jb	.LBB162_21
###SPA### trampoline_fmt_64
# %bb.22:
	testq	%rcx, %rcx
	jle	.LBB162_29
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB162_23:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	movq	$0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB162_25
###SPA### trampoline_fmt_64
# %bb.24:                               #   in Loop: Header=BB162_23 Depth=1
	callq	free@PLT
.LBB162_25:                             #   in Loop: Header=BB162_23 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB162_27
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB162_23 Depth=1
	callq	free@PLT
.LBB162_27:                             #   in Loop: Header=BB162_23 Depth=1
###SPA## trampoline_fmt_64
	addq	$24, %rbx
	cmpq	%r13, %rbx
	jb	.LBB162_23
###SPA### trampoline_fmt_64
# %bb.28:
	movq	(%r15), %rdi
	jmp	.LBB162_30
.LBB162_29:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
.LBB162_30:
###SPA## trampoline_fmt_64
	callq	free@PLT
	movq	%r12, (%r15)
	movq	%r14, 16(%r15)
	movb	$1, %al
.LBB162_31:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB162_32:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB162_31
.Lfunc_end162:
	.size	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end162-_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.weak	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,@function
_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm: # @_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rax
	shrq	$59, %rax
	jne	.LBB163_15
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%rsi,8), %rax
	leaq	(%rax,%rax,2), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB163_15
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rax, %r12
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	jle	.LBB163_12
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r15), %rax
	leaq	(%rcx,%rcx,2), %rcx
	leaq	(%rax,%rcx,8), %rcx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB163_4:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rdx), %rsi
	movq	$0, (%rax,%rdx)
	movq	%rsi, (%r12,%rdx)
	movq	8(%rax,%rdx), %rsi
	movq	$0, 8(%rax,%rdx)
	movq	%rsi, 8(%r12,%rdx)
	movl	16(%rax,%rdx), %esi
	movl	%esi, 16(%r12,%rdx)
	leaq	(%rax,%rdx), %rsi
	addq	$24, %rsi
	addq	$24, %rdx
	cmpq	%rcx, %rsi
	jb	.LBB163_4
###SPA### trampoline_fmt_64
# %bb.5:
	movq	8(%r15), %rax
	testq	%rax, %rax
	jle	.LBB163_12
###SPA### trampoline_fmt_64
# %bb.6:
	movq	(%r15), %rbx
	leaq	(%rax,%rax,2), %rax
	leaq	(%rbx,%rax,8), %r13
	.p2align	4, 0x90
.LBB163_7:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	movq	$0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB163_9
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB163_7 Depth=1
	callq	free@PLT
.LBB163_9:                              #   in Loop: Header=BB163_7 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB163_11
###SPA### trampoline_fmt_64
# %bb.10:                               #   in Loop: Header=BB163_7 Depth=1
	callq	free@PLT
.LBB163_11:                             #   in Loop: Header=BB163_7 Depth=1
###SPA## trampoline_fmt_64
	addq	$24, %rbx
	cmpq	%r13, %rbx
	jb	.LBB163_7
###SPA### trampoline_fmt_64
.LBB163_12:
###SPA## trampoline_fmt_64
	movq	%r12, (%r15)
	movq	%r14, 16(%r15)
	movb	$1, %al
.LBB163_13:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB163_15:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB163_13
.Lfunc_end163:
	.size	_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm, .Lfunc_end163-_ZN7mozilla6VectorIN2js4wasm6ImportELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	cmpq	$1, %rsi
	jne	.LBB164_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$16, (%r15)
	je	.LBB164_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	je	.LBB164_19
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$58, %rax
	jne	.LBB164_43
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$5, %rax
	leaq	(%rcx,%rcx), %r12
	je	.LBB164_28
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB164_29
.LBB164_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r15), %rsi
	jb	.LBB164_42
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$59, %rcx
	jne	.LBB164_42
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$4, %rsi
	je	.LBB164_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB164_12
.LBB164_10:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB164_13
.LBB164_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB164_12:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r12
	shrq	$4, %r12
	cmpq	$16, (%r15)
	jne	.LBB164_30
###SPA### trampoline_fmt_64
.LBB164_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r12, %rsi
	shlq	$4, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB164_43
###SPA### trampoline_fmt_64
# %bb.14:
	movq	%rax, %r14
	movq	8(%r15), %rax
	testq	%rax, %rax
	jle	.LBB164_41
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r15), %rcx
	shlq	$4, %rax
	addq	%rcx, %rax
	leaq	16(%rcx), %rdx
	cmpq	%rdx, %rax
	cmovaq	%rax, %rdx
	movq	%rcx, %rsi
	notq	%rsi
	addq	%rdx, %rsi
	movl	%esi, %edi
	shrl	$4, %edi
	addl	$1, %edi
	andq	$3, %rdi
	je	.LBB164_20
###SPA### trampoline_fmt_64
# %bb.16:
	negq	%rdi
	movq	%r14, %rdx
	.p2align	4, 0x90
.LBB164_17:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx), %rbx
	movq	$0, (%rcx)
	movq	%rbx, (%rdx)
	movq	8(%rcx), %rbx
	movq	%rbx, 8(%rdx)
	addq	$16, %rcx
	addq	$16, %rdx
	addq	$1, %rdi
	jne	.LBB164_17
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	$48, %rsi
	jae	.LBB164_21
###SPA### trampoline_fmt_64
	jmp	.LBB164_23
.LBB164_19:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB164_30
.LBB164_20:
###SPA## trampoline_fmt_64
	movq	%r14, %rdx
	cmpq	$48, %rsi
	jb	.LBB164_23
###SPA### trampoline_fmt_64
.LBB164_21:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB164_22:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rsi), %rdi
	movq	$0, (%rcx,%rsi)
	movq	%rdi, (%rdx,%rsi)
	movq	8(%rcx,%rsi), %rdi
	movq	%rdi, 8(%rdx,%rsi)
	movq	16(%rcx,%rsi), %rdi
	movq	$0, 16(%rcx,%rsi)
	movq	%rdi, 16(%rdx,%rsi)
	movq	24(%rcx,%rsi), %rdi
	movq	%rdi, 24(%rdx,%rsi)
	movq	32(%rcx,%rsi), %rdi
	movq	$0, 32(%rcx,%rsi)
	movq	%rdi, 32(%rdx,%rsi)
	movq	40(%rcx,%rsi), %rdi
	movq	%rdi, 40(%rdx,%rsi)
	movq	48(%rcx,%rsi), %rdi
	movq	$0, 48(%rcx,%rsi)
	movq	%rdi, 48(%rdx,%rsi)
	movq	56(%rcx,%rsi), %rdi
	movq	%rdi, 56(%rdx,%rsi)
	leaq	(%rcx,%rsi), %rdi
	addq	$64, %rdi
	addq	$64, %rsi
	cmpq	%rax, %rdi
	jb	.LBB164_22
###SPA### trampoline_fmt_64
.LBB164_23:
###SPA## trampoline_fmt_64
	movq	8(%r15), %r13
	testq	%r13, %r13
	jle	.LBB164_41
###SPA### trampoline_fmt_64
# %bb.24:
	movq	(%r15), %rbx
	shlq	$4, %r13
	addq	%rbx, %r13
	.p2align	4, 0x90
.LBB164_25:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	movq	$0, (%rbx)
	testq	%rdi, %rdi
	je	.LBB164_27
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB164_25 Depth=1
	callq	free@PLT
.LBB164_27:                             #   in Loop: Header=BB164_25 Depth=1
###SPA## trampoline_fmt_64
	addq	$16, %rbx
	cmpq	%r13, %rbx
	jb	.LBB164_25
###SPA### trampoline_fmt_64
	jmp	.LBB164_41
.LBB164_28:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB164_29:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$15, %rdx
	seta	%al
	orq	%rax, %r12
	movq	%r12, %rax
	shrq	$60, %rax
	jne	.LBB164_43
###SPA### trampoline_fmt_64
.LBB164_30:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r12, %rsi
	shlq	$4, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB164_43
###SPA### trampoline_fmt_64
# %bb.31:
	movq	%rax, %r14
	movq	(%r15), %rdi
	cmpq	$0, 8(%r15)
	jle	.LBB164_40
###SPA### trampoline_fmt_64
# %bb.32:
	xorl	%eax, %eax
	.p2align	4, 0x90
.LBB164_33:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdi,%rax), %rcx
	movq	$0, (%rdi,%rax)
	movq	%rcx, (%r14,%rax)
	movq	8(%rdi,%rax), %rcx
	movq	%rcx, 8(%r14,%rax)
	movq	(%r15), %r13
	movq	8(%r15), %rcx
	movq	%rcx, %rbx
	shlq	$4, %rbx
	addq	%r13, %rbx
	leaq	(%rdi,%rax), %rdx
	addq	$16, %rdx
	addq	$16, %rax
	cmpq	%rbx, %rdx
	jb	.LBB164_33
###SPA### trampoline_fmt_64
# %bb.34:
	testq	%rcx, %rcx
	jle	.LBB164_39
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB164_35:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r13), %rdi
	movq	$0, (%r13)
	testq	%rdi, %rdi
	je	.LBB164_37
###SPA### trampoline_fmt_64
# %bb.36:                               #   in Loop: Header=BB164_35 Depth=1
	callq	free@PLT
.LBB164_37:                             #   in Loop: Header=BB164_35 Depth=1
###SPA## trampoline_fmt_64
	addq	$16, %r13
	cmpq	%rbx, %r13
	jb	.LBB164_35
###SPA### trampoline_fmt_64
# %bb.38:
	movq	(%r15), %rdi
	jmp	.LBB164_40
.LBB164_39:
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
.LBB164_40:
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB164_41:
###SPA## trampoline_fmt_64
	movq	%r14, (%r15)
	movq	%r12, 16(%r15)
	movb	$1, %al
.LBB164_42:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB164_43:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB164_42
.Lfunc_end164:
	.size	_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end164-_ZN7mozilla6VectorIN2js4wasm6ExportELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.weak	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm,@function
_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm: # @_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	8(%rdi), %r12
	movq	%r12, %r13
	subq	%rsi, %r13
	jae	.LBB165_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r15
	subq	%r12, %r15
	movq	16(%r14), %rax
	subq	%r12, %rax
	cmpq	%r15, %rax
	jae	.LBB165_5
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB165_3
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%r14), %r12
.LBB165_5:
###SPA## trampoline_fmt_64
	testq	%r15, %r15
	jle	.LBB165_7
###SPA### trampoline_fmt_64
# %bb.6:
	shlq	$3, %r12
	addq	(%r14), %r12
	leaq	(%r12,%r15,8), %rax
	movq	%r12, %rcx
	notq	%rcx
	leaq	(%rcx,%rax), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	xorl	%esi, %esi
	movq	%r12, %rdi
	callq	memset@PLT
	movq	8(%r14), %r12
.LBB165_7:
###SPA## trampoline_fmt_64
	addq	%r15, %r12
	jmp	.LBB165_18
.LBB165_8:
###SPA## trampoline_fmt_64
	movq	%r13, %rax
	negq	%rax
	jns	.LBB165_17
###SPA### trampoline_fmt_64
# %bb.9:
	shlq	$3, %r12
	addq	(%r14), %r12
	leaq	(%r12,%rax,8), %rbx
	.p2align	4, 0x90
.LBB165_10:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r15
	testq	%r15, %r15
	je	.LBB165_15
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB165_10 Depth=1
	lock		subq	$1, (%r15)
	jne	.LBB165_15
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB165_10 Depth=1
	movq	48(%r15), %rdi
	cmpq	$1, %rdi
	je	.LBB165_14
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB165_10 Depth=1
	callq	free@PLT
.LBB165_14:                             #   in Loop: Header=BB165_10 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	callq	free@PLT
.LBB165_15:                             #   in Loop: Header=BB165_10 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r12, %rbx
	jb	.LBB165_10
###SPA### trampoline_fmt_64
# %bb.16:
	movq	8(%r14), %r12
.LBB165_17:
###SPA## trampoline_fmt_64
	subq	%r13, %r12
.LBB165_18:
###SPA## trampoline_fmt_64
	movq	%r12, 8(%r14)
	movb	$1, %al
.LBB165_19:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB165_3:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB165_19
.Lfunc_end165:
	.size	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm, .Lfunc_end165-_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	cmpq	$1, %rsi
	jne	.LBB166_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$8, (%r15)
	je	.LBB166_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	je	.LBB166_19
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB166_49
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r12
	je	.LBB166_31
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB166_32
.LBB166_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r15), %rsi
	jb	.LBB166_48
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB166_48
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB166_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB166_12
.LBB166_10:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB166_13
.LBB166_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB166_12:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r12
	shrq	$3, %r12
	cmpq	$8, (%r15)
	jne	.LBB166_33
###SPA### trampoline_fmt_64
.LBB166_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r12,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB166_49
###SPA### trampoline_fmt_64
# %bb.14:
	movq	%rax, %r14
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	jle	.LBB166_47
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r15), %rax
	leaq	(%rax,%rcx,8), %rcx
	leaq	8(%rax), %rdx
	cmpq	%rdx, %rcx
	cmovaq	%rcx, %rdx
	movq	%rax, %rsi
	notq	%rsi
	addq	%rdx, %rsi
	movl	%esi, %edx
	shrl	$3, %edx
	addl	$1, %edx
	andq	$7, %rdx
	je	.LBB166_20
###SPA### trampoline_fmt_64
# %bb.16:
	xorl	%ebp, %ebp
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB166_17:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rbp,8), %rbx
	movq	%rbx, (%r14,%rbp,8)
	movq	$0, (%rax,%rbp,8)
	addq	$-8, %rdi
	addq	$1, %rbp
	cmpq	%rbp, %rdx
	jne	.LBB166_17
###SPA### trampoline_fmt_64
# %bb.18:
	subq	%rdi, %rax
	movq	%r14, %rdx
	subq	%rdi, %rdx
	cmpq	$56, %rsi
	jae	.LBB166_21
###SPA### trampoline_fmt_64
	jmp	.LBB166_23
.LBB166_19:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB166_33
.LBB166_20:
###SPA## trampoline_fmt_64
	movq	%r14, %rdx
	cmpq	$56, %rsi
	jb	.LBB166_23
###SPA### trampoline_fmt_64
.LBB166_21:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB166_22:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rsi), %rdi
	movq	%rdi, (%rdx,%rsi)
	movq	$0, (%rax,%rsi)
	movq	8(%rax,%rsi), %rdi
	movq	%rdi, 8(%rdx,%rsi)
	movq	$0, 8(%rax,%rsi)
	movq	16(%rax,%rsi), %rdi
	movq	%rdi, 16(%rdx,%rsi)
	movq	$0, 16(%rax,%rsi)
	movq	24(%rax,%rsi), %rdi
	movq	%rdi, 24(%rdx,%rsi)
	movq	$0, 24(%rax,%rsi)
	movq	32(%rax,%rsi), %rdi
	movq	%rdi, 32(%rdx,%rsi)
	movq	$0, 32(%rax,%rsi)
	movq	40(%rax,%rsi), %rdi
	movq	%rdi, 40(%rdx,%rsi)
	movq	$0, 40(%rax,%rsi)
	movq	48(%rax,%rsi), %rdi
	movq	%rdi, 48(%rdx,%rsi)
	movq	$0, 48(%rax,%rsi)
	movq	56(%rax,%rsi), %rdi
	movq	%rdi, 56(%rdx,%rsi)
	movq	$0, 56(%rax,%rsi)
	leaq	(%rax,%rsi), %rdi
	addq	$64, %rdi
	addq	$64, %rsi
	cmpq	%rcx, %rdi
	jb	.LBB166_22
###SPA### trampoline_fmt_64
.LBB166_23:
###SPA## trampoline_fmt_64
	movq	8(%r15), %rax
	testq	%rax, %rax
	jle	.LBB166_47
###SPA### trampoline_fmt_64
# %bb.24:
	movq	(%r15), %rbp
	leaq	(,%rax,8), %r13
	addq	%rbp, %r13
	.p2align	4, 0x90
.LBB166_25:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB166_30
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB166_25 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB166_30
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB166_25 Depth=1
	movq	48(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB166_29
###SPA### trampoline_fmt_64
# %bb.28:                               #   in Loop: Header=BB166_25 Depth=1
	callq	free@PLT
.LBB166_29:                             #   in Loop: Header=BB166_25 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB166_30:                             #   in Loop: Header=BB166_25 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbp
	cmpq	%r13, %rbp
	jb	.LBB166_25
###SPA### trampoline_fmt_64
	jmp	.LBB166_47
.LBB166_31:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB166_32:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r12
	movq	%r12, %rax
	shrq	$61, %rax
	jne	.LBB166_49
###SPA### trampoline_fmt_64
.LBB166_33:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r12,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB166_49
###SPA### trampoline_fmt_64
# %bb.34:
	movq	%rax, %r14
	movq	(%r15), %rdi
	cmpq	$0, 8(%r15)
	jle	.LBB166_46
###SPA### trampoline_fmt_64
# %bb.35:
	movq	%r14, %rax
	.p2align	4, 0x90
.LBB166_36:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdi), %rcx
	movq	%rcx, (%rax)
	movq	$0, (%rdi)
	addq	$8, %rax
	addq	$8, %rdi
	movq	(%r15), %rbx
	movq	8(%r15), %rcx
	leaq	(%rbx,%rcx,8), %rbp
	cmpq	%rbp, %rdi
	jb	.LBB166_36
###SPA### trampoline_fmt_64
# %bb.37:
	testq	%rcx, %rcx
	jle	.LBB166_45
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB166_38:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r13
	testq	%r13, %r13
	je	.LBB166_43
###SPA### trampoline_fmt_64
# %bb.39:                               #   in Loop: Header=BB166_38 Depth=1
	lock		subq	$1, (%r13)
	jne	.LBB166_43
###SPA### trampoline_fmt_64
# %bb.40:                               #   in Loop: Header=BB166_38 Depth=1
	movq	48(%r13), %rdi
	cmpq	$1, %rdi
	je	.LBB166_42
###SPA### trampoline_fmt_64
# %bb.41:                               #   in Loop: Header=BB166_38 Depth=1
	callq	free@PLT
.LBB166_42:                             #   in Loop: Header=BB166_38 Depth=1
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
	callq	free@PLT
.LBB166_43:                             #   in Loop: Header=BB166_38 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%rbp, %rbx
	jb	.LBB166_38
###SPA### trampoline_fmt_64
# %bb.44:
	movq	(%r15), %rdi
	jmp	.LBB166_46
.LBB166_45:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
.LBB166_46:
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB166_47:
###SPA## trampoline_fmt_64
	movq	%r14, (%r15)
	movq	%r12, 16(%r15)
	movb	$1, %al
.LBB166_48:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB166_49:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB166_48
.Lfunc_end166:
	.size	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end166-_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11DataSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.weak	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm,@function
_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm: # @_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	8(%rdi), %r12
	movq	%r12, %r13
	subq	%rsi, %r13
	jae	.LBB167_8
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r15
	subq	%r12, %r15
	movq	16(%r14), %rax
	subq	%r12, %rax
	cmpq	%r15, %rax
	jae	.LBB167_5
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	testb	%al, %al
	je	.LBB167_3
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%r14), %r12
.LBB167_5:
###SPA## trampoline_fmt_64
	testq	%r15, %r15
	jle	.LBB167_7
###SPA### trampoline_fmt_64
# %bb.6:
	shlq	$3, %r12
	addq	(%r14), %r12
	leaq	(%r12,%r15,8), %rax
	movq	%r12, %rcx
	notq	%rcx
	leaq	(%rcx,%rax), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	xorl	%esi, %esi
	movq	%r12, %rdi
	callq	memset@PLT
	movq	8(%r14), %r12
.LBB167_7:
###SPA## trampoline_fmt_64
	addq	%r15, %r12
	jmp	.LBB167_18
.LBB167_8:
###SPA## trampoline_fmt_64
	movq	%r13, %rax
	negq	%rax
	jns	.LBB167_17
###SPA### trampoline_fmt_64
# %bb.9:
	shlq	$3, %r12
	addq	(%r14), %r12
	leaq	(%r12,%rax,8), %rbx
	.p2align	4, 0x90
.LBB167_10:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r15
	testq	%r15, %r15
	je	.LBB167_15
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB167_10 Depth=1
	lock		subq	$1, (%r15)
	jne	.LBB167_15
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB167_10 Depth=1
	movq	64(%r15), %rdi
	leaq	88(%r15), %rax
	cmpq	%rax, %rdi
	je	.LBB167_14
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB167_10 Depth=1
	callq	free@PLT
.LBB167_14:                             #   in Loop: Header=BB167_10 Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	callq	free@PLT
.LBB167_15:                             #   in Loop: Header=BB167_10 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r12, %rbx
	jb	.LBB167_10
###SPA### trampoline_fmt_64
# %bb.16:
	movq	8(%r14), %r12
.LBB167_17:
###SPA## trampoline_fmt_64
	subq	%r13, %r12
.LBB167_18:
###SPA## trampoline_fmt_64
	movq	%r12, 8(%r14)
	movb	$1, %al
.LBB167_19:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB167_3:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB167_19
.Lfunc_end167:
	.size	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm, .Lfunc_end167-_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE6resizeEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	cmpq	$1, %rsi
	jne	.LBB168_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$8, (%r15)
	je	.LBB168_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	je	.LBB168_19
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB168_49
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r12
	je	.LBB168_31
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB168_32
.LBB168_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r15), %rsi
	jb	.LBB168_48
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB168_48
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB168_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB168_12
.LBB168_10:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB168_13
.LBB168_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB168_12:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r12
	shrq	$3, %r12
	cmpq	$8, (%r15)
	jne	.LBB168_33
###SPA### trampoline_fmt_64
.LBB168_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r12,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB168_49
###SPA### trampoline_fmt_64
# %bb.14:
	movq	%rax, %r14
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	jle	.LBB168_47
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r15), %rax
	leaq	(%rax,%rcx,8), %rcx
	leaq	8(%rax), %rdx
	cmpq	%rdx, %rcx
	cmovaq	%rcx, %rdx
	movq	%rax, %rsi
	notq	%rsi
	addq	%rdx, %rsi
	movl	%esi, %edx
	shrl	$3, %edx
	addl	$1, %edx
	andq	$7, %rdx
	je	.LBB168_20
###SPA### trampoline_fmt_64
# %bb.16:
	xorl	%ebp, %ebp
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB168_17:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rbp,8), %rbx
	movq	%rbx, (%r14,%rbp,8)
	movq	$0, (%rax,%rbp,8)
	addq	$-8, %rdi
	addq	$1, %rbp
	cmpq	%rbp, %rdx
	jne	.LBB168_17
###SPA### trampoline_fmt_64
# %bb.18:
	subq	%rdi, %rax
	movq	%r14, %rdx
	subq	%rdi, %rdx
	cmpq	$56, %rsi
	jae	.LBB168_21
###SPA### trampoline_fmt_64
	jmp	.LBB168_23
.LBB168_19:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB168_33
.LBB168_20:
###SPA## trampoline_fmt_64
	movq	%r14, %rdx
	cmpq	$56, %rsi
	jb	.LBB168_23
###SPA### trampoline_fmt_64
.LBB168_21:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB168_22:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rsi), %rdi
	movq	%rdi, (%rdx,%rsi)
	movq	$0, (%rax,%rsi)
	movq	8(%rax,%rsi), %rdi
	movq	%rdi, 8(%rdx,%rsi)
	movq	$0, 8(%rax,%rsi)
	movq	16(%rax,%rsi), %rdi
	movq	%rdi, 16(%rdx,%rsi)
	movq	$0, 16(%rax,%rsi)
	movq	24(%rax,%rsi), %rdi
	movq	%rdi, 24(%rdx,%rsi)
	movq	$0, 24(%rax,%rsi)
	movq	32(%rax,%rsi), %rdi
	movq	%rdi, 32(%rdx,%rsi)
	movq	$0, 32(%rax,%rsi)
	movq	40(%rax,%rsi), %rdi
	movq	%rdi, 40(%rdx,%rsi)
	movq	$0, 40(%rax,%rsi)
	movq	48(%rax,%rsi), %rdi
	movq	%rdi, 48(%rdx,%rsi)
	movq	$0, 48(%rax,%rsi)
	movq	56(%rax,%rsi), %rdi
	movq	%rdi, 56(%rdx,%rsi)
	movq	$0, 56(%rax,%rsi)
	leaq	(%rax,%rsi), %rdi
	addq	$64, %rdi
	addq	$64, %rsi
	cmpq	%rcx, %rdi
	jb	.LBB168_22
###SPA### trampoline_fmt_64
.LBB168_23:
###SPA## trampoline_fmt_64
	movq	8(%r15), %rax
	testq	%rax, %rax
	jle	.LBB168_47
###SPA### trampoline_fmt_64
# %bb.24:
	movq	(%r15), %rbp
	leaq	(,%rax,8), %r13
	addq	%rbp, %r13
	.p2align	4, 0x90
.LBB168_25:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB168_30
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB168_25 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB168_30
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB168_25 Depth=1
	movq	64(%rbx), %rdi
	leaq	88(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB168_29
###SPA### trampoline_fmt_64
# %bb.28:                               #   in Loop: Header=BB168_25 Depth=1
	callq	free@PLT
.LBB168_29:                             #   in Loop: Header=BB168_25 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB168_30:                             #   in Loop: Header=BB168_25 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbp
	cmpq	%r13, %rbp
	jb	.LBB168_25
###SPA### trampoline_fmt_64
	jmp	.LBB168_47
.LBB168_31:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB168_32:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r12
	movq	%r12, %rax
	shrq	$61, %rax
	jne	.LBB168_49
###SPA### trampoline_fmt_64
.LBB168_33:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r12,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB168_49
###SPA### trampoline_fmt_64
# %bb.34:
	movq	%rax, %r14
	movq	(%r15), %rdi
	cmpq	$0, 8(%r15)
	jle	.LBB168_46
###SPA### trampoline_fmt_64
# %bb.35:
	movq	%r14, %rax
	.p2align	4, 0x90
.LBB168_36:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdi), %rcx
	movq	%rcx, (%rax)
	movq	$0, (%rdi)
	addq	$8, %rax
	addq	$8, %rdi
	movq	(%r15), %rbx
	movq	8(%r15), %rcx
	leaq	(%rbx,%rcx,8), %rbp
	cmpq	%rbp, %rdi
	jb	.LBB168_36
###SPA### trampoline_fmt_64
# %bb.37:
	testq	%rcx, %rcx
	jle	.LBB168_45
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB168_38:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r13
	testq	%r13, %r13
	je	.LBB168_43
###SPA### trampoline_fmt_64
# %bb.39:                               #   in Loop: Header=BB168_38 Depth=1
	lock		subq	$1, (%r13)
	jne	.LBB168_43
###SPA### trampoline_fmt_64
# %bb.40:                               #   in Loop: Header=BB168_38 Depth=1
	movq	64(%r13), %rdi
	leaq	88(%r13), %rax
	cmpq	%rax, %rdi
	je	.LBB168_42
###SPA### trampoline_fmt_64
# %bb.41:                               #   in Loop: Header=BB168_38 Depth=1
	callq	free@PLT
.LBB168_42:                             #   in Loop: Header=BB168_38 Depth=1
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
	callq	free@PLT
.LBB168_43:                             #   in Loop: Header=BB168_38 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%rbp, %rbx
	jb	.LBB168_38
###SPA### trampoline_fmt_64
# %bb.44:
	movq	(%r15), %rdi
	jmp	.LBB168_46
.LBB168_45:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
.LBB168_46:
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB168_47:
###SPA## trampoline_fmt_64
	movq	%r14, (%r15)
	movq	%r12, 16(%r15)
	movb	$1, %al
.LBB168_48:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB168_49:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB168_48
.Lfunc_end168:
	.size	_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end168-_ZN7mozilla6VectorIN2js4wasm18SerializableRefPtrIKNS2_11ElemSegmentEEELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	cmpq	$1, %rsi
	jne	.LBB169_11
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$32, (%rdi)
	je	.LBB169_2
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%rdi), %rcx
	testq	%rcx, %rcx
	je	.LBB169_5
###SPA### trampoline_fmt_64
# %bb.6:
	movq	%rcx, %rax
	shrq	$57, %rax
	jne	.LBB169_18
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rcx, %rax
	shlq	$6, %rax
	leaq	(%rcx,%rcx), %rsi
	je	.LBB169_8
###SPA### trampoline_fmt_64
# %bb.9:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB169_10
.LBB169_11:
###SPA## trampoline_fmt_64
	addq	8(%rdi), %rsi
	jb	.LBB169_18
###SPA### trampoline_fmt_64
# %bb.12:
	movq	%rsi, %rax
	shrq	$58, %rax
	jne	.LBB169_18
###SPA### trampoline_fmt_64
# %bb.13:
	shlq	$5, %rsi
	je	.LBB169_14
###SPA### trampoline_fmt_64
# %bb.15:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB169_16
.LBB169_2:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	jmp	.LBB169_3
.LBB169_14:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB169_16:
###SPA## trampoline_fmt_64
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rsi
	shrq	$5, %rsi
	cmpq	$32, (%rdi)
	je	.LBB169_3
###SPA### trampoline_fmt_64
# %bb.17:
	jmp	_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm # TAILCALL
.LBB169_3:
###SPA## trampoline_fmt_64
	jmp	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm # TAILCALL
.LBB169_5:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	jmp	_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm # TAILCALL
.LBB169_8:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB169_10:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$31, %rdx
	seta	%al
	orq	%rax, %rsi
	jmp	_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm # TAILCALL
.LBB169_18:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end169:
	.size	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end169-_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.weak	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,@function
_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm: # @_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rax
	shrq	$59, %rax
	jne	.LBB170_36
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	shlq	$5, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB170_36
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rax, %r15
	movq	8(%r12), %r9
	testq	%r9, %r9
	jle	.LBB170_33
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r12), %rcx
	shlq	$5, %r9
	addq	%rcx, %r9
	movl	$113, %r13d
	xorps	%xmm0, %xmm0
	movq	%r15, %rsi
	jmp	.LBB170_13
.LBB170_4:                              #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	movq	%r10, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rax
	movq	%rax, %rbp
	shrq	$5, %rbp
	addq	$1, %rbp
	movl	%ebp, %r11d
	andl	$3, %r11d
	cmpq	$96, %rax
	jae	.LBB170_6
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB170_13 Depth=1
	xorl	%ebp, %ebp
	testq	%r11, %r11
	jne	.LBB170_9
###SPA### trampoline_fmt_64
	jmp	.LBB170_11
.LBB170_6:                              #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	movl	$1, %eax
	subq	%rbp, %rax
	leaq	(%r11,%rax), %rbx
	addq	$-1, %rbx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB170_7:                              #   Parent Loop BB170_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movups	(%rdi,%rbp), %xmm1
	movups	16(%rdi,%rbp), %xmm2
	movups	%xmm1, -112(%r13,%rbp)
	movups	%xmm2, -96(%r13,%rbp)
	movups	32(%rdi,%rbp), %xmm1
	movups	48(%rdi,%rbp), %xmm2
	movups	%xmm1, -80(%r13,%rbp)
	movups	%xmm2, -64(%r13,%rbp)
	movups	64(%rdi,%rbp), %xmm1
	movups	80(%rdi,%rbp), %xmm2
	movups	%xmm1, -48(%r13,%rbp)
	movups	%xmm2, -32(%r13,%rbp)
	movups	96(%rdi,%rbp), %xmm1
	movups	112(%rdi,%rbp), %xmm2
	movups	%xmm1, -16(%r13,%rbp)
	movups	%xmm2, (%r13,%rbp)
	subq	$-128, %rbp
	addq	$4, %rbx
	jne	.LBB170_7
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB170_13 Depth=1
	testq	%r11, %r11
	je	.LBB170_11
###SPA### trampoline_fmt_64
.LBB170_9:                              #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	leaq	-96(,%rbp), %rbx
	addq	%r13, %rbx
	addq	%rdi, %rbp
	addq	$16, %rbp
	shlq	$5, %r11
	xorl	%eax, %eax
	.p2align	4, 0x90
.LBB170_10:                             #   Parent Loop BB170_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movups	-16(%rbp,%rax), %xmm1
	movups	(%rbp,%rax), %xmm2
	movups	%xmm1, -16(%rbx,%rax)
	movups	%xmm2, (%rbx,%rax)
	addq	$32, %rax
	cmpq	%rax, %r11
	jne	.LBB170_10
###SPA### trampoline_fmt_64
.LBB170_11:                             #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%r8, %r10
	je	.LBB170_22
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB170_13 Depth=1
	leaq	(%rdi,%r8), %rax
	leaq	(%r8,%r13), %rbp
	addq	$-112, %rbp
	jmp	.LBB170_20
	.p2align	4, 0x90
.LBB170_13:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB170_7 Depth 2
                                        #     Child Loop BB170_10 Depth 2
                                        #     Child Loop BB170_21 Depth 2
###SPA## trampoline_fmt_64
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsi)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsi)
	movq	(%rcx), %rax
	cmpq	$1, %rax
	je	.LBB170_15
###SPA### trampoline_fmt_64
# %bb.14:                               #   in Loop: Header=BB170_13 Depth=1
	leaq	8(%rcx), %rdx
	movq	%rax, (%rsi)
	movq	$1, (%rcx)
	movups	%xmm0, (%rdx)
	jmp	.LBB170_22
	.p2align	4, 0x90
.LBB170_15:                             #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	movq	$1, (%rsi)
	movq	8(%rcx), %r10
	testq	%r10, %r10
	jle	.LBB170_22
###SPA### trampoline_fmt_64
# %bb.16:                               #   in Loop: Header=BB170_13 Depth=1
	movq	(%rcx), %rdi
	cmpq	$32, %r10
	jb	.LBB170_19
###SPA### trampoline_fmt_64
# %bb.17:                               #   in Loop: Header=BB170_13 Depth=1
	leaq	(%rdi,%r10), %rax
	cmpq	$2, %rax
	jb	.LBB170_4
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB170_13 Depth=1
	leaq	(%r10,%r13), %rax
	addq	$-112, %rax
	cmpq	%rax, %rdi
	jae	.LBB170_4
###SPA### trampoline_fmt_64
.LBB170_19:                             #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	movq	%rdi, %rax
	movl	$1, %ebp
.LBB170_20:                             #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	subq	%rax, %r10
	addq	%r10, %rdi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB170_21:                             #   Parent Loop BB170_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movzbl	(%rax,%rbx), %edx
	movb	%dl, (%rbp,%rbx)
	addq	$1, %rbx
	cmpq	%rbx, %rdi
	jne	.LBB170_21
###SPA### trampoline_fmt_64
.LBB170_22:                             #   in Loop: Header=BB170_13 Depth=1
###SPA## trampoline_fmt_64
	movq	24(%rcx), %rax
	movq	%rax, 24(%rsi)
	movq	$0, 24(%rcx)
	addq	$32, %rcx
	addq	$32, %rsi
	cmpq	%r9, %rcx
	jb	.LBB170_13
###SPA### trampoline_fmt_64
# %bb.23:
	movq	8(%r12), %r13
	testq	%r13, %r13
	jle	.LBB170_33
###SPA### trampoline_fmt_64
# %bb.24:
	movq	(%r12), %rbp
	shlq	$5, %r13
	addq	%rbp, %r13
	.p2align	4, 0x90
.LBB170_25:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB170_30
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB170_25 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB170_30
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB170_25 Depth=1
	movq	8(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB170_29
###SPA### trampoline_fmt_64
# %bb.28:                               #   in Loop: Header=BB170_25 Depth=1
	callq	free@PLT
.LBB170_29:                             #   in Loop: Header=BB170_25 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	callq	free@PLT
.LBB170_30:                             #   in Loop: Header=BB170_25 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rdi
	cmpq	$1, %rdi
	je	.LBB170_32
###SPA### trampoline_fmt_64
# %bb.31:                               #   in Loop: Header=BB170_25 Depth=1
	callq	free@PLT
.LBB170_32:                             #   in Loop: Header=BB170_25 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbp
	cmpq	%r13, %rbp
	jb	.LBB170_25
###SPA### trampoline_fmt_64
.LBB170_33:
###SPA## trampoline_fmt_64
	movq	%r15, (%r12)
	movq	%r14, 16(%r12)
	movb	$1, %al
.LBB170_34:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB170_36:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB170_34
.Lfunc_end170:
	.size	_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm, .Lfunc_end170-_ZN7mozilla6VectorIN2js4wasm13CustomSectionELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm,"axG",@progbits,_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm,comdat
	.hidden	_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm # -- Begin function _ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm
	.weak	_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm,@function
_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm: # @_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rax
	shrq	$59, %rax
	jne	.LBB171_37
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	shlq	$5, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB171_37
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rax, %r15
	movq	(%r12), %rdi
	cmpq	$0, 8(%r12)
	jle	.LBB171_34
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$113, %r11d
	xorps	%xmm0, %xmm0
	movq	%r15, %rcx
	jmp	.LBB171_13
.LBB171_4:                              #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rbp
	movq	%rbp, %rsi
	shrq	$5, %rsi
	addq	$1, %rsi
	movl	%esi, %r10d
	andl	$3, %r10d
	cmpq	$96, %rbp
	jae	.LBB171_6
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB171_13 Depth=1
	xorl	%ebp, %ebp
	testq	%r10, %r10
	jne	.LBB171_9
###SPA### trampoline_fmt_64
	jmp	.LBB171_11
.LBB171_6:                              #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	movl	$1, %ebp
	subq	%rsi, %rbp
	leaq	(%r10,%rbp), %rsi
	addq	$-1, %rsi
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB171_7:                              #   Parent Loop BB171_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movups	(%rdx,%rbp), %xmm1
	movups	16(%rdx,%rbp), %xmm2
	movups	%xmm1, -112(%r11,%rbp)
	movups	%xmm2, -96(%r11,%rbp)
	movups	32(%rdx,%rbp), %xmm1
	movups	48(%rdx,%rbp), %xmm2
	movups	%xmm1, -80(%r11,%rbp)
	movups	%xmm2, -64(%r11,%rbp)
	movups	64(%rdx,%rbp), %xmm1
	movups	80(%rdx,%rbp), %xmm2
	movups	%xmm1, -48(%r11,%rbp)
	movups	%xmm2, -32(%r11,%rbp)
	movups	96(%rdx,%rbp), %xmm1
	movups	112(%rdx,%rbp), %xmm2
	movups	%xmm1, -16(%r11,%rbp)
	movups	%xmm2, (%r11,%rbp)
	subq	$-128, %rbp
	addq	$4, %rsi
	jne	.LBB171_7
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB171_13 Depth=1
	testq	%r10, %r10
	je	.LBB171_11
###SPA### trampoline_fmt_64
.LBB171_9:                              #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	leaq	(%r11,%rbp), %rsi
	addq	$-96, %rsi
	addq	%rdx, %rbp
	addq	$16, %rbp
	shlq	$5, %r10
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB171_10:                             #   Parent Loop BB171_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movups	-16(%rbp,%rbx), %xmm1
	movups	(%rbp,%rbx), %xmm2
	movups	%xmm1, -16(%rsi,%rbx)
	movups	%xmm2, (%rsi,%rbx)
	addq	$32, %rbx
	cmpq	%rbx, %r10
	jne	.LBB171_10
###SPA### trampoline_fmt_64
.LBB171_11:                             #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB171_22
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB171_13 Depth=1
	leaq	(%rdx,%r8), %rsi
	leaq	(%r11,%r8), %rbp
	addq	$-112, %rbp
	jmp	.LBB171_20
	.p2align	4, 0x90
.LBB171_13:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB171_7 Depth 2
                                        #     Child Loop BB171_10 Depth 2
                                        #     Child Loop BB171_21 Depth 2
###SPA## trampoline_fmt_64
	movq	8(%rdi), %rdx
	movq	%rdx, 8(%rcx)
	movq	16(%rdi), %rdx
	movq	%rdx, 16(%rcx)
	movq	(%rdi), %rdx
	cmpq	$1, %rdx
	je	.LBB171_15
###SPA### trampoline_fmt_64
# %bb.14:                               #   in Loop: Header=BB171_13 Depth=1
	leaq	8(%rdi), %rax
	movq	%rdx, (%rcx)
	movq	$1, (%rdi)
	movups	%xmm0, (%rax)
	jmp	.LBB171_22
	.p2align	4, 0x90
.LBB171_15:                             #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	movq	$1, (%rcx)
	movq	8(%rdi), %r9
	testq	%r9, %r9
	jle	.LBB171_22
###SPA### trampoline_fmt_64
# %bb.16:                               #   in Loop: Header=BB171_13 Depth=1
	movq	(%rdi), %rdx
	cmpq	$32, %r9
	jb	.LBB171_19
###SPA### trampoline_fmt_64
# %bb.17:                               #   in Loop: Header=BB171_13 Depth=1
	leaq	(%rdx,%r9), %rsi
	cmpq	$2, %rsi
	jb	.LBB171_4
###SPA### trampoline_fmt_64
# %bb.18:                               #   in Loop: Header=BB171_13 Depth=1
	leaq	(%r11,%r9), %rsi
	addq	$-112, %rsi
	cmpq	%rsi, %rdx
	jae	.LBB171_4
###SPA### trampoline_fmt_64
.LBB171_19:                             #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	movq	%rdx, %rsi
	movl	$1, %ebp
.LBB171_20:                             #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	subq	%rsi, %r9
	addq	%r9, %rdx
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB171_21:                             #   Parent Loop BB171_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movzbl	(%rsi,%rbx), %eax
	movb	%al, (%rbp,%rbx)
	addq	$1, %rbx
	cmpq	%rbx, %rdx
	jne	.LBB171_21
###SPA### trampoline_fmt_64
.LBB171_22:                             #   in Loop: Header=BB171_13 Depth=1
###SPA## trampoline_fmt_64
	movq	24(%rdi), %rax
	movq	%rax, 24(%rcx)
	movq	$0, 24(%rdi)
	addq	$32, %rcx
	addq	$32, %rdi
	movq	(%r12), %rbx
	movq	8(%r12), %rdx
	movq	%rdx, %rbp
	shlq	$5, %rbp
	addq	%rbx, %rbp
	cmpq	%rbp, %rdi
	jb	.LBB171_13
###SPA### trampoline_fmt_64
# %bb.23:
	testq	%rdx, %rdx
	jle	.LBB171_33
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB171_24:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	24(%rbx), %r13
	testq	%r13, %r13
	je	.LBB171_29
###SPA### trampoline_fmt_64
# %bb.25:                               #   in Loop: Header=BB171_24 Depth=1
	lock		subq	$1, (%r13)
	jne	.LBB171_29
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB171_24 Depth=1
	movq	8(%r13), %rdi
	cmpq	$1, %rdi
	je	.LBB171_28
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB171_24 Depth=1
	callq	free@PLT
.LBB171_28:                             #   in Loop: Header=BB171_24 Depth=1
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
	callq	free@PLT
.LBB171_29:                             #   in Loop: Header=BB171_24 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$1, %rdi
	je	.LBB171_31
###SPA### trampoline_fmt_64
# %bb.30:                               #   in Loop: Header=BB171_24 Depth=1
	callq	free@PLT
.LBB171_31:                             #   in Loop: Header=BB171_24 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbx
	cmpq	%rbp, %rbx
	jb	.LBB171_24
###SPA### trampoline_fmt_64
# %bb.32:
	movq	(%r12), %rdi
	jmp	.LBB171_34
.LBB171_33:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
.LBB171_34:
###SPA## trampoline_fmt_64
	callq	free@PLT
	movq	%r15, (%r12)
	movq	%r14, 16(%r12)
	movb	$1, %al
.LBB171_35:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB171_37:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB171_35
.Lfunc_end171:
	.size	_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm, .Lfunc_end171-_ZN7mozilla6detail10VectorImplIN2js4wasm13CustomSectionELm0ENS2_17SystemAllocPolicyELb0EE6growToERNS_6VectorIS4_Lm0ES5_EEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb,"axG",@progbits,_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb,comdat
	.hidden	_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb # -- Begin function _ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb
	.weak	_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb
	.p2align	4, 0x90
	.type	_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb,@function
_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb: # @_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	80(%rsp), %r14
	movq	72(%rsp), %r11
	movq	64(%rsp), %r15
	movq	56(%rsp), %r12
	movb	88(%rsp), %r13b
	movq	$0, 8(%rdi)
	leaq	_ZTVN2js4wasm6ModuleE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	%rsi, 16(%rdi)
	lock		addq	$1, (%rsi)
	movq	8(%rdx), %rax
	movq	%rax, 32(%rdi)
	movq	16(%rdx), %rax
	movq	%rax, 40(%rdi)
	movq	(%rdx), %rax
	cmpq	$24, %rax
	je	.LBB172_1
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rax, 24(%rdi)
	movq	$24, (%rdx)
	addq	$8, %rdx
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rdx)
	jmp	.LBB172_5
.LBB172_1:
###SPA## trampoline_fmt_64
	movq	$24, 24(%rdi)
	movq	8(%rdx), %rsi
	testq	%rsi, %rsi
	jle	.LBB172_5
###SPA### trampoline_fmt_64
# %bb.2:
	movq	(%rdx), %rax
	leaq	(%rsi,%rsi,2), %rdx
	leaq	(%rax,%rdx,8), %rdx
	movl	$24, %esi
	xorl	%ebx, %ebx
	movl	$113, %r10d
	.p2align	4, 0x90
.LBB172_3:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rbx), %rbp
	movq	$0, (%rax,%rbx)
	movq	%rbp, -89(%r10,%rbx)
	movq	8(%rax,%rbx), %rbp
	movq	$0, 8(%rax,%rbx)
	movq	%rbp, 8(%rsi)
	movl	16(%rax,%rbx), %ebp
	movl	%ebp, 16(%rsi)
	addq	$24, %rsi
	leaq	(%rax,%rbx), %rbp
	addq	$24, %rbp
	addq	$24, %rbx
	cmpq	%rdx, %rbp
	jb	.LBB172_3
###SPA### trampoline_fmt_64
.LBB172_5:
###SPA## trampoline_fmt_64
	movq	8(%rcx), %rax
	movq	%rax, 56(%rdi)
	movq	16(%rcx), %rax
	movq	%rax, 64(%rdi)
	movq	(%rcx), %rax
	cmpq	$16, %rax
	je	.LBB172_6
###SPA### trampoline_fmt_64
# %bb.14:
	movq	%rax, 48(%rdi)
	movq	$16, (%rcx)
	addq	$8, %rcx
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rcx)
.LBB172_15:
###SPA## trampoline_fmt_64
	movq	8(%r8), %rax
	movq	%rax, 80(%rdi)
	movq	16(%r8), %rax
	movq	%rax, 88(%rdi)
	movq	(%r8), %rax
	cmpq	$8, %rax
	je	.LBB172_16
###SPA### trampoline_fmt_64
# %bb.25:
	movq	%rax, 72(%rdi)
	movq	$8, (%r8)
	addq	$8, %r8
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r8)
.LBB172_26:
###SPA## trampoline_fmt_64
	movq	8(%r9), %rax
	movq	%rax, 104(%rdi)
	movq	16(%r9), %rax
	movq	%rax, 112(%rdi)
	movq	(%r9), %rax
	cmpq	$8, %rax
	movq	%r14, -8(%rsp)          # 8-byte Spill
	movq	%r11, -16(%rsp)         # 8-byte Spill
	je	.LBB172_27
###SPA### trampoline_fmt_64
# %bb.36:
	movq	%rax, 96(%rdi)
	movq	$8, (%r9)
	addq	$8, %r9
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r9)
.LBB172_37:
###SPA## trampoline_fmt_64
	movq	8(%r12), %rax
	movq	%rax, 128(%rdi)
	movq	16(%r12), %rax
	movq	%rax, 136(%rdi)
	movq	(%r12), %rax
	cmpq	$32, %rax
	je	.LBB172_38
###SPA### trampoline_fmt_64
# %bb.59:
	movq	%rax, 120(%rdi)
	movq	$32, (%r12)
	addq	$8, %r12
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r12)
	jmp	.LBB172_60
.LBB172_6:
###SPA## trampoline_fmt_64
	movq	$16, 48(%rdi)
	movq	8(%rcx), %rax
	testq	%rax, %rax
	jle	.LBB172_15
###SPA### trampoline_fmt_64
# %bb.7:
	movq	(%rcx), %rcx
	shlq	$4, %rax
	addq	%rcx, %rax
	leaq	16(%rcx), %rdx
	cmpq	%rdx, %rax
	cmovaq	%rax, %rdx
	movq	%rcx, %rbx
	notq	%rbx
	addq	%rdx, %rbx
	movl	%ebx, %esi
	shrl	$4, %esi
	addl	$1, %esi
	andq	$3, %rsi
	je	.LBB172_8
###SPA### trampoline_fmt_64
# %bb.9:
	negq	%rsi
	movl	$16, %edx
	.p2align	4, 0x90
.LBB172_10:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx), %rbp
	movq	$0, (%rcx)
	movq	%rbp, (%rdx)
	movq	8(%rcx), %rbp
	movq	%rbp, 8(%rdx)
	addq	$16, %rcx
	addq	$16, %rdx
	addq	$1, %rsi
	jne	.LBB172_10
###SPA### trampoline_fmt_64
# %bb.11:
	cmpq	$48, %rbx
	jb	.LBB172_15
###SPA### trampoline_fmt_64
	jmp	.LBB172_12
.LBB172_16:
###SPA## trampoline_fmt_64
	movq	$8, 72(%rdi)
	movq	8(%r8), %rcx
	testq	%rcx, %rcx
	jle	.LBB172_26
###SPA### trampoline_fmt_64
# %bb.17:
	movq	(%r8), %rax
	leaq	(%rax,%rcx,8), %r10
	leaq	8(%rax), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rax, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %esi
	shrl	$3, %esi
	addl	$1, %esi
	andq	$7, %rsi
	je	.LBB172_18
###SPA### trampoline_fmt_64
# %bb.19:
	xorl	%ebx, %ebx
	movl	$113, %edx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB172_20:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rbx,8), %rcx
	movq	%rcx, -105(%rdx,%rbx,8)
	movq	$0, (%rax,%rbx,8)
	addq	$-8, %rbp
	addq	$1, %rbx
	cmpq	%rbx, %rsi
	jne	.LBB172_20
###SPA### trampoline_fmt_64
# %bb.21:
	subq	%rbp, %rax
	subq	%rbp, %rdx
	addq	$-105, %rdx
	cmpq	$56, %r8
	jb	.LBB172_26
###SPA### trampoline_fmt_64
	jmp	.LBB172_23
.LBB172_27:
###SPA## trampoline_fmt_64
	movq	$8, 96(%rdi)
	movq	8(%r9), %rcx
	testq	%rcx, %rcx
	jle	.LBB172_37
###SPA### trampoline_fmt_64
# %bb.28:
	movq	(%r9), %rax
	leaq	(%rax,%rcx,8), %r9
	leaq	8(%rax), %rdx
	cmpq	%rdx, %r9
	cmovaq	%r9, %rdx
	movq	%rax, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %esi
	shrl	$3, %esi
	addl	$1, %esi
	andq	$7, %rsi
	je	.LBB172_29
###SPA### trampoline_fmt_64
# %bb.30:
	xorl	%ebx, %ebx
	movl	$113, %edx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB172_31:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rbx,8), %rcx
	movq	%rcx, -105(%rdx,%rbx,8)
	movq	$0, (%rax,%rbx,8)
	addq	$-8, %rbp
	addq	$1, %rbx
	cmpq	%rbx, %rsi
	jne	.LBB172_31
###SPA### trampoline_fmt_64
# %bb.32:
	subq	%rbp, %rax
	subq	%rbp, %rdx
	addq	$-105, %rdx
	cmpq	$56, %r8
	jb	.LBB172_37
###SPA### trampoline_fmt_64
	jmp	.LBB172_34
.LBB172_38:
###SPA## trampoline_fmt_64
	movq	$32, 120(%rdi)
	movq	8(%r12), %r8
	testq	%r8, %r8
	jle	.LBB172_60
###SPA### trampoline_fmt_64
# %bb.39:
	movq	(%r12), %r14
	shlq	$5, %r8
	addq	%r14, %r8
	movl	$32, %esi
	movl	$113, %r11d
	xorps	%xmm0, %xmm0
	jmp	.LBB172_40
.LBB172_46:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	movl	%r13d, %edx
	movq	%r12, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rbp
	movq	%rbp, %rcx
	shrq	$5, %rcx
	addq	$1, %rcx
	movl	%ecx, %r13d
	andl	$3, %r13d
	cmpq	$96, %rbp
	jae	.LBB172_48
###SPA### trampoline_fmt_64
# %bb.47:                               #   in Loop: Header=BB172_40 Depth=1
	xorl	%ecx, %ecx
	testq	%r13, %r13
	jne	.LBB172_51
###SPA### trampoline_fmt_64
	jmp	.LBB172_53
.LBB172_48:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	movl	$1, %ebp
	subq	%rcx, %rbp
	addq	%r13, %rbp
	addq	$-1, %rbp
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB172_49:                             #   Parent Loop BB172_40 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movups	(%rax,%rcx), %xmm1
	movups	16(%rax,%rcx), %xmm2
	movups	%xmm1, -112(%r11,%rcx)
	movups	%xmm2, -96(%r11,%rcx)
	movups	32(%rax,%rcx), %xmm1
	movups	48(%rax,%rcx), %xmm2
	movups	%xmm1, -80(%r11,%rcx)
	movups	%xmm2, -64(%r11,%rcx)
	movups	64(%rax,%rcx), %xmm1
	movups	80(%rax,%rcx), %xmm2
	movups	%xmm1, -48(%r11,%rcx)
	movups	%xmm2, -32(%r11,%rcx)
	movups	96(%rax,%rcx), %xmm1
	movups	112(%rax,%rcx), %xmm2
	movups	%xmm1, -16(%r11,%rcx)
	movups	%xmm2, (%r11,%rcx)
	subq	$-128, %rcx
	addq	$4, %rbp
	jne	.LBB172_49
###SPA### trampoline_fmt_64
# %bb.50:                               #   in Loop: Header=BB172_40 Depth=1
	testq	%r13, %r13
	je	.LBB172_53
###SPA### trampoline_fmt_64
.LBB172_51:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	leaq	(%r11,%rcx), %rbp
	addq	$-96, %rbp
	addq	%rax, %rcx
	addq	$16, %rcx
	shlq	$5, %r13
	xorl	%r10d, %r10d
	.p2align	4, 0x90
.LBB172_52:                             #   Parent Loop BB172_40 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%r10), %xmm1
	movups	(%rcx,%r10), %xmm2
	movups	%xmm1, -16(%rbp,%r10)
	movups	%xmm2, (%rbp,%r10)
	addq	$32, %r10
	cmpq	%r10, %r13
	jne	.LBB172_52
###SPA### trampoline_fmt_64
.LBB172_53:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%r9, %r12
	movl	%edx, %r13d
	je	.LBB172_58
###SPA### trampoline_fmt_64
# %bb.54:                               #   in Loop: Header=BB172_40 Depth=1
	leaq	(%rax,%r9), %rcx
	leaq	(%r11,%r9), %rbp
	addq	$-112, %rbp
	jmp	.LBB172_55
	.p2align	4, 0x90
.LBB172_40:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB172_49 Depth 2
                                        #     Child Loop BB172_52 Depth 2
                                        #     Child Loop BB172_56 Depth 2
###SPA## trampoline_fmt_64
	movq	8(%r14), %rax
	movq	%rax, 8(%rsi)
	movq	16(%r14), %rax
	movq	%rax, 16(%rsi)
	movq	(%r14), %rax
	cmpq	$1, %rax
	je	.LBB172_41
###SPA### trampoline_fmt_64
# %bb.57:                               #   in Loop: Header=BB172_40 Depth=1
	leaq	8(%r14), %rcx
	movq	%rax, (%rsi)
	movq	$1, (%r14)
	movups	%xmm0, (%rcx)
	jmp	.LBB172_58
	.p2align	4, 0x90
.LBB172_41:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	movq	$1, (%rsi)
	movq	8(%r14), %r12
	testq	%r12, %r12
	jle	.LBB172_58
###SPA### trampoline_fmt_64
# %bb.42:                               #   in Loop: Header=BB172_40 Depth=1
	movq	(%r14), %rax
	cmpq	$32, %r12
	jb	.LBB172_43
###SPA### trampoline_fmt_64
# %bb.44:                               #   in Loop: Header=BB172_40 Depth=1
	leaq	(%rax,%r12), %rcx
	cmpq	$2, %rcx
	jb	.LBB172_46
###SPA### trampoline_fmt_64
# %bb.45:                               #   in Loop: Header=BB172_40 Depth=1
	leaq	(%r11,%r12), %rcx
	addq	$-112, %rcx
	cmpq	%rcx, %rax
	jae	.LBB172_46
###SPA### trampoline_fmt_64
.LBB172_43:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	movq	%rax, %rcx
	movl	$1, %ebp
.LBB172_55:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	subq	%rcx, %r12
	addq	%r12, %rax
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB172_56:                             #   Parent Loop BB172_40 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movzbl	(%rcx,%rbx), %edx
	movb	%dl, (%rbp,%rbx)
	addq	$1, %rbx
	cmpq	%rbx, %rax
	jne	.LBB172_56
###SPA### trampoline_fmt_64
.LBB172_58:                             #   in Loop: Header=BB172_40 Depth=1
###SPA## trampoline_fmt_64
	movq	24(%r14), %rax
	movq	%rax, 24(%rsi)
	movq	$0, 24(%r14)
	addq	$32, %r14
	addq	$32, %rsi
	cmpq	%r8, %r14
	jb	.LBB172_40
###SPA### trampoline_fmt_64
.LBB172_60:
###SPA## trampoline_fmt_64
	movl	$0, 144(%rdi)
	movq	(%r15), %rax
	movq	$0, (%r15)
	movq	%rax, 152(%rdi)
	movq	-16(%rsp), %r15         # 8-byte Reload
	movq	(%r15), %rax
	movq	$0, (%r15)
	movq	%rax, 160(%rdi)
	movq	-8(%rsp), %rax          # 8-byte Reload
	movq	%rax, 168(%rdi)
	testq	%rax, %rax
	je	.LBB172_62
###SPA### trampoline_fmt_64
# %bb.61:
	lock		addq	$1, (%rax)
.LBB172_62:
###SPA## trampoline_fmt_64
	movq	$0, 176(%rdi)
	movb	%r13b, 184(%rdi)
	movl	$0, 188(%rdi)
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN2js4wasm6Module30initGCMallocBytesExcludingCodeEv # TAILCALL
.LBB172_8:
	.cfi_def_cfa_offset 56
###SPA## trampoline_fmt_64
	movl	$16, %edx
	cmpq	$48, %rbx
	jb	.LBB172_15
###SPA### trampoline_fmt_64
.LBB172_12:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB172_13:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rsi), %rbp
	movq	$0, (%rcx,%rsi)
	movq	%rbp, (%rdx,%rsi)
	movq	8(%rcx,%rsi), %rbp
	movq	%rbp, 8(%rdx,%rsi)
	movq	16(%rcx,%rsi), %rbp
	movq	$0, 16(%rcx,%rsi)
	movq	%rbp, 16(%rdx,%rsi)
	movq	24(%rcx,%rsi), %rbp
	movq	%rbp, 24(%rdx,%rsi)
	movq	32(%rcx,%rsi), %rbp
	movq	$0, 32(%rcx,%rsi)
	movq	%rbp, 32(%rdx,%rsi)
	movq	40(%rcx,%rsi), %rbp
	movq	%rbp, 40(%rdx,%rsi)
	movq	48(%rcx,%rsi), %rbp
	movq	$0, 48(%rcx,%rsi)
	movq	%rbp, 48(%rdx,%rsi)
	movq	56(%rcx,%rsi), %rbp
	movq	%rbp, 56(%rdx,%rsi)
	leaq	(%rcx,%rsi), %rbp
	addq	$64, %rbp
	addq	$64, %rsi
	cmpq	%rax, %rbp
	jb	.LBB172_13
###SPA### trampoline_fmt_64
	jmp	.LBB172_15
.LBB172_18:
###SPA## trampoline_fmt_64
	movl	$8, %edx
	cmpq	$56, %r8
	jb	.LBB172_26
###SPA### trampoline_fmt_64
.LBB172_23:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB172_24:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rsi), %rcx
	movq	%rcx, (%rdx,%rsi)
	movq	$0, (%rax,%rsi)
	movq	8(%rax,%rsi), %rcx
	movq	%rcx, 8(%rdx,%rsi)
	movq	$0, 8(%rax,%rsi)
	movq	16(%rax,%rsi), %rcx
	movq	%rcx, 16(%rdx,%rsi)
	movq	$0, 16(%rax,%rsi)
	movq	24(%rax,%rsi), %rcx
	movq	%rcx, 24(%rdx,%rsi)
	movq	$0, 24(%rax,%rsi)
	movq	32(%rax,%rsi), %rcx
	movq	%rcx, 32(%rdx,%rsi)
	movq	$0, 32(%rax,%rsi)
	movq	40(%rax,%rsi), %rcx
	movq	%rcx, 40(%rdx,%rsi)
	movq	$0, 40(%rax,%rsi)
	movq	48(%rax,%rsi), %rcx
	movq	%rcx, 48(%rdx,%rsi)
	movq	$0, 48(%rax,%rsi)
	movq	56(%rax,%rsi), %rcx
	movq	%rcx, 56(%rdx,%rsi)
	movq	$0, 56(%rax,%rsi)
	leaq	(%rax,%rsi), %rcx
	addq	$64, %rcx
	addq	$64, %rsi
	cmpq	%r10, %rcx
	jb	.LBB172_24
###SPA### trampoline_fmt_64
	jmp	.LBB172_26
.LBB172_29:
###SPA## trampoline_fmt_64
	movl	$8, %edx
	cmpq	$56, %r8
	jb	.LBB172_37
###SPA### trampoline_fmt_64
.LBB172_34:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB172_35:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rsi), %rcx
	movq	%rcx, (%rdx,%rsi)
	movq	$0, (%rax,%rsi)
	movq	8(%rax,%rsi), %rcx
	movq	%rcx, 8(%rdx,%rsi)
	movq	$0, 8(%rax,%rsi)
	movq	16(%rax,%rsi), %rcx
	movq	%rcx, 16(%rdx,%rsi)
	movq	$0, 16(%rax,%rsi)
	movq	24(%rax,%rsi), %rcx
	movq	%rcx, 24(%rdx,%rsi)
	movq	$0, 24(%rax,%rsi)
	movq	32(%rax,%rsi), %rcx
	movq	%rcx, 32(%rdx,%rsi)
	movq	$0, 32(%rax,%rsi)
	movq	40(%rax,%rsi), %rcx
	movq	%rcx, 40(%rdx,%rsi)
	movq	$0, 40(%rax,%rsi)
	movq	48(%rax,%rsi), %rcx
	movq	%rcx, 48(%rdx,%rsi)
	movq	$0, 48(%rax,%rsi)
	movq	56(%rax,%rsi), %rcx
	movq	%rcx, 56(%rdx,%rsi)
	movq	$0, 56(%rax,%rsi)
	leaq	(%rax,%rsi), %rcx
	addq	$64, %rcx
	addq	$64, %rsi
	cmpq	%r9, %rcx
	jb	.LBB172_35
###SPA### trampoline_fmt_64
	jmp	.LBB172_37
.Lfunc_end172:
	.size	_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb, .Lfunc_end172-_ZN2js4wasm6ModuleC2ERKNS0_4CodeEON7mozilla6VectorINS0_6ImportELm0ENS_17SystemAllocPolicyEEEONS6_INS0_6ExportELm0ES8_EEONS6_INS0_18SerializableRefPtrIKNS0_11DataSegmentEEELm0ES8_EEONS6_INSE_IKNS0_11ElemSegmentEEELm0ES8_EEONS6_INS0_13CustomSectionELm0ES8_EENS5_9UniquePtrIKNS6_IhLm0ES8_EEN2JS12DeletePolicyISU_EEEENSS_INS0_8LinkDataENSW_ISZ_EEEEPKNS0_14ShareableBytesEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB173_13
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$1, %rsi
	je	.LBB173_2
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.LBB173_4
###SPA### trampoline_fmt_64
# %bb.5:
	movq	%rax, %rcx
	shrq	$62, %rcx
	jne	.LBB173_6
###SPA### trampoline_fmt_64
# %bb.7:
	addq	%rax, %rax
	je	.LBB173_8
###SPA### trampoline_fmt_64
# %bb.9:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB173_10
.LBB173_13:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB173_37
###SPA### trampoline_fmt_64
# %bb.14:
	testq	%rsi, %rsi
	js	.LBB173_37
###SPA### trampoline_fmt_64
# %bb.15:
	cmpq	$2, %rsi
	jae	.LBB173_17
###SPA### trampoline_fmt_64
# %bb.16:
	xorl	%ecx, %ecx
	jmp	.LBB173_18
.LBB173_17:
###SPA## trampoline_fmt_64
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
.LBB173_18:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	movq	(%r14), %rsi
	cmpq	$1, %rsi
	jne	.LBB173_11
###SPA### trampoline_fmt_64
	jmp	.LBB173_19
.LBB173_2:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
.LBB173_19:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r15, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB173_20
###SPA### trampoline_fmt_64
# %bb.21:
	movq	8(%r14), %r9
	testq	%r9, %r9
	jle	.LBB173_36
###SPA### trampoline_fmt_64
# %bb.22:
	movq	(%r14), %rcx
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	$32, %r9
	jb	.LBB173_34
###SPA### trampoline_fmt_64
# %bb.23:
	leaq	(%rcx,%r9), %rdx
	cmpq	%rdx, %rax
	jae	.LBB173_25
###SPA### trampoline_fmt_64
# %bb.24:
	leaq	(%rax,%r9), %rdi
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	%rdi, %rcx
	jb	.LBB173_34
###SPA### trampoline_fmt_64
.LBB173_25:
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$5, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$96, %rsi
	jae	.LBB173_27
###SPA### trampoline_fmt_64
# %bb.26:
	xorl	%esi, %esi
	testq	%rdi, %rdi
	jne	.LBB173_30
###SPA### trampoline_fmt_64
	jmp	.LBB173_32
.LBB173_4:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB173_11
.LBB173_8:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB173_10:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	xorl	%r15d, %r15d
	cmpq	%rax, %rdx
	setne	%r15b
	orq	%rax, %r15
.LBB173_11:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r15, %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	jne	.LBB173_36
###SPA### trampoline_fmt_64
# %bb.12:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB173_27:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	leaq	(%rdi,%rsi), %rdx
	addq	$-1, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB173_28:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rsi), %xmm0
	movups	16(%rcx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rcx,%rsi), %xmm0
	movups	48(%rcx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rcx,%rsi), %xmm0
	movups	80(%rcx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rcx,%rsi), %xmm0
	movups	112(%rcx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB173_28
###SPA### trampoline_fmt_64
# %bb.29:
	testq	%rdi, %rdi
	je	.LBB173_32
###SPA### trampoline_fmt_64
.LBB173_30:
###SPA## trampoline_fmt_64
	addq	$16, %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB173_31:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB173_31
###SPA### trampoline_fmt_64
.LBB173_32:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB173_36
###SPA### trampoline_fmt_64
# %bb.33:
	leaq	(%rcx,%r8), %rdx
	movq	%rax, %rsi
	addq	%r8, %rsi
.LBB173_34:
###SPA## trampoline_fmt_64
	subq	%rdx, %r9
	addq	%r9, %rcx
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB173_35:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movzbl	(%rdx,%rdi), %ebx
	movb	%bl, (%rsi,%rdi)
	addq	$1, %rdi
	cmpq	%rdi, %rcx
	jne	.LBB173_35
###SPA### trampoline_fmt_64
.LBB173_36:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB173_37:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB173_20:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB173_6:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end173:
	.size	_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end173-_ZN7mozilla6VectorIhLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB174_13
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$1, %rsi
	je	.LBB174_2
###SPA### trampoline_fmt_64
# %bb.3:
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.LBB174_4
###SPA### trampoline_fmt_64
# %bb.5:
	movq	%rax, %rcx
	shrq	$62, %rcx
	jne	.LBB174_6
###SPA### trampoline_fmt_64
# %bb.7:
	addq	%rax, %rax
	je	.LBB174_8
###SPA### trampoline_fmt_64
# %bb.9:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB174_10
.LBB174_13:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB174_37
###SPA### trampoline_fmt_64
# %bb.14:
	testq	%rsi, %rsi
	js	.LBB174_37
###SPA### trampoline_fmt_64
# %bb.15:
	cmpq	$2, %rsi
	jae	.LBB174_17
###SPA### trampoline_fmt_64
# %bb.16:
	xorl	%ecx, %ecx
	jmp	.LBB174_18
.LBB174_17:
###SPA## trampoline_fmt_64
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
.LBB174_18:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	movq	(%r14), %rsi
	cmpq	$1, %rsi
	jne	.LBB174_11
###SPA### trampoline_fmt_64
	jmp	.LBB174_19
.LBB174_2:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
.LBB174_19:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r15, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB174_20
###SPA### trampoline_fmt_64
# %bb.21:
	movq	8(%r14), %r9
	testq	%r9, %r9
	jle	.LBB174_36
###SPA### trampoline_fmt_64
# %bb.22:
	movq	(%r14), %rcx
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	$32, %r9
	jb	.LBB174_34
###SPA### trampoline_fmt_64
# %bb.23:
	leaq	(%rcx,%r9), %rdx
	cmpq	%rdx, %rax
	jae	.LBB174_25
###SPA### trampoline_fmt_64
# %bb.24:
	leaq	(%rax,%r9), %rdi
	movq	%rcx, %rdx
	movq	%rax, %rsi
	cmpq	%rdi, %rcx
	jb	.LBB174_34
###SPA### trampoline_fmt_64
.LBB174_25:
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$5, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$96, %rsi
	jae	.LBB174_27
###SPA### trampoline_fmt_64
# %bb.26:
	xorl	%esi, %esi
	testq	%rdi, %rdi
	jne	.LBB174_30
###SPA### trampoline_fmt_64
	jmp	.LBB174_32
.LBB174_4:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB174_11
.LBB174_8:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB174_10:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	xorl	%r15d, %r15d
	cmpq	%rax, %rdx
	setne	%r15b
	orq	%rax, %r15
.LBB174_11:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r15, %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	jne	.LBB174_36
###SPA### trampoline_fmt_64
# %bb.12:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB174_27:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	leaq	(%rdi,%rsi), %rdx
	addq	$-1, %rdx
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB174_28:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rsi), %xmm0
	movups	16(%rcx,%rsi), %xmm1
	movups	%xmm0, (%rax,%rsi)
	movups	%xmm1, 16(%rax,%rsi)
	movups	32(%rcx,%rsi), %xmm0
	movups	48(%rcx,%rsi), %xmm1
	movups	%xmm0, 32(%rax,%rsi)
	movups	%xmm1, 48(%rax,%rsi)
	movups	64(%rcx,%rsi), %xmm0
	movups	80(%rcx,%rsi), %xmm1
	movups	%xmm0, 64(%rax,%rsi)
	movups	%xmm1, 80(%rax,%rsi)
	movups	96(%rcx,%rsi), %xmm0
	movups	112(%rcx,%rsi), %xmm1
	movups	%xmm0, 96(%rax,%rsi)
	movups	%xmm1, 112(%rax,%rsi)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB174_28
###SPA### trampoline_fmt_64
# %bb.29:
	testq	%rdi, %rdi
	je	.LBB174_32
###SPA### trampoline_fmt_64
.LBB174_30:
###SPA## trampoline_fmt_64
	addq	$16, %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB174_31:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB174_31
###SPA### trampoline_fmt_64
.LBB174_32:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB174_36
###SPA### trampoline_fmt_64
# %bb.33:
	leaq	(%rcx,%r8), %rdx
	movq	%rax, %rsi
	addq	%r8, %rsi
.LBB174_34:
###SPA## trampoline_fmt_64
	subq	%rdx, %r9
	addq	%r9, %rcx
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB174_35:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movzbl	(%rdx,%rdi), %ebx
	movb	%bl, (%rsi,%rdi)
	addq	$1, %rdi
	cmpq	%rdi, %rcx
	jne	.LBB174_35
###SPA### trampoline_fmt_64
.LBB174_36:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB174_37:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB174_20:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB174_6:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end174:
	.size	_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end174-_ZN7mozilla6VectorIcLm0EN2js17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	cmpq	$1, %rsi
	jne	.LBB175_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$8, (%r15)
	je	.LBB175_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	je	.LBB175_19
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB175_45
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r12
	je	.LBB175_29
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB175_30
.LBB175_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r15), %rsi
	jb	.LBB175_44
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB175_44
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB175_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB175_12
.LBB175_10:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB175_13
.LBB175_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB175_12:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r12
	shrq	$3, %r12
	cmpq	$8, (%r15)
	jne	.LBB175_31
###SPA### trampoline_fmt_64
.LBB175_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r12,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB175_45
###SPA### trampoline_fmt_64
# %bb.14:
	movq	%rax, %r14
	movq	8(%r15), %rcx
	testq	%rcx, %rcx
	jle	.LBB175_43
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r15), %rax
	leaq	(%rax,%rcx,8), %rcx
	leaq	8(%rax), %rdx
	cmpq	%rdx, %rcx
	cmovaq	%rcx, %rdx
	movq	%rax, %rsi
	notq	%rsi
	addq	%rdx, %rsi
	movl	%esi, %edx
	shrl	$3, %edx
	addl	$1, %edx
	andq	$7, %rdx
	je	.LBB175_20
###SPA### trampoline_fmt_64
# %bb.16:
	xorl	%ebp, %ebp
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB175_17:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rbp,8), %rbx
	movq	%rbx, (%r14,%rbp,8)
	movq	$0, (%rax,%rbp,8)
	addq	$-8, %rdi
	addq	$1, %rbp
	cmpq	%rbp, %rdx
	jne	.LBB175_17
###SPA### trampoline_fmt_64
# %bb.18:
	subq	%rdi, %rax
	movq	%r14, %rdx
	subq	%rdi, %rdx
	cmpq	$56, %rsi
	jae	.LBB175_21
###SPA### trampoline_fmt_64
	jmp	.LBB175_23
.LBB175_19:
###SPA## trampoline_fmt_64
	movl	$1, %r12d
	jmp	.LBB175_31
.LBB175_20:
###SPA## trampoline_fmt_64
	movq	%r14, %rdx
	cmpq	$56, %rsi
	jb	.LBB175_23
###SPA### trampoline_fmt_64
.LBB175_21:
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB175_22:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rax,%rsi), %rdi
	movq	%rdi, (%rdx,%rsi)
	movq	$0, (%rax,%rsi)
	movq	8(%rax,%rsi), %rdi
	movq	%rdi, 8(%rdx,%rsi)
	movq	$0, 8(%rax,%rsi)
	movq	16(%rax,%rsi), %rdi
	movq	%rdi, 16(%rdx,%rsi)
	movq	$0, 16(%rax,%rsi)
	movq	24(%rax,%rsi), %rdi
	movq	%rdi, 24(%rdx,%rsi)
	movq	$0, 24(%rax,%rsi)
	movq	32(%rax,%rsi), %rdi
	movq	%rdi, 32(%rdx,%rsi)
	movq	$0, 32(%rax,%rsi)
	movq	40(%rax,%rsi), %rdi
	movq	%rdi, 40(%rdx,%rsi)
	movq	$0, 40(%rax,%rsi)
	movq	48(%rax,%rsi), %rdi
	movq	%rdi, 48(%rdx,%rsi)
	movq	$0, 48(%rax,%rsi)
	movq	56(%rax,%rsi), %rdi
	movq	%rdi, 56(%rdx,%rsi)
	movq	$0, 56(%rax,%rsi)
	leaq	(%rax,%rsi), %rdi
	addq	$64, %rdi
	addq	$64, %rsi
	cmpq	%rcx, %rdi
	jb	.LBB175_22
###SPA### trampoline_fmt_64
.LBB175_23:
###SPA## trampoline_fmt_64
	movq	8(%r15), %rax
	testq	%rax, %rax
	jle	.LBB175_43
###SPA### trampoline_fmt_64
# %bb.24:
	movq	(%r15), %rbp
	leaq	(,%rax,8), %r13
	addq	%rbp, %r13
	.p2align	4, 0x90
.LBB175_25:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB175_28
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB175_25 Depth=1
	lock		subq	$1, (%rbx)
	jne	.LBB175_28
###SPA### trampoline_fmt_64
# %bb.27:                               #   in Loop: Header=BB175_25 Depth=1
	movq	%rbx, %rdi
	callq	_ZN2js4wasm5TableD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB175_28:                             #   in Loop: Header=BB175_25 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbp
	cmpq	%r13, %rbp
	jb	.LBB175_25
###SPA### trampoline_fmt_64
	jmp	.LBB175_43
.LBB175_29:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB175_30:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r12
	movq	%r12, %rax
	shrq	$61, %rax
	jne	.LBB175_45
###SPA### trampoline_fmt_64
.LBB175_31:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r12,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB175_45
###SPA### trampoline_fmt_64
# %bb.32:
	movq	%rax, %r14
	movq	(%r15), %rdi
	cmpq	$0, 8(%r15)
	jle	.LBB175_42
###SPA### trampoline_fmt_64
# %bb.33:
	movq	%r14, %rax
	.p2align	4, 0x90
.LBB175_34:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rdi), %rcx
	movq	%rcx, (%rax)
	movq	$0, (%rdi)
	addq	$8, %rax
	addq	$8, %rdi
	movq	(%r15), %rbx
	movq	8(%r15), %rcx
	leaq	(%rbx,%rcx,8), %rbp
	cmpq	%rbp, %rdi
	jb	.LBB175_34
###SPA### trampoline_fmt_64
# %bb.35:
	testq	%rcx, %rcx
	jle	.LBB175_41
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB175_36:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %r13
	testq	%r13, %r13
	je	.LBB175_39
###SPA### trampoline_fmt_64
# %bb.37:                               #   in Loop: Header=BB175_36 Depth=1
	lock		subq	$1, (%r13)
	jne	.LBB175_39
###SPA### trampoline_fmt_64
# %bb.38:                               #   in Loop: Header=BB175_36 Depth=1
	movq	%r13, %rdi
	callq	_ZN2js4wasm5TableD2Ev
	movq	%r13, %rdi
	callq	free@PLT
.LBB175_39:                             #   in Loop: Header=BB175_36 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%rbp, %rbx
	jb	.LBB175_36
###SPA### trampoline_fmt_64
# %bb.40:
	movq	(%r15), %rdi
	jmp	.LBB175_42
.LBB175_41:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
.LBB175_42:
###SPA## trampoline_fmt_64
	callq	free@PLT
.LBB175_43:
###SPA## trampoline_fmt_64
	movq	%r14, (%r15)
	movq	%r12, 16(%r15)
	movb	$1, %al
.LBB175_44:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB175_45:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB175_44
.Lfunc_end175:
	.size	_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end175-_ZN7mozilla6VectorI6RefPtrIN2js4wasm5TableEELm0ENS2_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB176_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	je	.LBB176_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	.LBB176_17
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB176_44
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r15
	je	.LBB176_21
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB176_22
.LBB176_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB176_25
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB176_25
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB176_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB176_12
.LBB176_10:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB176_13
.LBB176_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB176_12:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	shrq	$3, %r15
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	jne	.LBB176_23
###SPA### trampoline_fmt_64
.LBB176_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB176_43
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	jle	.LBB176_24
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r14), %rcx
	leaq	(%rcx,%rdx,8), %r10
	leaq	8(%rcx), %rsi
	cmpq	%rsi, %r10
	movq	%rsi, %r9
	cmovaq	%r10, %r9
	movq	%rcx, %rdi
	notq	%rdi
	addq	%rdi, %r9
	shrq	$3, %r9
	addq	$1, %r9
	cmpq	$4, %r9
	jb	.LBB176_16
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	%rsi, %r10
	cmovaq	%r10, %rsi
	leaq	(%rsi,%rdi), %rdx
	andq	$-8, %rdx
	addq	%rcx, %rdx
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jae	.LBB176_26
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	(%rsi,%rdi), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	cmpq	%rcx, %rdx
	jbe	.LBB176_26
###SPA### trampoline_fmt_64
.LBB176_16:
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
.LBB176_35:
###SPA## trampoline_fmt_64
	leaq	8(%rcx), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rcx, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %r9d
	shrl	$3, %r9d
	addl	$1, %r9d
	andq	$7, %r9
	je	.LBB176_39
###SPA### trampoline_fmt_64
# %bb.36:
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB176_37:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rbx,8), %rdi
	movq	%rdi, (%rsi,%rbx,8)
	addq	$-8, %rdx
	addq	$1, %rbx
	cmpq	%rbx, %r9
	jne	.LBB176_37
###SPA### trampoline_fmt_64
# %bb.38:
	subq	%rdx, %rcx
	subq	%rdx, %rsi
.LBB176_39:
###SPA## trampoline_fmt_64
	cmpq	$56, %r8
	jb	.LBB176_24
###SPA### trampoline_fmt_64
# %bb.40:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB176_41:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rdi), %rdx
	movq	%rdx, (%rsi,%rdi)
	movq	8(%rcx,%rdi), %rdx
	movq	%rdx, 8(%rsi,%rdi)
	movq	16(%rcx,%rdi), %rdx
	movq	%rdx, 16(%rsi,%rdi)
	movq	24(%rcx,%rdi), %rdx
	movq	%rdx, 24(%rsi,%rdi)
	movq	32(%rcx,%rdi), %rdx
	movq	%rdx, 32(%rsi,%rdi)
	movq	40(%rcx,%rdi), %rdx
	movq	%rdx, 40(%rsi,%rdi)
	movq	48(%rcx,%rdi), %rdx
	movq	%rdx, 48(%rsi,%rdi)
	movq	56(%rcx,%rdi), %rdx
	movq	%rdx, 56(%rsi,%rdi)
	leaq	(%rcx,%rdi), %rdx
	addq	$64, %rdx
	addq	$64, %rdi
	cmpq	%r10, %rdx
	jb	.LBB176_41
###SPA### trampoline_fmt_64
	jmp	.LBB176_24
.LBB176_17:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB176_23
.LBB176_21:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB176_22:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r15
	movq	%r15, %rax
	shrq	$61, %rax
	jne	.LBB176_45
###SPA### trampoline_fmt_64
.LBB176_23:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	je	.LBB176_42
###SPA### trampoline_fmt_64
.LBB176_24:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB176_25:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB176_26:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-4, %r8
	leaq	-4(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$2, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$12, %rsi
	jae	.LBB176_28
###SPA### trampoline_fmt_64
# %bb.27:
	xorl	%ebx, %ebx
	testq	%rdi, %rdi
	jne	.LBB176_31
###SPA### trampoline_fmt_64
	jmp	.LBB176_33
.LBB176_28:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	addq	%rdi, %rsi
	addq	$-1, %rsi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB176_29:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rbx,8), %xmm0
	movups	16(%rcx,%rbx,8), %xmm1
	movups	%xmm0, (%rax,%rbx,8)
	movups	%xmm1, 16(%rax,%rbx,8)
	movups	32(%rcx,%rbx,8), %xmm0
	movups	48(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 32(%rax,%rbx,8)
	movups	%xmm1, 48(%rax,%rbx,8)
	movups	64(%rcx,%rbx,8), %xmm0
	movups	80(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 64(%rax,%rbx,8)
	movups	%xmm1, 80(%rax,%rbx,8)
	movups	96(%rcx,%rbx,8), %xmm0
	movups	112(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 96(%rax,%rbx,8)
	movups	%xmm1, 112(%rax,%rbx,8)
	addq	$16, %rbx
	addq	$4, %rsi
	jne	.LBB176_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rdi, %rdi
	je	.LBB176_33
###SPA### trampoline_fmt_64
.LBB176_31:
###SPA## trampoline_fmt_64
	leaq	16(,%rbx,8), %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB176_32:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB176_32
###SPA### trampoline_fmt_64
.LBB176_33:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB176_24
###SPA### trampoline_fmt_64
# %bb.34:
	leaq	(%rcx,%r8,8), %rcx
	leaq	(%rax,%r8,8), %rsi
	jmp	.LBB176_35
.LBB176_42:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB176_43:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB176_44:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB176_45:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end176:
	.size	_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end176-_ZN7mozilla6VectorIPN2js15WasmTableObjectELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js4wasm5TableD2Ev,"axG",@progbits,_ZN2js4wasm5TableD2Ev,comdat
	.hidden	_ZN2js4wasm5TableD2Ev   # -- Begin function _ZN2js4wasm5TableD2Ev
	.weak	_ZN2js4wasm5TableD2Ev
	.p2align	4, 0x90
	.type	_ZN2js4wasm5TableD2Ev,@function
_ZN2js4wasm5TableD2Ev:                  # @_ZN2js4wasm5TableD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movq	88(%rdi), %rbx
	movq	96(%rdi), %rax
	testq	%rax, %rax
	jle	.LBB177_14
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	(%rbx,%rax,8), %r13
	leaq	8(%rsp), %r15
	leaq	.L.str.290(%rip), %r12
	.p2align	4, 0x90
.LBB177_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	testq	%rcx, %rcx
	je	.LBB177_12
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB177_2 Depth=1
	movq	%rcx, %rax
	andq	$-1048576, %rax         # imm = 0xFFF00000
	cmpl	$1, 1048552(%rax)
	je	.LBB177_7
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB177_2 Depth=1
	movq	%rcx, %rdx
	andq	$-4096, %rdx            # imm = 0xF000
	movq	8(%rdx), %rdx
	cmpl	$0, 16(%rdx)
	je	.LBB177_7
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB177_2 Depth=1
	movq	%rcx, 8(%rsp)
	movq	8(%rdx), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	_ZN2js40TraceManuallyBarrieredGenericPointerEdgeEP8JSTracerPPNS_2gc4CellEPKc
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB177_12
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB177_2 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
.LBB177_7:                              #   in Loop: Header=BB177_2 Depth=1
###SPA## trampoline_fmt_64
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB177_12
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB177_2 Depth=1
	movq	%rbx, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB177_12
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB177_2 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB177_10
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB177_2 Depth=1
	addq	$184, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB177_12:                             #   in Loop: Header=BB177_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB177_2
###SPA### trampoline_fmt_64
	jmp	.LBB177_13
.LBB177_10:                             #   in Loop: Header=BB177_2 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB177_2
###SPA### trampoline_fmt_64
.LBB177_13:
###SPA## trampoline_fmt_64
	movq	88(%r14), %rbx
.LBB177_14:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB177_16
###SPA### trampoline_fmt_64
# %bb.15:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB177_16:
###SPA## trampoline_fmt_64
	movq	80(%r14), %rdi
	movq	$0, 80(%r14)
	testq	%rdi, %rdi
	je	.LBB177_18
###SPA### trampoline_fmt_64
# %bb.17:
	callq	free@PLT
.LBB177_18:
###SPA## trampoline_fmt_64
	leaq	_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, 16(%r14)
	movq	56(%r14), %r12
	testq	%r12, %r12
	je	.LBB177_29
###SPA### trampoline_fmt_64
# %bb.19:
	movzbl	55(%r14), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %r13d
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %r13d
	leaq	(%r12,%r13,4), %rbx
	xorl	%ebp, %ebp
	leaq	8(%rsp), %r15
	.p2align	4, 0x90
.LBB177_20:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpl	$2, (%r12,%rbp,4)
	jb	.LBB177_27
###SPA### trampoline_fmt_64
# %bb.21:                               #   in Loop: Header=BB177_20 Depth=1
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB177_27
###SPA### trampoline_fmt_64
# %bb.22:                               #   in Loop: Header=BB177_20 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB177_27
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB177_20 Depth=1
	movq	%rbx, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB177_27
###SPA### trampoline_fmt_64
# %bb.24:                               #   in Loop: Header=BB177_20 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB177_25
###SPA### trampoline_fmt_64
# %bb.26:                               #   in Loop: Header=BB177_20 Depth=1
	addq	$184, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB177_27:                             #   in Loop: Header=BB177_20 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	addq	$1, %rbp
	cmpq	%rbp, %r13
	jne	.LBB177_20
###SPA### trampoline_fmt_64
	jmp	.LBB177_28
.LBB177_25:                             #   in Loop: Header=BB177_20 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	addq	$1, %rbp
	cmpq	%rbp, %r13
	jne	.LBB177_20
###SPA### trampoline_fmt_64
.LBB177_28:
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	callq	free@PLT
.LBB177_29:
###SPA## trampoline_fmt_64
	cmpb	$0, 40(%r14)
	jne	.LBB177_32
###SPA### trampoline_fmt_64
# %bb.30:
	leaq	24(%r14), %rax
	movq	(%rax), %rcx
	cmpq	%rax, %rcx
	je	.LBB177_32
###SPA### trampoline_fmt_64
# %bb.31:
	movq	32(%r14), %rdx
	movq	%rcx, (%rdx)
	movq	24(%r14), %rcx
	movq	32(%r14), %rdx
	movq	%rdx, 8(%rcx)
	movq	%rax, 24(%r14)
	movq	%rax, 32(%r14)
.LBB177_32:
###SPA## trampoline_fmt_64
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.LBB177_38
###SPA### trampoline_fmt_64
# %bb.33:
	andq	$-1048576, %rax         # imm = 0xFFF00000
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB177_38
###SPA### trampoline_fmt_64
# %bb.34:
	addq	$8, %r14
	movq	%r14, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB177_38
###SPA### trampoline_fmt_64
# %bb.35:
	cmpq	%r14, 208(%rdi)
	je	.LBB177_36
###SPA### trampoline_fmt_64
# %bb.37:
	addq	$184, %rdi
	leaq	8(%rsp), %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
.LBB177_38:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB177_40
###SPA### trampoline_fmt_64
.LBB177_39:
###SPA## trampoline_fmt_64
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB177_36:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	je	.LBB177_39
###SPA### trampoline_fmt_64
.LBB177_40:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end177:
	.size	_ZN2js4wasm5TableD2Ev, .Lfunc_end177-_ZN2js4wasm5TableD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev,"axG",@progbits,_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev,comdat
	.hidden	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev # -- Begin function _ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev
	.weak	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev
	.p2align	4, 0x90
	.type	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev,@function
_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev: # @_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	leaq	_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	40(%rdi), %r12
	testq	%r12, %r12
	je	.LBB178_11
###SPA### trampoline_fmt_64
# %bb.1:
	movzbl	39(%r14), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %r13d
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %r13d
	leaq	(%r12,%r13,4), %rbx
	xorl	%ebp, %ebp
	leaq	8(%rsp), %r15
	.p2align	4, 0x90
.LBB178_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpl	$2, (%r12,%rbp,4)
	jb	.LBB178_9
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB178_2 Depth=1
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB178_9
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB178_2 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB178_9
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB178_2 Depth=1
	movq	%rbx, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB178_9
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB178_2 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB178_7
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB178_2 Depth=1
	addq	$184, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB178_9:                              #   in Loop: Header=BB178_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	addq	$1, %rbp
	cmpq	%rbp, %r13
	jne	.LBB178_2
###SPA### trampoline_fmt_64
	jmp	.LBB178_10
.LBB178_7:                              #   in Loop: Header=BB178_2 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	addq	$1, %rbp
	cmpq	%rbp, %r13
	jne	.LBB178_2
###SPA### trampoline_fmt_64
.LBB178_10:
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	callq	free@PLT
.LBB178_11:
###SPA## trampoline_fmt_64
	cmpb	$0, 24(%r14)
	jne	.LBB178_14
###SPA### trampoline_fmt_64
# %bb.12:
	leaq	8(%r14), %rax
	movq	(%rax), %rcx
	cmpq	%rax, %rcx
	je	.LBB178_14
###SPA### trampoline_fmt_64
# %bb.13:
	movq	16(%r14), %rdx
	movq	%rcx, (%rdx)
	movq	8(%r14), %rcx
	movq	16(%r14), %rdx
	movq	%rdx, 8(%rcx)
	movq	%rax, 8(%r14)
	movq	%rax, 16(%r14)
.LBB178_14:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB178_16
###SPA### trampoline_fmt_64
# %bb.15:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB178_16:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end178:
	.size	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev, .Lfunc_end178-_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_,"axG",@progbits,_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_,comdat
	.hidden	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_ # -- Begin function _ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	.weak	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	.p2align	4, 0x90
	.type	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_,@function
_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_: # @_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$48, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r8
	movq	%fs:40, %rax
	movq	%rax, 40(%rsp)
	movq	(%rsi), %r14
	movq	%r14, %rcx
	shrq	$32, %rcx
	imull	$-1640531527, %r14d, %edx # imm = 0x9E3779B9
	imull	$-957401312, %r14d, %esi # imm = 0xC6EF3720
	shrl	$27, %edx
	orl	%esi, %edx
	xorl	%ecx, %edx
	imull	$-480352335, %edx, %ecx # imm = 0xE35E67B1
	leal	-2(%rcx), %r11d
	cmpl	$1, %ecx
	cmoval	%ecx, %r11d
	andl	$-2, %r11d
	movq	8(%rdi), %rsi
	testq	%rsi, %rsi
	je	.LBB179_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	(%rdi), %r10
	shrq	$56, %r10
	movl	%r11d, %edx
	movl	%r10d, %ecx
	shrl	%cl, %edx
	movl	$32, %r9d
	subl	%r10d, %r9d
	movl	$1, %ebx
	movl	%r9d, %ecx
	shll	%cl, %ebx
	leaq	(%rsi,%rbx,4), %rcx
	leaq	(%rcx,%rdx,8), %rcx
	leaq	(%rsi,%rdx,4), %rbx
	movq	%rcx, (%rsp)
	movq	%rbx, 8(%rsp)
	movl	(%rsi,%rdx,4), %eax
	testl	%eax, %eax
	je	.LBB179_18
###SPA### trampoline_fmt_64
# %bb.3:
	movl	%eax, %ebp
	andl	$-2, %ebp
	cmpl	%r11d, %ebp
	jne	.LBB179_5
###SPA### trampoline_fmt_64
# %bb.4:
	cmpq	%r14, (%rcx)
	je	.LBB179_18
###SPA### trampoline_fmt_64
.LBB179_5:
###SPA## trampoline_fmt_64
	movl	%r11d, %r14d
	movl	%r9d, %ecx
	shll	%cl, %r14d
	movl	%r10d, %ecx
	shrl	%cl, %r14d
	orl	$1, %r14d
	movl	$-1, %r10d
	movl	%r9d, %ecx
	shll	%cl, %r10d
	notl	%r10d
	movb	$0, 16(%rsp)
	movb	$0, 32(%rsp)
	xorl	%r9d, %r9d
	.p2align	4, 0x90
.LBB179_6:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	testb	%r9b, %r9b
	je	.LBB179_7
###SPA### trampoline_fmt_64
.LBB179_9:                              #   in Loop: Header=BB179_6 Depth=1
###SPA## trampoline_fmt_64
	subl	%r14d, %edx
	andl	%r10d, %edx
	jmp	.LBB179_10
	.p2align	4, 0x90
.LBB179_7:                              #   in Loop: Header=BB179_6 Depth=1
###SPA## trampoline_fmt_64
	cmpl	$1, %eax
	je	.LBB179_8
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB179_6 Depth=1
	orl	$1, %eax
	movl	%eax, (%rbx)
	movq	8(%rdi), %rsi
	subl	%r14d, %edx
	andl	%r10d, %edx
	xorl	%r9d, %r9d
	testq	%rsi, %rsi
	je	.LBB179_12
###SPA### trampoline_fmt_64
.LBB179_10:                             #   in Loop: Header=BB179_6 Depth=1
###SPA## trampoline_fmt_64
	movzbl	7(%rdi), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %ebp
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %ebp
.LBB179_13:                             #   in Loop: Header=BB179_6 Depth=1
###SPA## trampoline_fmt_64
	leaq	(%rsi,%rbp,4), %rax
	movl	%edx, %ebp
	leaq	(%rax,%rbp,8), %rcx
	leaq	(%rsi,%rbp,4), %rbx
	movq	%rcx, (%rsp)
	movq	%rbx, 8(%rsp)
	movl	(%rsi,%rbp,4), %eax
	testl	%eax, %eax
	je	.LBB179_14
###SPA### trampoline_fmt_64
# %bb.15:                               #   in Loop: Header=BB179_6 Depth=1
	movl	%eax, %ebp
	andl	$-2, %ebp
	cmpl	%r11d, %ebp
	jne	.LBB179_6
###SPA### trampoline_fmt_64
# %bb.16:                               #   in Loop: Header=BB179_6 Depth=1
	movq	(%rcx), %rbp
	cmpq	(%r8), %rbp
	jne	.LBB179_6
###SPA### trampoline_fmt_64
	jmp	.LBB179_17
.LBB179_12:                             #   in Loop: Header=BB179_6 Depth=1
###SPA## trampoline_fmt_64
	xorl	%esi, %esi
	xorl	%ebp, %ebp
	jmp	.LBB179_13
.LBB179_8:                              #   in Loop: Header=BB179_6 Depth=1
###SPA## trampoline_fmt_64
	movups	(%rsp), %xmm0
	movaps	%xmm0, 16(%rsp)
	movb	$1, %r9b
	jmp	.LBB179_9
.LBB179_1:
###SPA## trampoline_fmt_64
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movl	%r11d, 32(%rsp)
	jmp	.LBB179_20
.LBB179_14:
###SPA## trampoline_fmt_64
	movb	%r9b, 32(%rsp)
	testb	%r9b, %r9b
	movq	%rsp, %rax
	leaq	16(%rsp), %rdx
	cmoveq	%rax, %rdx
	movq	(%rdx), %rcx
	movq	8(%rdx), %rbx
	jmp	.LBB179_18
.LBB179_17:
###SPA## trampoline_fmt_64
	movb	%r9b, 32(%rsp)
.LBB179_18:
###SPA## trampoline_fmt_64
	movq	%rcx, 16(%rsp)
	movq	%rbx, 24(%rsp)
	movl	%r11d, 32(%rsp)
	testq	%rcx, %rcx
	je	.LBB179_20
###SPA### trampoline_fmt_64
# %bb.19:
	movb	$1, %al
	cmpl	$1, (%rbx)
	ja	.LBB179_21
###SPA### trampoline_fmt_64
.LBB179_20:
###SPA## trampoline_fmt_64
	leaq	16(%rsp), %rsi
	movq	%r8, %rdx
	callq	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_
.LBB179_21:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rcx
	cmpq	40(%rsp), %rcx
	jne	.LBB179_23
###SPA### trampoline_fmt_64
# %bb.22:
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB179_23:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end179:
	.size	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_, .Lfunc_end179-_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_,"axG",@progbits,_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_,comdat
	.hidden	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_ # -- Begin function _ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_
	.weak	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_
	.p2align	4, 0x90
	.type	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_,@function
_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_: # @_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	cmpl	$2, 16(%rsi)
	jb	.LBB180_4
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r14
	cmpq	$0, (%rsi)
	je	.LBB180_5
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r15), %rax
	cmpl	$1, (%rax)
	movl	20(%r14), %eax
	jne	.LBB180_7
###SPA### trampoline_fmt_64
# %bb.3:
	addl	$-1, %eax
	movl	%eax, 20(%r14)
	orb	$1, 16(%r15)
	jmp	.LBB180_32
.LBB180_5:
###SPA## trampoline_fmt_64
	movzbl	7(%r14), %eax
	movl	$32, %r12d
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %r13d
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %esi
	movl	$1, %edx
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE
	cmpl	$2, %eax
	je	.LBB180_4
###SPA### trampoline_fmt_64
# %bb.10:
	movl	16(%r15), %r8d
	movq	(%r14), %rax
	shrq	$56, %rax
	movq	%r8, %rsi
	movl	%eax, %ecx
	shrq	%cl, %rsi
	subl	%eax, %r12d
	movl	%r12d, %ecx
	shll	%cl, %r13d
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	cmoveq	%rcx, %r13
	leaq	(%rcx,%rsi,4), %rdi
	movl	(%rcx,%rsi,4), %ebp
	cmpl	$2, %ebp
	jb	.LBB180_27
###SPA### trampoline_fmt_64
# %bb.11:
	movq	%rbx, %r9
	movl	%r12d, %ecx
	shll	%cl, %r8d
	movl	%eax, %ecx
	shrl	%cl, %r8d
	orl	$1, %r8d
	movl	$-1, %eax
	movl	%r12d, %ecx
	shll	%cl, %eax
	notl	%eax
	.p2align	4, 0x90
.LBB180_12:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	subl	%r8d, %esi
	andl	%eax, %esi
	orl	$1, %ebp
	movl	%ebp, (%rdi)
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	je	.LBB180_14
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB180_12 Depth=1
	movzbl	7(%r14), %edi
	movl	$32, %ecx
	subl	%edi, %ecx
	movl	$1, %ebx
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %ebx
	jmp	.LBB180_15
	.p2align	4, 0x90
.LBB180_14:                             #   in Loop: Header=BB180_12 Depth=1
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
.LBB180_15:                             #   in Loop: Header=BB180_12 Depth=1
###SPA## trampoline_fmt_64
	movl	%esi, %ecx
	leaq	(%rdx,%rcx,4), %rdi
	movl	(%rdx,%rcx,4), %ebp
	cmpl	$1, %ebp
	ja	.LBB180_12
###SPA### trampoline_fmt_64
# %bb.16:
	leaq	(%rdx,%rbx,4), %rax
	leaq	(%rax,%rcx,8), %rax
	movq	%r9, %rbx
	jmp	.LBB180_28
.LBB180_7:
###SPA## trampoline_fmt_64
	movzbl	7(%r14), %edx
	movl	$32, %ecx
	subl	%edx, %ecx
	cmpq	$0, 8(%r14)
	je	.LBB180_17
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$3, %edx
	shll	%cl, %edx
	movl	16(%r14), %esi
	addl	%eax, %esi
	shrl	$2, %edx
	cmpl	%edx, %esi
	jb	.LBB180_32
###SPA### trampoline_fmt_64
# %bb.9:
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %esi
	movl	%esi, %ecx
	shrl	$2, %ecx
	jmp	.LBB180_18
.LBB180_17:
###SPA## trampoline_fmt_64
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %esi
	xorl	%ecx, %ecx
.LBB180_18:
###SPA## trampoline_fmt_64
	cmpl	%ecx, %eax
	setb	%cl
	shll	%cl, %esi
	movl	$1, %edx
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE
	cmpl	$2, %eax
	je	.LBB180_4
###SPA### trampoline_fmt_64
# %bb.19:
	cmpl	$1, %eax
	jne	.LBB180_32
###SPA### trampoline_fmt_64
# %bb.20:
	movl	16(%r15), %r9d
	movq	(%r14), %rax
	shrq	$56, %rax
	movq	%r9, %rdi
	movl	%eax, %ecx
	shrq	%cl, %rdi
	movl	$32, %r8d
	subl	%eax, %r8d
	movl	$1, %esi
	movl	%r8d, %ecx
	shll	%cl, %esi
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	cmoveq	%rcx, %rsi
	leaq	(%rcx,%rdi,4), %rbp
	movl	(%rcx,%rdi,4), %edx
	cmpl	$2, %edx
	jb	.LBB180_30
###SPA### trampoline_fmt_64
# %bb.21:
	movq	%rbx, %r10
	movl	%r8d, %ecx
	shll	%cl, %r9d
	movl	%eax, %ecx
	shrl	%cl, %r9d
	orl	$1, %r9d
	movl	$-1, %eax
	movl	%r8d, %ecx
	shll	%cl, %eax
	notl	%eax
	.p2align	4, 0x90
.LBB180_22:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	subl	%r9d, %edi
	andl	%eax, %edi
	orl	$1, %edx
	movl	%edx, (%rbp)
	movq	8(%r14), %rsi
	testq	%rsi, %rsi
	je	.LBB180_24
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB180_22 Depth=1
	movzbl	7(%r14), %edx
	movl	$32, %ecx
	subl	%edx, %ecx
	movl	$1, %ebx
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %ebx
	jmp	.LBB180_25
	.p2align	4, 0x90
.LBB180_24:                             #   in Loop: Header=BB180_22 Depth=1
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
.LBB180_25:                             #   in Loop: Header=BB180_22 Depth=1
###SPA## trampoline_fmt_64
	movl	%edi, %ecx
	leaq	(%rsi,%rcx,4), %rbp
	movl	(%rsi,%rcx,4), %edx
	cmpl	$1, %edx
	ja	.LBB180_22
###SPA### trampoline_fmt_64
# %bb.26:
	leaq	(%rsi,%rbx,4), %rax
	leaq	(%rax,%rcx,8), %rax
	movq	%r10, %rbx
	jmp	.LBB180_31
.LBB180_4:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB180_33
.LBB180_27:
###SPA## trampoline_fmt_64
	leaq	(%rcx,%r13,4), %rax
	leaq	(%rax,%rsi,8), %rax
.LBB180_28:
###SPA## trampoline_fmt_64
	movq	%rax, (%r15)
	movq	%rdi, 8(%r15)
	jmp	.LBB180_32
.LBB180_30:
###SPA## trampoline_fmt_64
	leaq	(%rcx,%rsi,4), %rax
	leaq	(%rax,%rdi,8), %rax
.LBB180_31:
###SPA## trampoline_fmt_64
	movq	%rax, (%r15)
	movq	%rbp, 8(%r15)
.LBB180_32:
###SPA## trampoline_fmt_64
	movl	16(%r15), %eax
	movq	8(%r15), %rcx
	movl	%eax, (%rcx)
	movq	(%r15), %rax
	movq	(%rbx), %rcx
	movq	%rcx, (%rax)
	addl	$1, 16(%r14)
	movb	$1, %al
.LBB180_33:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end180:
	.size	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_, .Lfunc_end180-_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E3addIJRS7_EEEbRNSF_6AddPtrEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE,"axG",@progbits,_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE,comdat
	.hidden	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE # -- Begin function _ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE
	.weak	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE
	.p2align	4, 0x90
	.type	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE,@function
_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE: # @_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %r15d
	movq	%rdi, %r14
	movq	8(%rdi), %rax
	movq	%rax, (%rsp)            # 8-byte Spill
	testq	%rax, %rax
	je	.LBB181_3
###SPA### trampoline_fmt_64
# %bb.1:
	movzbl	7(%r14), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %r12d
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %r12d
	cmpl	$2, %r15d
	jae	.LBB181_4
###SPA### trampoline_fmt_64
.LBB181_2:
###SPA## trampoline_fmt_64
	xorl	%r13d, %r13d
	jmp	.LBB181_6
.LBB181_3:
###SPA## trampoline_fmt_64
	xorl	%r12d, %r12d
	cmpl	$2, %r15d
	jb	.LBB181_2
###SPA### trampoline_fmt_64
.LBB181_4:
###SPA## trampoline_fmt_64
	cmpl	$1073741824, %r15d      # imm = 0x40000000
	ja	.LBB181_10
###SPA### trampoline_fmt_64
# %bb.5:
	leal	-1(%r15), %eax
	bsrl	%eax, %eax
	xorl	$31, %eax
	movl	$32, %r13d
	subq	%rax, %r13
.LBB181_6:
###SPA## trampoline_fmt_64
	movl	%r15d, %ebx
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%rbx,4), %rax
	leaq	(%rax,%rax,2), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB181_10
###SPA### trampoline_fmt_64
# %bb.7:
	testl	%r15d, %r15d
	je	.LBB181_27
###SPA### trampoline_fmt_64
# %bb.8:
	leaq	(%rax,%rbx,4), %rcx
	cmpl	$4, %r15d
	jae	.LBB181_11
###SPA### trampoline_fmt_64
# %bb.9:
	xorl	%r8d, %r8d
	movq	%rax, %rsi
	jmp	.LBB181_20
.LBB181_10:
###SPA## trampoline_fmt_64
	movl	$2, %eax
	jmp	.LBB181_41
.LBB181_11:
###SPA## trampoline_fmt_64
	movl	%ebx, %r8d
	andl	$-4, %r8d
	leaq	-4(%r8), %rdi
	movq	%rdi, %rdx
	shrq	$2, %rdx
	addq	$1, %rdx
	movl	%edx, %esi
	andl	$3, %esi
	cmpq	$12, %rdi
	jae	.LBB181_13
###SPA### trampoline_fmt_64
# %bb.12:
	xorl	%edi, %edi
	testq	%rsi, %rsi
	jne	.LBB181_16
###SPA### trampoline_fmt_64
	jmp	.LBB181_18
.LBB181_13:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rbx,4), %rbp
	addq	$112, %rbp
	movl	$1, %edi
	subq	%rdx, %rdi
	leaq	(%rsi,%rdi), %rdx
	addq	$-1, %rdx
	xorl	%edi, %edi
	xorps	%xmm0, %xmm0
	.p2align	4, 0x90
.LBB181_14:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	%xmm0, (%rax,%rdi,4)
	movups	%xmm0, -112(%rbp,%rdi,8)
	movups	%xmm0, -96(%rbp,%rdi,8)
	movups	%xmm0, 16(%rax,%rdi,4)
	movups	%xmm0, -80(%rbp,%rdi,8)
	movups	%xmm0, -64(%rbp,%rdi,8)
	movups	%xmm0, 32(%rax,%rdi,4)
	movups	%xmm0, -48(%rbp,%rdi,8)
	movups	%xmm0, -32(%rbp,%rdi,8)
	movups	%xmm0, 48(%rax,%rdi,4)
	movups	%xmm0, -16(%rbp,%rdi,8)
	movups	%xmm0, (%rbp,%rdi,8)
	addq	$16, %rdi
	addq	$4, %rdx
	jne	.LBB181_14
###SPA### trampoline_fmt_64
# %bb.15:
	testq	%rsi, %rsi
	je	.LBB181_18
###SPA### trampoline_fmt_64
.LBB181_16:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rdi,4), %rdx
	addq	$8, %rdx
	shlq	$3, %rdi
	leaq	(%rdi,%rbx,4), %rdi
	addq	%rax, %rdi
	addq	$16, %rdi
	negq	%rsi
	xorl	%ebp, %ebp
	xorps	%xmm0, %xmm0
	.p2align	4, 0x90
.LBB181_17:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	%xmm0, -8(%rdx,%rbp)
	movups	%xmm0, -16(%rdi,%rbp,2)
	movups	%xmm0, (%rdi,%rbp,2)
	addq	$16, %rbp
	addq	$1, %rsi
	jne	.LBB181_17
###SPA### trampoline_fmt_64
.LBB181_18:
###SPA## trampoline_fmt_64
	cmpq	%rbx, %r8
	je	.LBB181_27
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	(%rcx,%r8,8), %rcx
	leaq	(%rax,%r8,4), %rsi
.LBB181_20:
###SPA## trampoline_fmt_64
	movl	%ebx, %ebp
	subl	%r8d, %ebp
	movq	%r8, %rdi
	notq	%rdi
	addq	%rbx, %rdi
	andq	$7, %rbp
	je	.LBB181_24
###SPA### trampoline_fmt_64
# %bb.21:
	negq	%rbp
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB181_22:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	$0, (%rsi)
	movq	$0, (%rcx)
	addq	$8, %rcx
	addq	$4, %rsi
	addq	$-1, %rdx
	cmpq	%rdx, %rbp
	jne	.LBB181_22
###SPA### trampoline_fmt_64
# %bb.23:
	subq	%rdx, %r8
.LBB181_24:
###SPA## trampoline_fmt_64
	cmpq	$7, %rdi
	jb	.LBB181_27
###SPA### trampoline_fmt_64
# %bb.25:
	subq	%r8, %rbx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB181_26:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	$0, (%rsi,%rdx,4)
	movq	$0, (%rcx,%rdx,8)
	movl	$0, 4(%rsi,%rdx,4)
	movq	$0, 8(%rcx,%rdx,8)
	movl	$0, 8(%rsi,%rdx,4)
	movq	$0, 16(%rcx,%rdx,8)
	movl	$0, 12(%rsi,%rdx,4)
	movq	$0, 24(%rcx,%rdx,8)
	movl	$0, 16(%rsi,%rdx,4)
	movq	$0, 32(%rcx,%rdx,8)
	movl	$0, 20(%rsi,%rdx,4)
	movq	$0, 40(%rcx,%rdx,8)
	movl	$0, 24(%rsi,%rdx,4)
	movq	$0, 48(%rcx,%rdx,8)
	movl	$0, 28(%rsi,%rdx,4)
	movq	$0, 56(%rcx,%rdx,8)
	addq	$8, %rdx
	cmpq	%rdx, %rbx
	jne	.LBB181_26
###SPA### trampoline_fmt_64
.LBB181_27:
###SPA## trampoline_fmt_64
	movq	(%r14), %rcx
	shlq	$56, %r13
	movabsq	$2305843009213693952, %rdx # imm = 0x2000000000000000
	subq	%r13, %rdx
	movl	$0, 20(%r14)
	addq	$1, %rcx
	movabsq	$72057594037927935, %rsi # imm = 0xFFFFFFFFFFFFFF
	andq	%rcx, %rsi
	orq	%rdx, %rsi
	movq	%rsi, (%r14)
	movq	%rax, 8(%r14)
	testl	%r12d, %r12d
	je	.LBB181_40
###SPA### trampoline_fmt_64
# %bb.28:
	movl	%r12d, %r8d
	movq	(%rsp), %rax            # 8-byte Reload
	leaq	(%rax,%r8,4), %r10
	xorl	%r11d, %r11d
	movq	%rax, %r12
	.p2align	4, 0x90
.LBB181_29:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB181_32 Depth 2
###SPA## trampoline_fmt_64
	movl	(%r12), %r9d
	cmpq	$2, %r9
	jb	.LBB181_39
###SPA### trampoline_fmt_64
# %bb.30:                               #   in Loop: Header=BB181_29 Depth=1
	andl	$-2, %r9d
	movq	(%r14), %rax
	shrq	$56, %rax
	movq	%r9, %rbx
	movl	%eax, %ecx
	shrq	%cl, %rbx
	movl	$32, %r15d
	subl	%eax, %r15d
	movl	$1, %esi
	movl	%r15d, %ecx
	shll	%cl, %esi
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	cmoveq	%rcx, %rsi
	leaq	(%rcx,%rbx,4), %rdi
	movl	(%rcx,%rbx,4), %edx
	cmpl	$2, %edx
	jb	.LBB181_37
###SPA### trampoline_fmt_64
# %bb.31:                               #   in Loop: Header=BB181_29 Depth=1
	movl	%r9d, %r13d
	movl	%r15d, %ecx
	shll	%cl, %r13d
	movl	%eax, %ecx
	shrl	%cl, %r13d
	orl	$1, %r13d
	movl	$-1, %eax
	movl	%r15d, %ecx
	shll	%cl, %eax
	notl	%eax
	.p2align	4, 0x90
.LBB181_32:                             #   Parent Loop BB181_29 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	subl	%r13d, %ebx
	andl	%eax, %ebx
	orl	$1, %edx
	movl	%edx, (%rdi)
	movq	8(%r14), %rsi
	testq	%rsi, %rsi
	je	.LBB181_34
###SPA### trampoline_fmt_64
# %bb.33:                               #   in Loop: Header=BB181_32 Depth=2
	movzbl	7(%r14), %edx
	movl	$32, %ecx
	subl	%edx, %ecx
	movl	$1, %ebp
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %ebp
	jmp	.LBB181_35
	.p2align	4, 0x90
.LBB181_34:                             #   in Loop: Header=BB181_32 Depth=2
###SPA## trampoline_fmt_64
	xorl	%ebp, %ebp
.LBB181_35:                             #   in Loop: Header=BB181_32 Depth=2
###SPA## trampoline_fmt_64
	movl	%ebx, %ecx
	leaq	(%rsi,%rcx,4), %rdi
	movl	(%rsi,%rcx,4), %edx
	cmpl	$1, %edx
	ja	.LBB181_32
###SPA### trampoline_fmt_64
# %bb.36:                               #   in Loop: Header=BB181_29 Depth=1
	leaq	(%rsi,%rbp,4), %rax
	leaq	(%rax,%rcx,8), %rax
	jmp	.LBB181_38
	.p2align	4, 0x90
.LBB181_37:                             #   in Loop: Header=BB181_29 Depth=1
###SPA## trampoline_fmt_64
	leaq	(%rcx,%rsi,4), %rax
	leaq	(%rax,%rbx,8), %rax
.LBB181_38:                             #   in Loop: Header=BB181_29 Depth=1
###SPA## trampoline_fmt_64
	movl	%r9d, (%rdi)
	movq	(%r10), %rcx
	movq	%rcx, (%rax)
.LBB181_39:                             #   in Loop: Header=BB181_29 Depth=1
###SPA## trampoline_fmt_64
	movl	$0, (%r12)
	addq	$8, %r10
	addq	$4, %r12
	addq	$1, %r11
	cmpq	%r8, %r11
	jne	.LBB181_29
###SPA### trampoline_fmt_64
.LBB181_40:
###SPA## trampoline_fmt_64
	movq	(%rsp), %rdi            # 8-byte Reload
	callq	free@PLT
	movl	$1, %eax
.LBB181_41:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end181:
	.size	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE, .Lfunc_end181-_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_,"axG",@progbits,_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_,comdat
	.hidden	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_ # -- Begin function _ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.weak	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
	.type	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_,@function
_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_: # @_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	cmpl	$0, 16(%rdi)
	je	.LBB182_17
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%rsi), %r8
	movq	%r8, %rax
	shrq	$32, %rax
	imull	$-1640531527, %r8d, %ecx # imm = 0x9E3779B9
	imull	$-957401312, %r8d, %edx # imm = 0xC6EF3720
	shrl	$27, %ecx
	orl	%edx, %ecx
	xorl	%eax, %ecx
	imull	$-480352335, %ecx, %eax # imm = 0xE35E67B1
	leal	-2(%rax), %r11d
	cmpl	$1, %eax
	cmoval	%eax, %r11d
	andl	$-2, %r11d
	movq	(%rdi), %r10
	shrq	$56, %r10
	movl	%r11d, %edx
	movl	%r10d, %ecx
	shrl	%cl, %edx
	movq	8(%rdi), %rax
	movl	$32, %r9d
	subl	%r10d, %r9d
	movl	$1, %ebx
	movl	%r9d, %ecx
	shll	%cl, %ebx
	testq	%rax, %rax
	movq	%rbx, %rsi
	cmoveq	%rax, %rsi
	movl	(%rax,%rdx,4), %ecx
	testl	%ecx, %ecx
	je	.LBB182_17
###SPA### trampoline_fmt_64
# %bb.2:
	movl	%ecx, %ebp
	andl	$-2, %ebp
	cmpl	%r11d, %ebp
	jne	.LBB182_8
###SPA### trampoline_fmt_64
# %bb.3:
	leaq	(%rax,%rsi,4), %rsi
	cmpq	%r8, (%rsi,%rdx,8)
	je	.LBB182_4
###SPA### trampoline_fmt_64
.LBB182_8:
###SPA## trampoline_fmt_64
	movl	%r11d, %esi
	movl	%r9d, %ecx
	shll	%cl, %esi
	movl	%r10d, %ecx
	shrl	%cl, %esi
	orl	$1, %esi
	movl	$-1, %r10d
	movl	%r9d, %ecx
	shll	%cl, %r10d
	notl	%r10d
	subl	%esi, %edx
	andl	%r10d, %edx
	movl	(%rax,%rdx,4), %ecx
	testl	%ecx, %ecx
	je	.LBB182_17
###SPA### trampoline_fmt_64
# %bb.9:
	leaq	(%rax,%rbx,4), %r9
	leaq	(%rax,%rdx,4), %rbx
	.p2align	4, 0x90
.LBB182_10:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	%ecx, %ebp
	andl	$-2, %ebp
	cmpl	%r11d, %ebp
	jne	.LBB182_12
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB182_10 Depth=1
	cmpq	%r8, (%r9,%rdx,8)
	je	.LBB182_5
###SPA### trampoline_fmt_64
.LBB182_12:                             #   in Loop: Header=BB182_10 Depth=1
###SPA## trampoline_fmt_64
	subl	%esi, %edx
	andl	%r10d, %edx
	leaq	(%rax,%rdx,4), %rbx
	movl	(%rax,%rdx,4), %ecx
	testl	%ecx, %ecx
	jne	.LBB182_10
###SPA### trampoline_fmt_64
	jmp	.LBB182_17
.LBB182_4:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rdx,4), %rbx
.LBB182_5:
###SPA## trampoline_fmt_64
	cmpl	$2, %ecx
	jb	.LBB182_17
###SPA### trampoline_fmt_64
# %bb.6:
	testb	$1, %cl
	jne	.LBB182_7
###SPA### trampoline_fmt_64
# %bb.13:
	movl	$0, (%rbx)
	jmp	.LBB182_14
.LBB182_7:
###SPA## trampoline_fmt_64
	movl	$1, (%rbx)
	addl	$1, 20(%rdi)
.LBB182_14:
###SPA## trampoline_fmt_64
	movl	16(%rdi), %eax
	addl	$-1, %eax
	movl	%eax, 16(%rdi)
	cmpq	$0, 8(%rdi)
	je	.LBB182_17
###SPA### trampoline_fmt_64
# %bb.15:
	movzbl	7(%rdi), %edx
	movl	$32, %ecx
	subl	%edx, %ecx
	cmpl	$3, %ecx
	jb	.LBB182_17
###SPA### trampoline_fmt_64
# %bb.16:
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %esi
	movl	%esi, %ecx
	shrl	$2, %ecx
	cmpl	%ecx, %eax
	jbe	.LBB182_18
###SPA### trampoline_fmt_64
.LBB182_17:
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB182_18:
	.cfi_def_cfa_offset 24
###SPA## trampoline_fmt_64
	shrl	%esi
	xorl	%edx, %edx
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6detail9HashTableIKN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS_7HashSetIS7_NS4_17PointerEdgeHasherIS7_EENS2_17SystemAllocPolicyEE13SetHashPolicyESC_E15changeTableSizeEjNSF_15FailureBehaviorE # TAILCALL
.Lfunc_end182:
	.size	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_, .Lfunc_end182-_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev,"axG",@progbits,_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev,comdat
	.hidden	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev # -- Begin function _ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev
	.weak	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev
	.p2align	4, 0x90
	.type	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev,@function
_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev: # @_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	leaq	_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	40(%rdi), %r12
	testq	%r12, %r12
	je	.LBB183_11
###SPA### trampoline_fmt_64
# %bb.1:
	movzbl	39(%r14), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %r13d
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %r13d
	leaq	(%r12,%r13,4), %rbx
	xorl	%ebp, %ebp
	leaq	8(%rsp), %r15
	.p2align	4, 0x90
.LBB183_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpl	$2, (%r12,%rbp,4)
	jb	.LBB183_9
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB183_2 Depth=1
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB183_9
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB183_2 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB183_9
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB183_2 Depth=1
	movq	%rbx, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB183_9
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB183_2 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB183_7
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB183_2 Depth=1
	addq	$184, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB183_9:                              #   in Loop: Header=BB183_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	addq	$1, %rbp
	cmpq	%rbp, %r13
	jne	.LBB183_2
###SPA### trampoline_fmt_64
	jmp	.LBB183_10
.LBB183_7:                              #   in Loop: Header=BB183_2 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	addq	$1, %rbp
	cmpq	%rbp, %r13
	jne	.LBB183_2
###SPA### trampoline_fmt_64
.LBB183_10:
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	callq	free@PLT
.LBB183_11:
###SPA## trampoline_fmt_64
	cmpb	$0, 24(%r14)
	jne	.LBB183_14
###SPA### trampoline_fmt_64
# %bb.12:
	leaq	8(%r14), %rcx
	movq	(%rcx), %rax
	cmpq	%rcx, %rax
	je	.LBB183_14
###SPA### trampoline_fmt_64
# %bb.13:
	movq	16(%r14), %rcx
	movq	%rax, (%rcx)
	movq	8(%r14), %rax
	movq	16(%r14), %rcx
	movq	%rcx, 8(%rax)
.LBB183_14:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	callq	_ZdlPv@PLT
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB183_16
###SPA### trampoline_fmt_64
# %bb.15:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB183_16:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end183:
	.size	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev, .Lfunc_end183-_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE,"axG",@progbits,_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE,comdat
	.hidden	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE # -- Begin function _ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE
	.weak	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE
	.p2align	4, 0x90
	.type	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE,@function
_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE: # @_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$64, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%fs:40, %rax
	movq	%rax, 56(%rsp)
	movl	48(%rdi), %r14d
	movb	$0, 48(%rsp)
	movq	40(%rdi), %rsi
	leaq	32(%rdi), %rdx
	testq	%rsi, %rsi
	je	.LBB184_1
###SPA### trampoline_fmt_64
# %bb.2:
	movzbl	7(%rdx), %edi
	movl	$32, %eax
	movl	$32, %ecx
	subl	%edi, %ecx
	movl	$1, %ebx
	movl	$1, %edi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %edi
	leaq	(%rsi,%rdi,4), %rdi
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movzbl	7(%rdx), %ecx
	subl	%ecx, %eax
	movl	%eax, %ecx
	shll	%cl, %ebx
	jmp	.LBB184_3
.LBB184_1:
###SPA## trampoline_fmt_64
	movq	%rsi, (%rsp)
	movq	%rsi, 8(%rsp)
	xorl	%ebx, %ebx
	movq	%rsi, %rdi
.LBB184_3:
###SPA## trampoline_fmt_64
	leaq	(%rsi,%rbx,4), %rcx
	leaq	(%rcx,%rbx,8), %rax
	movq	%rax, 16(%rsp)
	movq	%rcx, 24(%rsp)
	cmpq	%rdi, %rax
	je	.LBB184_9
###SPA### trampoline_fmt_64
# %bb.4:
	cmpl	$1, (%rsi)
	ja	.LBB184_9
###SPA### trampoline_fmt_64
# %bb.5:
	addq	$4, %rsi
	addq	$8, %rdi
	.p2align	4, 0x90
.LBB184_6:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rdi, %rcx
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	cmpq	%rax, %rdi
	jae	.LBB184_8
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB184_6 Depth=1
	leaq	8(%rcx), %rdi
	cmpl	$2, (%rsi)
	leaq	4(%rsi), %rsi
	jb	.LBB184_6
###SPA### trampoline_fmt_64
.LBB184_8:
###SPA## trampoline_fmt_64
	movq	%rcx, %rdi
.LBB184_9:
###SPA## trampoline_fmt_64
	movq	%rdx, 32(%rsp)
	movw	$0, 40(%rsp)
	movb	$1, 48(%rsp)
	cmpq	%rax, %rdi
	je	.LBB184_17
###SPA### trampoline_fmt_64
# %bb.10:
	movq	%rsp, %rbx
	.p2align	4, 0x90
.LBB184_11:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB184_14 Depth 2
###SPA## trampoline_fmt_64
	callq	_ZN2js2gc28IsAboutToBeFinalizedInternalI8JSObjectEEbPPT_
	testb	%al, %al
	je	.LBB184_13
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB184_11 Depth=1
	movq	32(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE
	movb	$1, 41(%rsp)
.LBB184_13:                             #   in Loop: Header=BB184_11 Depth=1
###SPA## trampoline_fmt_64
	movq	(%rsp), %rdx
	movq	8(%rsp), %rcx
	movq	16(%rsp), %rax
	addq	$4, %rcx
	addq	$8, %rdx
	.p2align	4, 0x90
.LBB184_14:                             #   Parent Loop BB184_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movq	%rdx, %rdi
	movq	%rdx, (%rsp)
	movq	%rcx, 8(%rsp)
	cmpq	%rax, %rdx
	jae	.LBB184_16
###SPA### trampoline_fmt_64
# %bb.15:                               #   in Loop: Header=BB184_14 Depth=2
	leaq	8(%rdi), %rdx
	cmpl	$2, (%rcx)
	leaq	4(%rcx), %rcx
	jb	.LBB184_14
###SPA### trampoline_fmt_64
.LBB184_16:                             #   in Loop: Header=BB184_11 Depth=1
###SPA## trampoline_fmt_64
	cmpq	%rdi, %rax
	jne	.LBB184_11
###SPA### trampoline_fmt_64
.LBB184_17:
###SPA## trampoline_fmt_64
	testq	%r15, %r15
	je	.LBB184_18
###SPA### trampoline_fmt_64
# %bb.19:
	movq	%r15, %rdi
	callq	_ZN2js2gc15LockStoreBufferEPNS0_11StoreBufferE
	movb	$1, %bl
	cmpb	$0, 48(%rsp)
	je	.LBB184_22
###SPA### trampoline_fmt_64
.LBB184_21:
###SPA## trampoline_fmt_64
	movq	%rsp, %rdi
	callq	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev
	movb	$0, 48(%rsp)
.LBB184_22:
###SPA## trampoline_fmt_64
	testb	%bl, %bl
	je	.LBB184_25
###SPA### trampoline_fmt_64
# %bb.23:
	movq	%r15, %rdi
	callq	_ZN2js2gc17UnlockStoreBufferEPNS0_11StoreBufferE
	cmpb	$0, 48(%rsp)
	je	.LBB184_25
###SPA### trampoline_fmt_64
# %bb.24:
	movq	%rsp, %rdi
	callq	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev
.LBB184_25:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	56(%rsp), %rax
	jne	.LBB184_27
###SPA### trampoline_fmt_64
# %bb.26:
	movq	%r14, %rax
	addq	$64, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB184_18:
	.cfi_def_cfa_offset 96
###SPA## trampoline_fmt_64
	xorl	%ebx, %ebx
	cmpb	$0, 48(%rsp)
	jne	.LBB184_21
###SPA### trampoline_fmt_64
	jmp	.LBB184_22
.LBB184_27:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end184:
	.size	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE, .Lfunc_end184-_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv,"axG",@progbits,_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv,comdat
	.hidden	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv # -- Begin function _ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv
	.weak	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv
	.p2align	4, 0x90
	.type	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv,@function
_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv: # @_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	cmpl	$0, 48(%rdi)
	setne	%al
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end185:
	.size	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv, .Lfunc_end185-_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb,"axG",@progbits,_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb,comdat
	.hidden	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb # -- Begin function _ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb
	.weak	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb
	.p2align	4, 0x90
	.type	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb,@function
_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb: # @_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movb	%sil, 56(%rdi)
	movb	$1, %al
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end186:
	.size	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb, .Lfunc_end186-_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv,"axG",@progbits,_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv,comdat
	.hidden	_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv # -- Begin function _ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv
	.weak	_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv
	.p2align	4, 0x90
	.type	_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv,@function
_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv: # @_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	movb	56(%rdi), %al
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end187:
	.size	_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv, .Lfunc_end187-_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_,"axG",@progbits,_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_,comdat
	.hidden	_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_ # -- Begin function _ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_
	.weak	_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_
	.p2align	4, 0x90
	.type	_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_,@function
_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_: # @_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	testq	%rdx, %rdx
	je	.LBB188_13
###SPA### trampoline_fmt_64
# %bb.1:
	andq	$-1048576, %rdx         # imm = 0xFFF00000
	movq	1048560(%rdx), %r15
	testq	%r15, %r15
	je	.LBB188_13
###SPA### trampoline_fmt_64
# %bb.2:
	testq	%rsi, %rsi
	je	.LBB188_18
###SPA### trampoline_fmt_64
# %bb.3:
	andq	$-1048576, %rsi         # imm = 0xFFF00000
	cmpq	$0, 1048560(%rsi)
	jne	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.4:
	cmpb	$0, 353(%r15)
	je	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.5:
	movq	344(%r15), %rcx
	movq	16(%rcx), %rax
	testq	%rax, %rax
	je	.LBB188_9
###SPA### trampoline_fmt_64
# %bb.6:
	movq	8(%rcx), %rcx
	shlq	$3, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB188_7:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rsi
	subq	(%rcx,%rdx), %rsi
	cmpq	$1048575, %rsi          # imm = 0xFFFFF
	jbe	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB188_7 Depth=1
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jne	.LBB188_7
###SPA### trampoline_fmt_64
.LBB188_9:
###SPA## trampoline_fmt_64
	leaq	208(%r15), %r14
	cmpq	$0, 208(%r15)
	je	.LBB188_11
###SPA### trampoline_fmt_64
# %bb.10:
	leaq	184(%r15), %rdi
	movq	%r14, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	testb	%al, %al
	je	.LBB188_32
###SPA### trampoline_fmt_64
.LBB188_11:
###SPA## trampoline_fmt_64
	movq	$0, 208(%r15)
	cmpl	$6145, 200(%r15)        # imm = 0x1801
	jb	.LBB188_26
###SPA### trampoline_fmt_64
.LBB188_31:
###SPA## trampoline_fmt_64
	movq	216(%r15), %rdi
	movl	224(%r15), %esi
	callq	_ZN2js2gc11StoreBuffer18setAboutToOverflowEN2JS8GCReasonE
	movq	%rbx, (%r14)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	je	.LBB188_30
###SPA### trampoline_fmt_64
	jmp	.LBB188_27
.LBB188_13:
###SPA## trampoline_fmt_64
	testq	%rsi, %rsi
	je	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.14:
	andq	$-1048576, %rsi         # imm = 0xFFF00000
	movq	1048560(%rsi), %rdi
	testq	%rdi, %rdi
	je	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.15:
	movq	%rbx, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.16:
	cmpq	%rbx, 208(%rdi)
	je	.LBB188_28
###SPA### trampoline_fmt_64
# %bb.17:
	addq	$184, %rdi
	movq	%rsp, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	je	.LBB188_30
###SPA### trampoline_fmt_64
	jmp	.LBB188_27
.LBB188_18:
###SPA## trampoline_fmt_64
	cmpb	$0, 353(%r15)
	je	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.19:
	movq	344(%r15), %rcx
	movq	16(%rcx), %rax
	testq	%rax, %rax
	je	.LBB188_23
###SPA### trampoline_fmt_64
# %bb.20:
	movq	8(%rcx), %rcx
	shlq	$3, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB188_21:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, %rsi
	subq	(%rcx,%rdx), %rsi
	cmpq	$1048575, %rsi          # imm = 0xFFFFF
	jbe	.LBB188_29
###SPA### trampoline_fmt_64
# %bb.22:                               #   in Loop: Header=BB188_21 Depth=1
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jne	.LBB188_21
###SPA### trampoline_fmt_64
.LBB188_23:
###SPA## trampoline_fmt_64
	leaq	208(%r15), %r14
	cmpq	$0, 208(%r15)
	je	.LBB188_25
###SPA### trampoline_fmt_64
# %bb.24:
	leaq	184(%r15), %rdi
	movq	%r14, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	testb	%al, %al
	je	.LBB188_32
###SPA### trampoline_fmt_64
.LBB188_25:
###SPA## trampoline_fmt_64
	movq	$0, 208(%r15)
	cmpl	$6145, 200(%r15)        # imm = 0x1801
	jae	.LBB188_31
###SPA### trampoline_fmt_64
.LBB188_26:
###SPA## trampoline_fmt_64
	movq	%rbx, (%r14)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	je	.LBB188_30
###SPA### trampoline_fmt_64
.LBB188_27:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB188_28:
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
.LBB188_29:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB188_27
###SPA### trampoline_fmt_64
.LBB188_30:
###SPA## trampoline_fmt_64
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB188_32:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	leaq	.L.str.291(%rip), %rsi
	movq	%rsp, %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.Lfunc_end188:
	.size	_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_, .Lfunc_end188-_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE,"axG",@progbits,_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE,comdat
	.hidden	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE # -- Begin function _ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE
	.weak	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE
	.p2align	4, 0x90
	.type	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE,@function
_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE: # @_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsi), %rax
	testb	$1, (%rax)
	jne	.LBB189_1
###SPA### trampoline_fmt_64
# %bb.8:
	movl	$0, (%rax)
	movq	(%rsi), %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB189_14
###SPA### trampoline_fmt_64
# %bb.9:
	andq	$-1048576, %rcx         # imm = 0xFFF00000
	movq	1048560(%rcx), %rdi
	testq	%rdi, %rdi
	je	.LBB189_14
###SPA### trampoline_fmt_64
# %bb.10:
	movq	%rax, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB189_14
###SPA### trampoline_fmt_64
# %bb.11:
	cmpq	%rax, 208(%rdi)
	je	.LBB189_12
###SPA### trampoline_fmt_64
# %bb.13:
	addq	$184, %rdi
	movq	%rsp, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	addl	$-1, 16(%rbx)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	je	.LBB189_15
###SPA### trampoline_fmt_64
	jmp	.LBB189_16
.LBB189_1:
###SPA## trampoline_fmt_64
	movl	$1, (%rax)
	movq	(%rsi), %rax
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB189_7
###SPA### trampoline_fmt_64
# %bb.2:
	andq	$-1048576, %rcx         # imm = 0xFFF00000
	movq	1048560(%rcx), %rdi
	testq	%rdi, %rdi
	je	.LBB189_7
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rax, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB189_7
###SPA### trampoline_fmt_64
# %bb.4:
	cmpq	%rax, 208(%rdi)
	je	.LBB189_5
###SPA### trampoline_fmt_64
# %bb.6:
	addq	$184, %rdi
	movq	%rsp, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
.LBB189_7:
###SPA## trampoline_fmt_64
	addl	$1, 20(%rbx)
.LBB189_14:
###SPA## trampoline_fmt_64
	addl	$-1, 16(%rbx)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB189_16
###SPA### trampoline_fmt_64
.LBB189_15:
###SPA## trampoline_fmt_64
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB189_12:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addl	$-1, 16(%rbx)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	je	.LBB189_15
###SPA### trampoline_fmt_64
.LBB189_16:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB189_5:
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addl	$1, 20(%rbx)
	addl	$-1, 16(%rbx)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	je	.LBB189_15
###SPA### trampoline_fmt_64
	jmp	.LBB189_16
.Lfunc_end189:
	.size	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE, .Lfunc_end189-_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E6removeERNS0_9EntrySlotIS7_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev,"axG",@progbits,_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev,comdat
	.hidden	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev # -- Begin function _ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev
	.weak	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev
	.p2align	4, 0x90
	.type	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev,@function
_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev: # @_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	cmpb	$0, 40(%rdi)
	je	.LBB190_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	32(%rbx), %rax
	movq	(%rax), %rcx
	leaq	1(%rcx), %rdx
	movabsq	$72057594037927935, %rsi # imm = 0xFFFFFFFFFFFFFF
	andq	%rdx, %rsi
	movabsq	$-72057594037927936, %rdx # imm = 0xFF00000000000000
	andq	%rcx, %rdx
	orq	%rsi, %rdx
	movq	%rdx, (%rax)
	movq	32(%rbx), %r14
	movl	20(%r14), %eax
	movzbl	7(%r14), %edx
	movl	$32, %ecx
	subl	%edx, %ecx
	cmpq	$0, 8(%r14)
	je	.LBB190_16
###SPA### trampoline_fmt_64
# %bb.2:
	movl	$3, %edx
	shll	%cl, %edx
	movl	16(%r14), %esi
	addl	%eax, %esi
	shrl	$2, %edx
	cmpl	%edx, %esi
	jb	.LBB190_6
###SPA### trampoline_fmt_64
# %bb.3:
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %esi
	movl	%esi, %ecx
	shrl	$2, %ecx
	jmp	.LBB190_4
.LBB190_16:
###SPA## trampoline_fmt_64
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %esi
	xorl	%ecx, %ecx
.LBB190_4:
###SPA## trampoline_fmt_64
	cmpl	%ecx, %eax
	setb	%cl
	shll	%cl, %esi
	xorl	%edx, %edx
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE
	cmpl	$2, %eax
	jne	.LBB190_6
###SPA### trampoline_fmt_64
# %bb.5:
	movq	%r14, %rdi
	callq	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv
.LBB190_6:
###SPA## trampoline_fmt_64
	cmpb	$0, 41(%rbx)
	je	.LBB190_15
###SPA### trampoline_fmt_64
# %bb.7:
	movq	32(%rbx), %rbx
	movl	16(%rbx), %eax
	testl	%eax, %eax
	je	.LBB190_8
###SPA### trampoline_fmt_64
# %bb.9:
	leal	2(,%rax,4), %eax
	movl	$4, %esi
	cmpl	$12, %eax
	jb	.LBB190_11
###SPA### trampoline_fmt_64
# %bb.10:
	movl	%eax, %eax
	movl	$2863311531, %ecx       # imm = 0xAAAAAAAB
	imulq	%rax, %rcx
	shrq	$33, %rcx
	addq	$-1, %rcx
	bsrq	%rcx, %rcx
	xorl	$192, %ecx
	addl	$65, %ecx
	movl	$1, %esi
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rsi
.LBB190_11:
###SPA## trampoline_fmt_64
	cmpq	$0, 8(%rbx)
	je	.LBB190_12
###SPA### trampoline_fmt_64
# %bb.13:
	movzbl	7(%rbx), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %eax
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %eax
	cmpl	%eax, %esi
	jb	.LBB190_17
###SPA### trampoline_fmt_64
.LBB190_15:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB190_8:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	8(%rbx), %rdi
	callq	free@PLT
	movq	(%rbx), %rax
	addq	$1, %rax
	movabsq	$72057594037927935, %rcx # imm = 0xFFFFFFFFFFFFFF
	andq	%rax, %rcx
	movabsq	$2161727821137838080, %rax # imm = 0x1E00000000000000
	orq	%rcx, %rax
	movq	%rax, (%rbx)
	movq	$0, 8(%rbx)
	movl	$0, 20(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB190_12:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	cmpl	%eax, %esi
	jae	.LBB190_15
###SPA### trampoline_fmt_64
.LBB190_17:
###SPA## trampoline_fmt_64
	xorl	%edx, %edx
	movq	%rbx, %rdi
                                        # kill: def $esi killed $esi killed $rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE # TAILCALL
.Lfunc_end190:
	.size	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev, .Lfunc_end190-_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E4EnumD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function _ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv
.LCPI191_0:
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.section	.text._ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv,"axG",@progbits,_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv,comdat
	.hidden	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv
	.weak	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv
	.p2align	4, 0x90
	.type	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv,@function
_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv: # @_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movl	$0, 20(%rdi)
	movq	(%rdi), %rdx
	movq	8(%rdi), %rax
	leaq	1(%rdx), %rcx
	movabsq	$72057594037927935, %rsi # imm = 0xFFFFFFFFFFFFFF
	andq	%rcx, %rsi
	movabsq	$-72057594037927936, %rcx # imm = 0xFF00000000000000
	andq	%rdx, %rcx
	orq	%rsi, %rcx
	movq	%rcx, (%rdi)
	testq	%rax, %rax
	je	.LBB191_13
###SPA### trampoline_fmt_64
# %bb.1:
	shrq	$56, %rdx
	movl	$32, %ecx
	subl	%edx, %ecx
	movl	$1, %edx
	shll	%cl, %edx
	cmpl	$3, %ecx
	jae	.LBB191_3
###SPA### trampoline_fmt_64
# %bb.2:
	xorl	%ecx, %ecx
	jmp	.LBB191_11
.LBB191_3:
###SPA## trampoline_fmt_64
	movl	%edx, %ecx
	andl	$-8, %ecx
	leaq	-8(%rcx), %rbp
	movq	%rbp, %rdi
	shrq	$3, %rdi
	addq	$1, %rdi
	movl	%edi, %esi
	andl	$1, %esi
	testq	%rbp, %rbp
	je	.LBB191_4
###SPA### trampoline_fmt_64
# %bb.5:
	movl	$1, %ebp
	subq	%rdi, %rbp
	addq	%rsi, %rbp
	addq	$-1, %rbp
	xorl	%edi, %edi
	movaps	.LCPI191_0(%rip), %xmm0 # xmm0 = [4294967294,4294967294,4294967294,4294967294]
	.p2align	4, 0x90
.LBB191_6:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rax,%rdi,4), %xmm1
	movups	16(%rax,%rdi,4), %xmm2
	movups	32(%rax,%rdi,4), %xmm3
	movups	48(%rax,%rdi,4), %xmm4
	andps	%xmm0, %xmm1
	andps	%xmm0, %xmm2
	movups	%xmm1, (%rax,%rdi,4)
	movups	%xmm2, 16(%rax,%rdi,4)
	andps	%xmm0, %xmm3
	andps	%xmm0, %xmm4
	movups	%xmm3, 32(%rax,%rdi,4)
	movups	%xmm4, 48(%rax,%rdi,4)
	addq	$16, %rdi
	addq	$2, %rbp
	jne	.LBB191_6
###SPA### trampoline_fmt_64
# %bb.7:
	testq	%rsi, %rsi
	je	.LBB191_9
###SPA### trampoline_fmt_64
.LBB191_8:
###SPA## trampoline_fmt_64
	movups	(%rax,%rdi,4), %xmm0
	movups	16(%rax,%rdi,4), %xmm1
	movaps	.LCPI191_0(%rip), %xmm2 # xmm2 = [4294967294,4294967294,4294967294,4294967294]
	andps	%xmm2, %xmm0
	andps	%xmm2, %xmm1
	movups	%xmm0, (%rax,%rdi,4)
	movups	%xmm1, 16(%rax,%rdi,4)
.LBB191_9:
###SPA## trampoline_fmt_64
	cmpq	%rdx, %rcx
	je	.LBB191_13
###SPA### trampoline_fmt_64
# %bb.10:
	leaq	(%rax,%rcx,4), %rax
.LBB191_11:
###SPA## trampoline_fmt_64
	subq	%rcx, %rdx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB191_12:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	andb	$-2, (%rax,%rcx,4)
	addq	$1, %rcx
	cmpq	%rcx, %rdx
	jne	.LBB191_12
###SPA### trampoline_fmt_64
.LBB191_13:
###SPA## trampoline_fmt_64
	xorl	%r12d, %r12d
	leaq	8(%rsp), %r14
	movl	%r12d, %r12d
	movq	8(%r15), %rbx
	testq	%rbx, %rbx
	jne	.LBB191_17
###SPA### trampoline_fmt_64
	jmp	.LBB191_16
.LBB191_26:
###SPA## trampoline_fmt_64
	addl	$1, %r12d
	movl	%r12d, %r12d
	movq	8(%r15), %rbx
	testq	%rbx, %rbx
	jne	.LBB191_17
###SPA### trampoline_fmt_64
	jmp	.LBB191_16
	.p2align	4, 0x90
.LBB191_40:
###SPA## trampoline_fmt_64
	movl	(%rbx,%r12,4), %eax
	movl	(%rbp), %ecx
	movl	%ecx, (%rbx,%r12,4)
	orl	$1, %eax
	movl	%eax, (%rbp)
	movq	8(%r15), %rbx
	testq	%rbx, %rbx
	je	.LBB191_16
###SPA### trampoline_fmt_64
.LBB191_17:
###SPA## trampoline_fmt_64
	movzbl	7(%r15), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %eax
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %eax
	cmpl	%eax, %r12d
	jae	.LBB191_19
###SPA### trampoline_fmt_64
.LBB191_21:
###SPA## trampoline_fmt_64
	testq	%rbx, %rbx
	je	.LBB191_22
###SPA### trampoline_fmt_64
# %bb.23:
	movzbl	7(%r15), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %r8d
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %r8d
	movl	(%rbx,%r12,4), %ebp
	cmpq	$2, %rbp
	jb	.LBB191_26
###SPA### trampoline_fmt_64
.LBB191_25:
###SPA## trampoline_fmt_64
	movl	%ebp, %eax
	andl	$1, %eax
	jne	.LBB191_26
###SPA### trampoline_fmt_64
# %bb.27:
	andl	$-2, %ebp
	movq	(%r15), %rax
	shrq	$56, %rax
	movq	%rbp, %rsi
	movl	%eax, %ecx
	shrq	%cl, %rsi
	movl	$32, %edx
	subl	%eax, %edx
	movl	%edx, %ecx
	shll	%cl, %ebp
	movl	%eax, %ecx
	shrl	%cl, %ebp
	movl	$-1, %edi
	movl	%edx, %ecx
	shll	%cl, %edi
	movl	$1, %eax
	movl	%edx, %ecx
	shll	%cl, %eax
	leaq	(%rbx,%r8,4), %rcx
	leaq	(%rcx,%r12,8), %r13
	movl	(%rbx,%rsi,4), %ecx
	testb	$1, %cl
	jne	.LBB191_28
###SPA### trampoline_fmt_64
# %bb.42:
	leaq	(%rbx,%rax,4), %rax
	leaq	(%rax,%rsi,8), %rax
	leaq	(%rbx,%rsi,4), %rbp
	cmpq	%rax, %r13
	je	.LBB191_40
###SPA### trampoline_fmt_64
.LBB191_32:
###SPA## trampoline_fmt_64
	cmpl	$2, %ecx
	jb	.LBB191_34
###SPA### trampoline_fmt_64
# %bb.33:
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_
	jmp	.LBB191_40
	.p2align	4, 0x90
.LBB191_28:
###SPA## trampoline_fmt_64
	orl	$1, %ebp
	notl	%edi
	.p2align	4, 0x90
.LBB191_29:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	subl	%ebp, %esi
	andl	%edi, %esi
	movl	(%rbx,%rsi,4), %ecx
	testb	$1, %cl
	jne	.LBB191_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rbx, %rbx
	movl	%esi, %edx
	leaq	(%rbx,%rdx,4), %rbp
	cmoveq	%rbx, %rax
	leaq	(%rbx,%rax,4), %rax
	leaq	(%rax,%rdx,8), %rax
	cmpq	%rax, %r13
	jne	.LBB191_32
###SPA### trampoline_fmt_64
	jmp	.LBB191_40
	.p2align	4, 0x90
.LBB191_16:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	cmpl	%eax, %r12d
	jb	.LBB191_21
###SPA### trampoline_fmt_64
	jmp	.LBB191_19
	.p2align	4, 0x90
.LBB191_22:
###SPA## trampoline_fmt_64
	xorl	%r8d, %r8d
	movl	(%rbx,%r12,4), %ebp
	cmpq	$2, %rbp
	jae	.LBB191_25
###SPA### trampoline_fmt_64
	jmp	.LBB191_26
	.p2align	4, 0x90
.LBB191_34:
###SPA## trampoline_fmt_64
	movq	(%rax), %rsi
	movq	(%r13), %rcx
	movq	%rcx, (%rax)
	movq	(%r13), %rdx
	movq	%rax, %rdi
	callq	_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB191_40
###SPA### trampoline_fmt_64
# %bb.35:
	andq	$-1048576, %rax         # imm = 0xFFF00000
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB191_40
###SPA### trampoline_fmt_64
# %bb.36:
	movq	%r13, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB191_40
###SPA### trampoline_fmt_64
# %bb.37:
	cmpq	%r13, 208(%rdi)
	je	.LBB191_38
###SPA### trampoline_fmt_64
# %bb.39:
	addq	$184, %rdi
	movq	%r14, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	jmp	.LBB191_40
.LBB191_38:
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	jmp	.LBB191_40
.LBB191_19:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB191_41
###SPA### trampoline_fmt_64
# %bb.20:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB191_4:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	xorl	%edi, %edi
	testq	%rsi, %rsi
	jne	.LBB191_8
###SPA### trampoline_fmt_64
	jmp	.LBB191_9
.LBB191_41:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end191:
	.size	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv, .Lfunc_end191-_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E18rehashTableInPlaceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE,"axG",@progbits,_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE,comdat
	.hidden	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE # -- Begin function _ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE
	.weak	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE
	.p2align	4, 0x90
	.type	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE,@function
_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE: # @_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebx
	movq	%rdi, %r15
	movq	%fs:40, %rax
	movq	%rax, 32(%rsp)
	movq	8(%rdi), %r14
	testq	%r14, %r14
	je	.LBB192_3
###SPA### trampoline_fmt_64
# %bb.1:
	movzbl	7(%r15), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %ebp
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %ebp
	cmpl	$2, %ebx
	jae	.LBB192_4
###SPA### trampoline_fmt_64
.LBB192_2:
###SPA## trampoline_fmt_64
	xorl	%r13d, %r13d
	jmp	.LBB192_6
.LBB192_3:
###SPA## trampoline_fmt_64
	xorl	%ebp, %ebp
	cmpl	$2, %ebx
	jb	.LBB192_2
###SPA### trampoline_fmt_64
.LBB192_4:
###SPA## trampoline_fmt_64
	cmpl	$1073741824, %ebx       # imm = 0x40000000
	ja	.LBB192_10
###SPA### trampoline_fmt_64
# %bb.5:
	leal	-1(%rbx), %eax
	bsrl	%eax, %eax
	xorl	$31, %eax
	movl	$32, %r13d
	subq	%rax, %r13
.LBB192_6:
###SPA## trampoline_fmt_64
	movl	%ebx, %r12d
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r12,4), %rax
	leaq	(%rax,%rax,2), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB192_10
###SPA### trampoline_fmt_64
# %bb.7:
	testl	%ebx, %ebx
	je	.LBB192_27
###SPA### trampoline_fmt_64
# %bb.8:
	leaq	(%rax,%r12,4), %rcx
	movl	%ebp, %r8d
	cmpl	$4, %ebx
	jae	.LBB192_11
###SPA### trampoline_fmt_64
# %bb.9:
	xorl	%edx, %edx
	movq	%rax, %rsi
	jmp	.LBB192_20
.LBB192_10:
###SPA## trampoline_fmt_64
	movl	$2, %eax
	movq	%fs:40, %rcx
	cmpq	32(%rsp), %rcx
	je	.LBB192_31
###SPA### trampoline_fmt_64
.LBB192_33:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB192_11:
###SPA## trampoline_fmt_64
	movl	%r12d, %edx
	andl	$-4, %edx
	leaq	-4(%rdx), %rbp
	movq	%rbp, %rdi
	shrq	$2, %rdi
	addq	$1, %rdi
	movl	%edi, %esi
	andl	$3, %esi
	cmpq	$12, %rbp
	jae	.LBB192_13
###SPA### trampoline_fmt_64
# %bb.12:
	xorl	%edi, %edi
	testq	%rsi, %rsi
	jne	.LBB192_16
###SPA### trampoline_fmt_64
	jmp	.LBB192_18
.LBB192_13:
###SPA## trampoline_fmt_64
	leaq	(%rax,%r12,4), %rbp
	addq	$112, %rbp
	movl	$1, %ebx
	subq	%rdi, %rbx
	addq	%rsi, %rbx
	addq	$-1, %rbx
	xorl	%edi, %edi
	xorps	%xmm0, %xmm0
	.p2align	4, 0x90
.LBB192_14:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	%xmm0, (%rax,%rdi,4)
	movups	%xmm0, -112(%rbp,%rdi,8)
	movups	%xmm0, -96(%rbp,%rdi,8)
	movups	%xmm0, 16(%rax,%rdi,4)
	movups	%xmm0, -80(%rbp,%rdi,8)
	movups	%xmm0, -64(%rbp,%rdi,8)
	movups	%xmm0, 32(%rax,%rdi,4)
	movups	%xmm0, -48(%rbp,%rdi,8)
	movups	%xmm0, -32(%rbp,%rdi,8)
	movups	%xmm0, 48(%rax,%rdi,4)
	movups	%xmm0, -16(%rbp,%rdi,8)
	movups	%xmm0, (%rbp,%rdi,8)
	addq	$16, %rdi
	addq	$4, %rbx
	jne	.LBB192_14
###SPA### trampoline_fmt_64
# %bb.15:
	testq	%rsi, %rsi
	je	.LBB192_18
###SPA### trampoline_fmt_64
.LBB192_16:
###SPA## trampoline_fmt_64
	leaq	(%rax,%rdi,4), %rbp
	addq	$8, %rbp
	shlq	$3, %rdi
	leaq	(%rdi,%r12,4), %rdi
	addq	%rax, %rdi
	addq	$16, %rdi
	negq	%rsi
	xorl	%ebx, %ebx
	xorps	%xmm0, %xmm0
	.p2align	4, 0x90
.LBB192_17:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	%xmm0, -8(%rbp,%rbx)
	movups	%xmm0, -16(%rdi,%rbx,2)
	movups	%xmm0, (%rdi,%rbx,2)
	addq	$16, %rbx
	addq	$1, %rsi
	jne	.LBB192_17
###SPA### trampoline_fmt_64
.LBB192_18:
###SPA## trampoline_fmt_64
	cmpq	%r12, %rdx
	movl	%r8d, %ebp
	je	.LBB192_27
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	(%rcx,%rdx,8), %rcx
	leaq	(%rax,%rdx,4), %rsi
.LBB192_20:
###SPA## trampoline_fmt_64
	movl	%r12d, %ebp
	subl	%edx, %ebp
	movq	%rdx, %rdi
	notq	%rdi
	addq	%r12, %rdi
	andq	$7, %rbp
	je	.LBB192_24
###SPA### trampoline_fmt_64
# %bb.21:
	negq	%rbp
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB192_22:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	$0, (%rsi)
	movq	$0, (%rcx)
	addq	$8, %rcx
	addq	$4, %rsi
	addq	$-1, %rbx
	cmpq	%rbx, %rbp
	jne	.LBB192_22
###SPA### trampoline_fmt_64
# %bb.23:
	subq	%rbx, %rdx
.LBB192_24:
###SPA## trampoline_fmt_64
	cmpq	$7, %rdi
	movl	%r8d, %ebp
	jb	.LBB192_27
###SPA### trampoline_fmt_64
# %bb.25:
	subq	%rdx, %r12
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB192_26:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movl	$0, (%rsi,%rdx,4)
	movq	$0, (%rcx,%rdx,8)
	movl	$0, 4(%rsi,%rdx,4)
	movq	$0, 8(%rcx,%rdx,8)
	movl	$0, 8(%rsi,%rdx,4)
	movq	$0, 16(%rcx,%rdx,8)
	movl	$0, 12(%rsi,%rdx,4)
	movq	$0, 24(%rcx,%rdx,8)
	movl	$0, 16(%rsi,%rdx,4)
	movq	$0, 32(%rcx,%rdx,8)
	movl	$0, 20(%rsi,%rdx,4)
	movq	$0, 40(%rcx,%rdx,8)
	movl	$0, 24(%rsi,%rdx,4)
	movq	$0, 48(%rcx,%rdx,8)
	movl	$0, 28(%rsi,%rdx,4)
	movq	$0, 56(%rcx,%rdx,8)
	addq	$8, %rdx
	cmpq	%rdx, %r12
	jne	.LBB192_26
###SPA### trampoline_fmt_64
.LBB192_27:
###SPA## trampoline_fmt_64
	movq	(%r15), %rcx
	shlq	$56, %r13
	movabsq	$2305843009213693952, %rdx # imm = 0x2000000000000000
	subq	%r13, %rdx
	movl	$0, 20(%r15)
	addq	$1, %rcx
	movabsq	$72057594037927935, %rsi # imm = 0xFFFFFFFFFFFFFF
	andq	%rcx, %rsi
	orq	%rdx, %rsi
	movq	%rsi, (%r15)
	movq	%rax, 8(%r15)
	movq	%r15, 8(%rsp)
	movl	%ebp, %ecx
	movl	%ebp, %ebp
	leaq	(%r14,%rbp,4), %rax
	movq	%rax, 16(%rsp)
	movq	%r14, 24(%rsp)
	testl	%ecx, %ecx
	je	.LBB192_30
###SPA### trampoline_fmt_64
# %bb.28:
	leaq	8(%rsp), %r15
	leaq	16(%rsp), %rbx
	.p2align	4, 0x90
.LBB192_29:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_
	addq	$8, 16(%rsp)
	addq	$4, 24(%rsp)
	addq	$-1, %rbp
	jne	.LBB192_29
###SPA### trampoline_fmt_64
.LBB192_30:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	callq	free@PLT
	movl	$1, %eax
	movq	%fs:40, %rcx
	cmpq	32(%rsp), %rcx
	jne	.LBB192_33
###SPA### trampoline_fmt_64
.LBB192_31:
###SPA## trampoline_fmt_64
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end192:
	.size	_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE, .Lfunc_end192-_ZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_,"axG",@progbits,_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_,comdat
	.hidden	_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_ # -- Begin function _ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_
	.weak	_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_
	.p2align	4, 0x90
	.type	_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_,@function
_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_: # @_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	movq	8(%rsi), %rax
	movl	(%rax), %r8d
	cmpq	$2, %r8
	jb	.LBB193_26
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%rdi), %r11
	andl	$-2, %r8d
	movq	(%r11), %rax
	shrq	$56, %rax
	movq	%r8, %rsi
	movl	%eax, %ecx
	shrq	%cl, %rsi
	movl	$32, %r9d
	subl	%eax, %r9d
	movl	$1, %edi
	movl	%r9d, %ecx
	shll	%cl, %edi
	movq	8(%r11), %rcx
	testq	%rcx, %rcx
	cmoveq	%rcx, %rdi
	leaq	(%rcx,%rsi,4), %rbx
	movl	(%rcx,%rsi,4), %edx
	cmpl	$2, %edx
	jb	.LBB193_2
###SPA### trampoline_fmt_64
# %bb.3:
	movl	%r8d, %r10d
	movl	%r9d, %ecx
	shll	%cl, %r10d
	movl	%eax, %ecx
	shrl	%cl, %r10d
	orl	$1, %r10d
	movl	$-1, %ebp
	movl	%r9d, %ecx
	shll	%cl, %ebp
	notl	%ebp
	.p2align	4, 0x90
.LBB193_4:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	subl	%r10d, %esi
	andl	%ebp, %esi
	orl	$1, %edx
	movl	%edx, (%rbx)
	movq	8(%r11), %rdi
	testq	%rdi, %rdi
	je	.LBB193_5
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB193_4 Depth=1
	movzbl	7(%r11), %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	$1, %eax
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %eax
	jmp	.LBB193_7
	.p2align	4, 0x90
.LBB193_5:                              #   in Loop: Header=BB193_4 Depth=1
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
.LBB193_7:                              #   in Loop: Header=BB193_4 Depth=1
###SPA## trampoline_fmt_64
	movl	%esi, %ecx
	leaq	(%rdi,%rcx,4), %rbx
	movl	(%rdi,%rcx,4), %edx
	cmpl	$1, %edx
	ja	.LBB193_4
###SPA### trampoline_fmt_64
# %bb.8:
	leaq	(%rdi,%rax,4), %rax
	leaq	(%rax,%rcx,8), %r12
	jmp	.LBB193_9
.LBB193_2:
###SPA## trampoline_fmt_64
	leaq	(%rcx,%rdi,4), %rax
	leaq	(%rax,%rsi,8), %r12
.LBB193_9:
###SPA## trampoline_fmt_64
	movq	(%r15), %rax
	movl	%r8d, (%rbx)
	movq	(%rax), %rbx
	movq	$0, (%rax)
	testq	%rbx, %rbx
	je	.LBB193_36
###SPA### trampoline_fmt_64
# %bb.10:
	movq	%rbx, %r14
	andq	$-1048576, %r14         # imm = 0xFFF00000
	movq	1048560(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB193_15
###SPA### trampoline_fmt_64
# %bb.11:
	movq	%rax, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB193_15
###SPA### trampoline_fmt_64
# %bb.12:
	cmpq	%rax, 208(%rdi)
	je	.LBB193_13
###SPA### trampoline_fmt_64
# %bb.14:
	addq	$184, %rdi
	movq	%rsp, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
.LBB193_15:
###SPA## trampoline_fmt_64
	movq	%rbx, (%r12)
	movq	1048560(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB193_26
###SPA### trampoline_fmt_64
.LBB193_16:
###SPA## trampoline_fmt_64
	cmpb	$0, 353(%rbx)
	je	.LBB193_26
###SPA### trampoline_fmt_64
# %bb.17:
	movq	344(%rbx), %rcx
	movq	16(%rcx), %rax
	testq	%rax, %rax
	je	.LBB193_21
###SPA### trampoline_fmt_64
# %bb.18:
	movq	8(%rcx), %rcx
	shlq	$3, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB193_20:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rsi
	subq	(%rcx,%rdx), %rsi
	cmpq	$1048575, %rsi          # imm = 0xFFFFF
	jbe	.LBB193_26
###SPA### trampoline_fmt_64
# %bb.19:                               #   in Loop: Header=BB193_20 Depth=1
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jne	.LBB193_20
###SPA### trampoline_fmt_64
.LBB193_21:
###SPA## trampoline_fmt_64
	leaq	208(%rbx), %r14
	cmpq	$0, 208(%rbx)
	je	.LBB193_23
###SPA### trampoline_fmt_64
# %bb.22:
	leaq	184(%rbx), %rdi
	movq	%r14, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	testb	%al, %al
	je	.LBB193_37
###SPA### trampoline_fmt_64
.LBB193_23:
###SPA## trampoline_fmt_64
	movq	$0, 208(%rbx)
	cmpl	$6145, 200(%rbx)        # imm = 0x1801
	jae	.LBB193_24
###SPA### trampoline_fmt_64
.LBB193_25:
###SPA## trampoline_fmt_64
	movq	%r12, (%r14)
	movq	8(%r15), %rax
	cmpl	$2, (%rax)
	jae	.LBB193_27
###SPA### trampoline_fmt_64
	jmp	.LBB193_34
.LBB193_36:
###SPA## trampoline_fmt_64
	movq	%rbx, (%r12)
.LBB193_26:
###SPA## trampoline_fmt_64
	movq	8(%r15), %rax
	cmpl	$2, (%rax)
	jb	.LBB193_34
###SPA### trampoline_fmt_64
.LBB193_27:
###SPA## trampoline_fmt_64
	movq	(%r15), %rcx
	movq	(%rcx), %rdx
	testq	%rdx, %rdx
	je	.LBB193_34
###SPA### trampoline_fmt_64
# %bb.28:
	andq	$-1048576, %rdx         # imm = 0xFFF00000
	movq	1048560(%rdx), %rdi
	testq	%rdi, %rdi
	je	.LBB193_34
###SPA### trampoline_fmt_64
# %bb.29:
	movq	%rcx, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB193_33
###SPA### trampoline_fmt_64
# %bb.30:
	cmpq	%rcx, 208(%rdi)
	je	.LBB193_31
###SPA### trampoline_fmt_64
# %bb.32:
	addq	$184, %rdi
	movq	%rsp, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	jmp	.LBB193_33
.LBB193_13:
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	movq	%rbx, (%r12)
	movq	1048560(%r14), %rbx
	testq	%rbx, %rbx
	jne	.LBB193_16
###SPA### trampoline_fmt_64
	jmp	.LBB193_26
.LBB193_31:
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
.LBB193_33:
###SPA## trampoline_fmt_64
	movq	8(%r15), %rax
.LBB193_34:
###SPA## trampoline_fmt_64
	movl	$0, (%rax)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB193_35
###SPA### trampoline_fmt_64
# %bb.38:
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB193_24:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	movq	216(%rbx), %rdi
	movl	224(%rbx), %esi
	callq	_ZN2js2gc11StoreBuffer18setAboutToOverflowEN2JS8GCReasonE
	jmp	.LBB193_25
.LBB193_35:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB193_37:
###SPA## trampoline_fmt_64
	leaq	.L.str.291(%rip), %rsi
	movq	%rsp, %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.Lfunc_end193:
	.size	_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_, .Lfunc_end193-_ZZN7mozilla6detail9HashTableIKN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS_7HashSetIS6_NS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEE13SetHashPolicyESB_E15changeTableSizeEjNSE_15FailureBehaviorEENKUlRNS0_9EntrySlotIS7_EEE_clESI_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_,"axG",@progbits,_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_,comdat
	.hidden	_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_ # -- Begin function _ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_
	.weak	_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_
	.p2align	4, 0x90
	.type	_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_,@function
_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_: # @_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movq	(%rdi), %rbx
	movq	$0, (%rdi)
	testq	%rbx, %rbx
	je	.LBB194_2
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rbx, %rbp
	andq	$-1048576, %rbp         # imm = 0xFFF00000
	movq	1048560(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB194_2
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%r15, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB194_7
###SPA### trampoline_fmt_64
# %bb.4:
	cmpq	%r15, 208(%rdi)
	je	.LBB194_5
###SPA### trampoline_fmt_64
# %bb.6:
	addq	$184, %rdi
	leaq	8(%rsp), %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	jmp	.LBB194_7
.LBB194_2:
###SPA## trampoline_fmt_64
	movq	%rbx, (%rsp)
	movq	%rsp, %r12
.LBB194_18:
###SPA## trampoline_fmt_64
	movq	(%r15), %rsi
	movq	(%r14), %rax
	movq	%rax, (%r15)
	movq	(%r14), %rdx
	movq	%r15, %rdi
	callq	_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_
	movq	(%r14), %rsi
	movq	(%rsp), %rax
	movq	%rax, (%r14)
	movq	(%rsp), %rdx
	movq	%r14, %rdi
	callq	_ZN2js22InternalBarrierMethodsIPNS_18WasmInstanceObjectEE11postBarrierEPS2_S2_S2_
	movq	(%rsp), %rax
	testq	%rax, %rax
	je	.LBB194_24
###SPA### trampoline_fmt_64
# %bb.19:
	andq	$-1048576, %rax         # imm = 0xFFF00000
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB194_24
###SPA### trampoline_fmt_64
# %bb.20:
	movq	%r12, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB194_24
###SPA### trampoline_fmt_64
# %bb.21:
	cmpq	%r12, 208(%rdi)
	je	.LBB194_22
###SPA### trampoline_fmt_64
# %bb.23:
	addq	$184, %rdi
	leaq	8(%rsp), %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
.LBB194_24:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB194_25
###SPA### trampoline_fmt_64
.LBB194_27:
###SPA## trampoline_fmt_64
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB194_5:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
.LBB194_7:
###SPA## trampoline_fmt_64
	movq	1048560(%rbp), %r13
	movq	%rbx, (%rsp)
	movq	%rsp, %r12
	testq	%r13, %r13
	je	.LBB194_18
###SPA### trampoline_fmt_64
# %bb.8:
	cmpb	$0, 353(%r13)
	je	.LBB194_18
###SPA### trampoline_fmt_64
# %bb.9:
	movq	344(%r13), %rcx
	movq	16(%rcx), %rax
	testq	%rax, %rax
	je	.LBB194_13
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%rcx), %rcx
	shlq	$3, %rax
	xorl	%edx, %edx
	movq	%rsp, %r12
	.p2align	4, 0x90
.LBB194_12:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	%r12, %rsi
	subq	(%rcx,%rdx), %rsi
	cmpq	$1048575, %rsi          # imm = 0xFFFFF
	jbe	.LBB194_18
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB194_12 Depth=1
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jne	.LBB194_12
###SPA### trampoline_fmt_64
.LBB194_13:
###SPA## trampoline_fmt_64
	leaq	208(%r13), %rbx
	cmpq	$0, 208(%r13)
	je	.LBB194_15
###SPA### trampoline_fmt_64
# %bb.14:
	leaq	184(%r13), %rdi
	movq	%rbx, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	testb	%al, %al
	je	.LBB194_26
###SPA### trampoline_fmt_64
.LBB194_15:
###SPA## trampoline_fmt_64
	movq	$0, 208(%r13)
	cmpl	$6145, 200(%r13)        # imm = 0x1801
	jae	.LBB194_16
###SPA### trampoline_fmt_64
.LBB194_17:
###SPA## trampoline_fmt_64
	movq	%rsp, %r12
	movq	%r12, (%rbx)
	jmp	.LBB194_18
.LBB194_22:
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	je	.LBB194_27
###SPA### trampoline_fmt_64
.LBB194_25:
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB194_16:
###SPA## trampoline_fmt_64
	movq	216(%r13), %rdi
	movl	224(%r13), %esi
	callq	_ZN2js2gc11StoreBuffer18setAboutToOverflowEN2JS8GCReasonE
	jmp	.LBB194_17
.LBB194_26:
###SPA## trampoline_fmt_64
	leaq	.L.str.291(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.Lfunc_end194:
	.size	_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_, .Lfunc_end194-_ZSt4swapIN2js11WeakHeapPtrIPNS0_18WasmInstanceObjectEEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SH_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r12
	cmpq	$1, %rsi
	jne	.LBB195_6
###SPA### trampoline_fmt_64
# %bb.1:
	cmpq	$32, (%r12)
	je	.LBB195_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r12), %rcx
	testq	%rcx, %rcx
	je	.LBB195_14
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$57, %rax
	jne	.LBB195_34
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$6, %rax
	leaq	(%rcx,%rcx), %r14
	je	.LBB195_15
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB195_16
.LBB195_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r12), %rsi
	jb	.LBB195_33
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$58, %rcx
	jne	.LBB195_33
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$5, %rsi
	je	.LBB195_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB195_12
.LBB195_10:
###SPA## trampoline_fmt_64
	movl	$1, %r14d
	jmp	.LBB195_13
.LBB195_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB195_12:
###SPA## trampoline_fmt_64
	movl	$1, %r14d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r14
	shrq	$5, %r14
	cmpq	$32, (%r12)
	jne	.LBB195_17
###SPA### trampoline_fmt_64
.LBB195_13:
###SPA## trampoline_fmt_64
	movq	%r12, %rdi
	movq	%r14, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm # TAILCALL
.LBB195_14:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	movl	$1, %r14d
	jmp	.LBB195_17
.LBB195_15:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB195_16:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$31, %rdx
	seta	%al
	orq	%rax, %r14
	movq	%r14, %rax
	shrq	$59, %rax
	jne	.LBB195_34
###SPA### trampoline_fmt_64
.LBB195_17:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	movq	%r14, %rsi
	shlq	$5, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB195_34
###SPA### trampoline_fmt_64
# %bb.18:
	movq	%rax, %r15
	movq	(%r12), %rdi
	cmpq	$0, 8(%r12)
	jle	.LBB195_32
###SPA### trampoline_fmt_64
# %bb.19:
	xorps	%xmm0, %xmm0
	movq	%r15, %rax
	.p2align	4, 0x90
.LBB195_20:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB195_24 Depth 2
###SPA## trampoline_fmt_64
	movq	8(%rdi), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdi), %rcx
	movq	%rcx, 16(%rax)
	movq	(%rdi), %rcx
	cmpq	$12, %rcx
	je	.LBB195_22
###SPA### trampoline_fmt_64
# %bb.21:                               #   in Loop: Header=BB195_20 Depth=1
	leaq	8(%rdi), %rdx
	movq	%rcx, (%rax)
	movq	$12, (%rdi)
	movups	%xmm0, (%rdx)
	jmp	.LBB195_25
	.p2align	4, 0x90
.LBB195_22:                             #   in Loop: Header=BB195_20 Depth=1
###SPA## trampoline_fmt_64
	movq	$12, (%rax)
	movq	8(%rdi), %rdx
	testq	%rdx, %rdx
	jle	.LBB195_25
###SPA### trampoline_fmt_64
# %bb.23:                               #   in Loop: Header=BB195_20 Depth=1
	movq	(%rdi), %rcx
	leaq	(%rdx,%rdx,2), %rdx
	leaq	(%rcx,%rdx,4), %rdx
	movl	$12, %esi
	.p2align	4, 0x90
.LBB195_24:                             #   Parent Loop BB195_20 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movl	8(%rcx), %ebx
	movl	%ebx, 8(%rsi)
	movq	(%rcx), %rbx
	movq	%rbx, (%rsi)
	addq	$12, %rcx
	addq	$12, %rsi
	cmpq	%rdx, %rcx
	jb	.LBB195_24
###SPA### trampoline_fmt_64
.LBB195_25:                             #   in Loop: Header=BB195_20 Depth=1
###SPA## trampoline_fmt_64
	movb	28(%rdi), %cl
	movb	%cl, 28(%rax)
	movl	24(%rdi), %ecx
	movl	%ecx, 24(%rax)
	addq	$32, %rax
	addq	$32, %rdi
	movq	(%r12), %r13
	movq	8(%r12), %rcx
	movq	%rcx, %rbx
	shlq	$5, %rbx
	addq	%r13, %rbx
	cmpq	%rbx, %rdi
	jb	.LBB195_20
###SPA### trampoline_fmt_64
# %bb.26:
	testq	%rcx, %rcx
	jle	.LBB195_31
###SPA### trampoline_fmt_64
	.p2align	4, 0x90
.LBB195_27:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%r13), %rdi
	cmpq	$12, %rdi
	je	.LBB195_29
###SPA### trampoline_fmt_64
# %bb.28:                               #   in Loop: Header=BB195_27 Depth=1
	callq	free@PLT
.LBB195_29:                             #   in Loop: Header=BB195_27 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %r13
	cmpq	%rbx, %r13
	jb	.LBB195_27
###SPA### trampoline_fmt_64
# %bb.30:
	movq	(%r12), %rdi
	jmp	.LBB195_32
.LBB195_31:
###SPA## trampoline_fmt_64
	movq	%r13, %rdi
.LBB195_32:
###SPA## trampoline_fmt_64
	callq	free@PLT
	movq	%r15, (%r12)
	movq	%r14, 16(%r12)
	movb	$1, %al
.LBB195_33:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB195_34:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB195_33
.Lfunc_end195:
	.size	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end195-_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.weak	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm,@function
_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm: # @_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rax
	shrq	$59, %rax
	jne	.LBB196_18
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	shlq	$5, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB196_18
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rax, %r15
	movq	8(%r12), %r8
	testq	%r8, %r8
	jle	.LBB196_15
###SPA### trampoline_fmt_64
# %bb.3:
	movq	(%r12), %rcx
	shlq	$5, %r8
	addq	%rcx, %r8
	xorps	%xmm0, %xmm0
	movq	%r15, %rdx
	.p2align	4, 0x90
.LBB196_4:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB196_8 Depth 2
###SPA## trampoline_fmt_64
	movq	8(%rcx), %rsi
	movq	%rsi, 8(%rdx)
	movq	16(%rcx), %rsi
	movq	%rsi, 16(%rdx)
	movq	(%rcx), %rsi
	cmpq	$12, %rsi
	je	.LBB196_6
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB196_4 Depth=1
	leaq	8(%rcx), %rax
	movq	%rsi, (%rdx)
	movq	$12, (%rcx)
	movups	%xmm0, (%rax)
	jmp	.LBB196_9
	.p2align	4, 0x90
.LBB196_6:                              #   in Loop: Header=BB196_4 Depth=1
###SPA## trampoline_fmt_64
	movq	$12, (%rdx)
	movq	8(%rcx), %rdi
	testq	%rdi, %rdi
	jle	.LBB196_9
###SPA### trampoline_fmt_64
# %bb.7:                                #   in Loop: Header=BB196_4 Depth=1
	movq	(%rcx), %rsi
	leaq	(%rdi,%rdi,2), %rdi
	leaq	(%rsi,%rdi,4), %rdi
	movl	$12, %ebx
	.p2align	4, 0x90
.LBB196_8:                              #   Parent Loop BB196_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movl	8(%rsi), %eax
	movl	%eax, 8(%rbx)
	movq	(%rsi), %rax
	movq	%rax, (%rbx)
	addq	$12, %rsi
	addq	$12, %rbx
	cmpq	%rdi, %rsi
	jb	.LBB196_8
###SPA### trampoline_fmt_64
.LBB196_9:                              #   in Loop: Header=BB196_4 Depth=1
###SPA## trampoline_fmt_64
	movb	28(%rcx), %al
	movb	%al, 28(%rdx)
	movl	24(%rcx), %eax
	movl	%eax, 24(%rdx)
	addq	$32, %rcx
	addq	$32, %rdx
	cmpq	%r8, %rcx
	jb	.LBB196_4
###SPA### trampoline_fmt_64
# %bb.10:
	movq	8(%r12), %r13
	testq	%r13, %r13
	jle	.LBB196_15
###SPA### trampoline_fmt_64
# %bb.11:
	movq	(%r12), %rbx
	shlq	$5, %r13
	addq	%rbx, %r13
	.p2align	4, 0x90
.LBB196_12:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rdi
	cmpq	$12, %rdi
	je	.LBB196_14
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB196_12 Depth=1
	callq	free@PLT
.LBB196_14:                             #   in Loop: Header=BB196_12 Depth=1
###SPA## trampoline_fmt_64
	addq	$32, %rbx
	cmpq	%r13, %rbx
	jb	.LBB196_12
###SPA### trampoline_fmt_64
.LBB196_15:
###SPA## trampoline_fmt_64
	movq	%r15, (%r12)
	movq	%r14, 16(%r12)
	movb	$1, %al
.LBB196_16:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB196_18:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB196_16
.Lfunc_end196:
	.size	_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm, .Lfunc_end196-_ZN7mozilla6VectorIN2js4wasm10StructTypeELm0ENS1_17SystemAllocPolicyEE20convertToHeapStorageEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev,"axG",@progbits,_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev # -- Begin function _ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev
	.weak	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev,@function
_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev: # @_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	8(%rdi), %rdi
	cmpq	$8, %rdi
	je	.LBB197_1
###SPA### trampoline_fmt_64
# %bb.2:
	jmp	free@PLT                # TAILCALL
.LBB197_1:
###SPA## trampoline_fmt_64
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end197:
	.size	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev, .Lfunc_end197-_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev,"axG",@progbits,_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev # -- Begin function _ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev
	.weak	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev,@function
_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev: # @_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	8(%rdi), %rdi
	cmpq	$8, %rdi
	je	.LBB198_2
###SPA### trampoline_fmt_64
# %bb.1:
	callq	free@PLT
.LBB198_2:
###SPA## trampoline_fmt_64
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv@PLT              # TAILCALL
.Lfunc_end198:
	.size	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev, .Lfunc_end198-_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc,"axG",@progbits,_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc # -- Begin function _ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.weak	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc,@function
_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc: # @_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	16(%rdi), %r12
	testq	%r12, %r12
	je	.LBB199_5
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	8(%rdi), %rbx
	shlq	$3, %r12
	leaq	.L.str.295(%rip), %r15
	.p2align	4, 0x90
.LBB199_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpq	$0, (%rbx)
	je	.LBB199_4
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB199_2 Depth=1
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	_ZN2js2gc17TraceEdgeInternalIP8JSObjectEEbP8JSTracerPT_PKc
.LBB199_4:                              #   in Loop: Header=BB199_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	addq	$-8, %r12
	jne	.LBB199_2
###SPA### trampoline_fmt_64
.LBB199_5:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end199:
	.size	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc, .Lfunc_end199-_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_,"axG",@progbits,_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_,comdat
	.hidden	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_ # -- Begin function _ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
	.weak	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
	.p2align	4, 0x90
	.type	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_,@function
_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_: # @_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	testq	%rsi, %rsi
	je	.LBB200_12
###SPA### trampoline_fmt_64
# %bb.1:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	56(%rsi), %rdi
	testq	%rdi, %rdi
	je	.LBB200_3
###SPA### trampoline_fmt_64
# %bb.2:
	callq	free@PLT
.LBB200_3:
###SPA## trampoline_fmt_64
	movq	32(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB200_5
###SPA### trampoline_fmt_64
# %bb.4:
	callq	free@PLT
.LBB200_5:
###SPA## trampoline_fmt_64
	movq	8(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB200_8
###SPA### trampoline_fmt_64
# %bb.6:
	lock		subq	$1, 8(%rbx)
	jne	.LBB200_8
###SPA### trampoline_fmt_64
# %bb.7:
	addq	$8, %rbx
	movq	-8(%rbx), %rax
	addq	$-8, %rbx
	movq	%rbx, %rdi
	callq	*(%rax)
	movq	%rbx, %rdi
	callq	free@PLT
.LBB200_8:
###SPA## trampoline_fmt_64
	movq	(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB200_11
###SPA### trampoline_fmt_64
# %bb.9:
	lock		subq	$1, (%rbx)
	jne	.LBB200_11
###SPA### trampoline_fmt_64
# %bb.10:
	movq	%rbx, %rdi
	callq	_ZN2js4wasm4CodeD2Ev
	movq	%rbx, %rdi
	callq	free@PLT
.LBB200_11:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	free@PLT                # TAILCALL
.LBB200_12:
###SPA## trampoline_fmt_64
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end200:
	.size	_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_, .Lfunc_end200-_ZN2JS12DeletePolicyIN2js4wasm10DebugStateEEclEPKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE,"axG",@progbits,_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE,comdat
	.hidden	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE # -- Begin function _ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE
	.weak	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE
	.p2align	4, 0x90
	.type	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE,@function
_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE: # @_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%fs:40, %rax
	movq	%rax, 32(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rsp)
	movq	$8, (%rsp)
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, 16(%rdi)
	leaq	24(%rdi), %rdi
	movq	%rsp, %rsi
	callq	_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_
	movq	(%r14), %rax
	leaq	104(%rax), %rcx
	movq	%rcx, (%rbx)
	movq	104(%rax), %rcx
	movq	%rcx, 8(%rbx)
	movq	%rbx, 104(%rax)
	movq	(%rsp), %rbx
	movq	8(%rsp), %rax
	testq	%rax, %rax
	jle	.LBB201_14
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	(%rbx,%rax,8), %r12
	leaq	24(%rsp), %r14
	leaq	.L.str.290(%rip), %r15
	.p2align	4, 0x90
.LBB201_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	testq	%rcx, %rcx
	je	.LBB201_12
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB201_2 Depth=1
	movq	%rcx, %rax
	andq	$-1048576, %rax         # imm = 0xFFF00000
	cmpl	$1, 1048552(%rax)
	je	.LBB201_7
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB201_2 Depth=1
	movq	%rcx, %rdx
	andq	$-4096, %rdx            # imm = 0xF000
	movq	8(%rdx), %rdx
	cmpl	$0, 16(%rdx)
	je	.LBB201_7
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB201_2 Depth=1
	movq	%rcx, 24(%rsp)
	movq	8(%rdx), %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	_ZN2js40TraceManuallyBarrieredGenericPointerEdgeEP8JSTracerPPNS_2gc4CellEPKc
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB201_12
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB201_2 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
.LBB201_7:                              #   in Loop: Header=BB201_2 Depth=1
###SPA## trampoline_fmt_64
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB201_12
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB201_2 Depth=1
	movq	%rbx, 24(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB201_12
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB201_2 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB201_10
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB201_2 Depth=1
	addq	$184, %rdi
	movq	%r14, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB201_12:                             #   in Loop: Header=BB201_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r12, %rbx
	jb	.LBB201_2
###SPA### trampoline_fmt_64
	jmp	.LBB201_13
.LBB201_10:                             #   in Loop: Header=BB201_2 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	cmpq	%r12, %rbx
	jb	.LBB201_2
###SPA### trampoline_fmt_64
.LBB201_13:
###SPA## trampoline_fmt_64
	movq	(%rsp), %rbx
.LBB201_14:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB201_16
###SPA### trampoline_fmt_64
# %bb.15:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB201_16:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	32(%rsp), %rax
	jne	.LBB201_18
###SPA### trampoline_fmt_64
# %bb.17:
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB201_18:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end201:
	.size	_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE, .Lfunc_end201-_ZN2JS6RootedINS_8GCVectorIN2js7HeapPtrIPNS2_15StructTypeDescrEEELm0ENS2_17SystemAllocPolicyEEEEC2IP9JSContextEERKT_NS9_14CtorDispatcherENS_6detail16FallbackOverloadE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_,"axG",@progbits,_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_,comdat
	.hidden	_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_ # -- Begin function _ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_
	.weak	_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_
	.p2align	4, 0x90
	.type	_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_,@function
_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_: # @_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%fs:40, %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsi), %rax
	movq	%rax, 8(%rdi)
	movq	16(%rsi), %rax
	movq	%rax, 16(%rdi)
	movq	(%rsi), %rax
	cmpq	$8, %rax
	je	.LBB202_1
###SPA### trampoline_fmt_64
# %bb.23:
	movq	%rax, (%rdi)
	movq	$8, (%rsi)
	addq	$8, %rsi
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsi)
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	je	.LBB202_24
###SPA### trampoline_fmt_64
	jmp	.LBB202_22
.LBB202_1:
###SPA## trampoline_fmt_64
	movq	$8, (%rdi)
	movq	8(%rsi), %rax
	testq	%rax, %rax
	jle	.LBB202_21
###SPA### trampoline_fmt_64
# %bb.2:
	movq	(%rsi), %r13
	leaq	(,%rax,8), %r12
	addq	%r13, %r12
	movl	$8, %ebx
	leaq	8(%rsp), %r14
	jmp	.LBB202_3
.LBB202_7:                              #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	movq	%rbp, (%rbx)
	movq	1048560(%r15), %rbp
	testq	%rbp, %rbp
	jne	.LBB202_10
###SPA### trampoline_fmt_64
	jmp	.LBB202_20
.LBB202_18:                             #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	movq	216(%rbp), %rdi
	movl	224(%rbp), %esi
	callq	_ZN2js2gc11StoreBuffer18setAboutToOverflowEN2JS8GCReasonE
	jmp	.LBB202_19
	.p2align	4, 0x90
.LBB202_3:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB202_14 Depth 2
###SPA## trampoline_fmt_64
	movq	(%r13), %rbp
	movq	$0, (%r13)
	testq	%rbp, %rbp
	je	.LBB202_25
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB202_3 Depth=1
	movq	%rbp, %r15
	andq	$-1048576, %r15         # imm = 0xFFF00000
	movq	1048560(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB202_9
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB202_3 Depth=1
	movq	%r13, 8(%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB202_9
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB202_3 Depth=1
	cmpq	%r13, 208(%rdi)
	je	.LBB202_7
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB202_3 Depth=1
	addq	$184, %rdi
	movq	%r14, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
.LBB202_9:                              #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, (%rbx)
	movq	1048560(%r15), %rbp
	testq	%rbp, %rbp
	je	.LBB202_20
###SPA### trampoline_fmt_64
.LBB202_10:                             #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	cmpb	$0, 353(%rbp)
	je	.LBB202_20
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB202_3 Depth=1
	movq	344(%rbp), %rcx
	movq	16(%rcx), %rax
	testq	%rax, %rax
	je	.LBB202_15
###SPA### trampoline_fmt_64
# %bb.12:                               #   in Loop: Header=BB202_3 Depth=1
	movq	8(%rcx), %rcx
	shlq	$3, %rax
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB202_14:                             #   Parent Loop BB202_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
###SPA## trampoline_fmt_64
	movq	%rbx, %rsi
	subq	(%rcx,%rdx), %rsi
	cmpq	$1048575, %rsi          # imm = 0xFFFFF
	jbe	.LBB202_20
###SPA### trampoline_fmt_64
# %bb.13:                               #   in Loop: Header=BB202_14 Depth=2
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jne	.LBB202_14
###SPA### trampoline_fmt_64
.LBB202_15:                             #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	leaq	208(%rbp), %r15
	cmpq	$0, 208(%rbp)
	je	.LBB202_17
###SPA### trampoline_fmt_64
# %bb.16:                               #   in Loop: Header=BB202_3 Depth=1
	leaq	184(%rbp), %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE3putIRS6_EEbOT_
	testb	%al, %al
	je	.LBB202_26
###SPA### trampoline_fmt_64
.LBB202_17:                             #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rbp)
	cmpl	$6145, 200(%rbp)        # imm = 0x1801
	jae	.LBB202_18
###SPA### trampoline_fmt_64
.LBB202_19:                             #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbx, (%r15)
	addq	$8, %r13
	addq	$8, %rbx
	cmpq	%r12, %r13
	jb	.LBB202_3
###SPA### trampoline_fmt_64
	jmp	.LBB202_21
	.p2align	4, 0x90
.LBB202_25:                             #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	movq	%rbp, (%rbx)
.LBB202_20:                             #   in Loop: Header=BB202_3 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %r13
	addq	$8, %rbx
	cmpq	%r12, %r13
	jb	.LBB202_3
###SPA### trampoline_fmt_64
.LBB202_21:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	16(%rsp), %rax
	jne	.LBB202_22
###SPA### trampoline_fmt_64
.LBB202_24:
###SPA## trampoline_fmt_64
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB202_22:
	.cfi_def_cfa_offset 80
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.LBB202_26:
###SPA## trampoline_fmt_64
	leaq	.L.str.291(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
.Lfunc_end202:
	.size	_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_, .Lfunc_end202-_ZN2JS8GCVectorIN2js7HeapPtrIPNS1_15StructTypeDescrEEELm0ENS1_17SystemAllocPolicyEEC2EOS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev,"axG",@progbits,_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev # -- Begin function _ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev
	.weak	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev,@function
_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev: # @_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	8(%rdi), %rbx
	movq	16(%rdi), %rax
	testq	%rax, %rax
	jle	.LBB203_14
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rdi, %r14
	leaq	(%rbx,%rax,8), %r13
	movq	%rsp, %r15
	leaq	.L.str.290(%rip), %r12
	.p2align	4, 0x90
.LBB203_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	testq	%rcx, %rcx
	je	.LBB203_12
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB203_2 Depth=1
	movq	%rcx, %rax
	andq	$-1048576, %rax         # imm = 0xFFF00000
	cmpl	$1, 1048552(%rax)
	je	.LBB203_7
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB203_2 Depth=1
	movq	%rcx, %rdx
	andq	$-4096, %rdx            # imm = 0xF000
	movq	8(%rdx), %rdx
	cmpl	$0, 16(%rdx)
	je	.LBB203_7
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB203_2 Depth=1
	movq	%rcx, (%rsp)
	movq	8(%rdx), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	_ZN2js40TraceManuallyBarrieredGenericPointerEdgeEP8JSTracerPPNS_2gc4CellEPKc
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB203_12
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB203_2 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
.LBB203_7:                              #   in Loop: Header=BB203_2 Depth=1
###SPA## trampoline_fmt_64
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB203_12
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB203_2 Depth=1
	movq	%rbx, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB203_12
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB203_2 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB203_10
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB203_2 Depth=1
	addq	$184, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB203_12:                             #   in Loop: Header=BB203_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB203_2
###SPA### trampoline_fmt_64
	jmp	.LBB203_13
.LBB203_10:                             #   in Loop: Header=BB203_2 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB203_2
###SPA### trampoline_fmt_64
.LBB203_13:
###SPA## trampoline_fmt_64
	movq	8(%r14), %rbx
.LBB203_14:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB203_16
###SPA### trampoline_fmt_64
# %bb.15:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB203_16:
###SPA## trampoline_fmt_64
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB203_18
###SPA### trampoline_fmt_64
# %bb.17:
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB203_18:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end203:
	.size	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev, .Lfunc_end203-_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev,"axG",@progbits,_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev # -- Begin function _ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev
	.weak	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev,@function
_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev: # @_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	leaq	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	8(%rdi), %rbx
	movq	16(%rdi), %rax
	testq	%rax, %rax
	jle	.LBB204_14
###SPA### trampoline_fmt_64
# %bb.1:
	leaq	(%rbx,%rax,8), %r13
	movq	%rsp, %r15
	leaq	.L.str.290(%rip), %r12
	.p2align	4, 0x90
.LBB204_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rbx), %rcx
	testq	%rcx, %rcx
	je	.LBB204_12
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB204_2 Depth=1
	movq	%rcx, %rax
	andq	$-1048576, %rax         # imm = 0xFFF00000
	cmpl	$1, 1048552(%rax)
	je	.LBB204_7
###SPA### trampoline_fmt_64
# %bb.4:                                #   in Loop: Header=BB204_2 Depth=1
	movq	%rcx, %rdx
	andq	$-4096, %rdx            # imm = 0xF000
	movq	8(%rdx), %rdx
	cmpl	$0, 16(%rdx)
	je	.LBB204_7
###SPA### trampoline_fmt_64
# %bb.5:                                #   in Loop: Header=BB204_2 Depth=1
	movq	%rcx, (%rsp)
	movq	8(%rdx), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	_ZN2js40TraceManuallyBarrieredGenericPointerEdgeEP8JSTracerPPNS_2gc4CellEPKc
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB204_12
###SPA### trampoline_fmt_64
# %bb.6:                                #   in Loop: Header=BB204_2 Depth=1
	andq	$-1048576, %rax         # imm = 0xFFF00000
.LBB204_7:                              #   in Loop: Header=BB204_2 Depth=1
###SPA## trampoline_fmt_64
	movq	1048560(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB204_12
###SPA### trampoline_fmt_64
# %bb.8:                                #   in Loop: Header=BB204_2 Depth=1
	movq	%rbx, (%rsp)
	cmpb	$0, 353(%rdi)
	je	.LBB204_12
###SPA### trampoline_fmt_64
# %bb.9:                                #   in Loop: Header=BB204_2 Depth=1
	cmpq	208(%rdi), %rbx
	je	.LBB204_10
###SPA### trampoline_fmt_64
# %bb.11:                               #   in Loop: Header=BB204_2 Depth=1
	addq	$184, %rdi
	movq	%r15, %rsi
	callq	_ZN7mozilla7HashSetIN2js2gc11StoreBuffer11CellPtrEdgeI8JSObjectEENS3_17PointerEdgeHasherIS6_EENS1_17SystemAllocPolicyEE6removeERKS6_
	.p2align	4, 0x90
.LBB204_12:                             #   in Loop: Header=BB204_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB204_2
###SPA### trampoline_fmt_64
	jmp	.LBB204_13
.LBB204_10:                             #   in Loop: Header=BB204_2 Depth=1
###SPA## trampoline_fmt_64
	movq	$0, 208(%rdi)
	addq	$8, %rbx
	cmpq	%r13, %rbx
	jb	.LBB204_2
###SPA### trampoline_fmt_64
.LBB204_13:
###SPA## trampoline_fmt_64
	movq	8(%r14), %rbx
.LBB204_14:
###SPA## trampoline_fmt_64
	cmpq	$8, %rbx
	je	.LBB204_16
###SPA### trampoline_fmt_64
# %bb.15:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB204_16:
###SPA## trampoline_fmt_64
	movq	%r14, %rdi
	callq	_ZdlPv@PLT
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB204_18
###SPA### trampoline_fmt_64
# %bb.17:
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB204_18:
	.cfi_def_cfa_offset 64
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end204:
	.size	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev, .Lfunc_end204-_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc,"axG",@progbits,_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc,comdat
	.hidden	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc # -- Begin function _ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.weak	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.p2align	4, 0x90
	.type	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc,@function
_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc: # @_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	16(%rdi), %r12
	testq	%r12, %r12
	je	.LBB205_5
###SPA### trampoline_fmt_64
# %bb.1:
	movq	%rsi, %r14
	movq	8(%rdi), %rbx
	shlq	$3, %r12
	leaq	.L.str.295(%rip), %r15
	.p2align	4, 0x90
.LBB205_2:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	cmpq	$0, (%rbx)
	je	.LBB205_4
###SPA### trampoline_fmt_64
# %bb.3:                                #   in Loop: Header=BB205_2 Depth=1
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	_ZN2js2gc17TraceEdgeInternalIP8JSObjectEEbP8JSTracerPT_PKc
.LBB205_4:                              #   in Loop: Header=BB205_2 Depth=1
###SPA## trampoline_fmt_64
	addq	$8, %rbx
	addq	$-8, %r12
	jne	.LBB205_2
###SPA### trampoline_fmt_64
.LBB205_5:
###SPA## trampoline_fmt_64
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end205:
	.size	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc, .Lfunc_end205-_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB206_6
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	je	.LBB206_10
###SPA### trampoline_fmt_64
# %bb.2:
	movq	8(%r14), %rcx
	testq	%rcx, %rcx
	je	.LBB206_17
###SPA### trampoline_fmt_64
# %bb.3:
	movq	%rcx, %rax
	shrq	$59, %rax
	jne	.LBB206_44
###SPA### trampoline_fmt_64
# %bb.4:
	movq	%rcx, %rax
	shlq	$4, %rax
	leaq	(%rcx,%rcx), %r15
	je	.LBB206_21
###SPA### trampoline_fmt_64
# %bb.5:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB206_22
.LBB206_6:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB206_25
###SPA### trampoline_fmt_64
# %bb.7:
	movq	%rsi, %rcx
	shrq	$60, %rcx
	jne	.LBB206_25
###SPA### trampoline_fmt_64
# %bb.8:
	shlq	$3, %rsi
	testq	%rsi, %rsi
	je	.LBB206_11
###SPA### trampoline_fmt_64
# %bb.9:
	addq	$-1, %rsi
	bsrq	%rsi, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB206_12
.LBB206_10:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB206_13
.LBB206_11:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB206_12:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r15
	shrq	$3, %r15
	movq	(%r14), %rsi
	cmpq	$8, %rsi
	jne	.LBB206_23
###SPA### trampoline_fmt_64
.LBB206_13:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB206_43
###SPA### trampoline_fmt_64
# %bb.14:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	jle	.LBB206_24
###SPA### trampoline_fmt_64
# %bb.15:
	movq	(%r14), %rcx
	leaq	(%rcx,%rdx,8), %r10
	leaq	8(%rcx), %rsi
	cmpq	%rsi, %r10
	movq	%rsi, %r9
	cmovaq	%r10, %r9
	movq	%rcx, %rdi
	notq	%rdi
	addq	%rdi, %r9
	shrq	$3, %r9
	addq	$1, %r9
	cmpq	$4, %r9
	jb	.LBB206_16
###SPA### trampoline_fmt_64
# %bb.18:
	cmpq	%rsi, %r10
	cmovaq	%r10, %rsi
	leaq	(%rsi,%rdi), %rdx
	andq	$-8, %rdx
	addq	%rcx, %rdx
	addq	$8, %rdx
	cmpq	%rdx, %rax
	jae	.LBB206_26
###SPA### trampoline_fmt_64
# %bb.19:
	leaq	(%rsi,%rdi), %rdx
	addq	$8, %rdx
	andq	$-8, %rdx
	addq	%rax, %rdx
	cmpq	%rcx, %rdx
	jbe	.LBB206_26
###SPA### trampoline_fmt_64
.LBB206_16:
###SPA## trampoline_fmt_64
	movq	%rax, %rsi
.LBB206_35:
###SPA## trampoline_fmt_64
	leaq	8(%rcx), %rdx
	cmpq	%rdx, %r10
	cmovaq	%r10, %rdx
	movq	%rcx, %r8
	notq	%r8
	addq	%rdx, %r8
	movl	%r8d, %r9d
	shrl	$3, %r9d
	addl	$1, %r9d
	andq	$7, %r9
	je	.LBB206_39
###SPA### trampoline_fmt_64
# %bb.36:
	xorl	%ebx, %ebx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB206_37:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rbx,8), %rdi
	movq	%rdi, (%rsi,%rbx,8)
	addq	$-8, %rdx
	addq	$1, %rbx
	cmpq	%rbx, %r9
	jne	.LBB206_37
###SPA### trampoline_fmt_64
# %bb.38:
	subq	%rdx, %rcx
	subq	%rdx, %rsi
.LBB206_39:
###SPA## trampoline_fmt_64
	cmpq	$56, %r8
	jb	.LBB206_24
###SPA### trampoline_fmt_64
# %bb.40:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB206_41:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movq	(%rcx,%rdi), %rdx
	movq	%rdx, (%rsi,%rdi)
	movq	8(%rcx,%rdi), %rdx
	movq	%rdx, 8(%rsi,%rdi)
	movq	16(%rcx,%rdi), %rdx
	movq	%rdx, 16(%rsi,%rdi)
	movq	24(%rcx,%rdi), %rdx
	movq	%rdx, 24(%rsi,%rdi)
	movq	32(%rcx,%rdi), %rdx
	movq	%rdx, 32(%rsi,%rdi)
	movq	40(%rcx,%rdi), %rdx
	movq	%rdx, 40(%rsi,%rdi)
	movq	48(%rcx,%rdi), %rdx
	movq	%rdx, 48(%rsi,%rdi)
	movq	56(%rcx,%rdi), %rdx
	movq	%rdx, 56(%rsi,%rdi)
	leaq	(%rcx,%rdi), %rdx
	addq	$64, %rdx
	addq	$64, %rdi
	cmpq	%r10, %rdx
	jb	.LBB206_41
###SPA### trampoline_fmt_64
	jmp	.LBB206_24
.LBB206_17:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB206_23
.LBB206_21:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB206_22:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$7, %rdx
	seta	%al
	orq	%rax, %r15
	movq	%r15, %rax
	shrq	$61, %rax
	jne	.LBB206_45
###SPA### trampoline_fmt_64
.LBB206_23:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(,%r15,8), %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	je	.LBB206_42
###SPA### trampoline_fmt_64
.LBB206_24:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB206_25:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB206_26:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	movq	%r9, %r8
	andq	$-4, %r8
	leaq	-4(%r8), %rsi
	movq	%rsi, %rdx
	shrq	$2, %rdx
	addq	$1, %rdx
	movl	%edx, %edi
	andl	$3, %edi
	cmpq	$12, %rsi
	jae	.LBB206_28
###SPA### trampoline_fmt_64
# %bb.27:
	xorl	%ebx, %ebx
	testq	%rdi, %rdi
	jne	.LBB206_31
###SPA### trampoline_fmt_64
	jmp	.LBB206_33
.LBB206_28:
###SPA## trampoline_fmt_64
	movl	$1, %esi
	subq	%rdx, %rsi
	addq	%rdi, %rsi
	addq	$-1, %rsi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB206_29:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx,%rbx,8), %xmm0
	movups	16(%rcx,%rbx,8), %xmm1
	movups	%xmm0, (%rax,%rbx,8)
	movups	%xmm1, 16(%rax,%rbx,8)
	movups	32(%rcx,%rbx,8), %xmm0
	movups	48(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 32(%rax,%rbx,8)
	movups	%xmm1, 48(%rax,%rbx,8)
	movups	64(%rcx,%rbx,8), %xmm0
	movups	80(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 64(%rax,%rbx,8)
	movups	%xmm1, 80(%rax,%rbx,8)
	movups	96(%rcx,%rbx,8), %xmm0
	movups	112(%rcx,%rbx,8), %xmm1
	movups	%xmm0, 96(%rax,%rbx,8)
	movups	%xmm1, 112(%rax,%rbx,8)
	addq	$16, %rbx
	addq	$4, %rsi
	jne	.LBB206_29
###SPA### trampoline_fmt_64
# %bb.30:
	testq	%rdi, %rdi
	je	.LBB206_33
###SPA### trampoline_fmt_64
.LBB206_31:
###SPA## trampoline_fmt_64
	leaq	16(,%rbx,8), %rsi
	negq	%rdi
	.p2align	4, 0x90
.LBB206_32:                             # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	-16(%rcx,%rsi), %xmm0
	movups	(%rcx,%rsi), %xmm1
	movups	%xmm0, -16(%rax,%rsi)
	movups	%xmm1, (%rax,%rsi)
	addq	$32, %rsi
	addq	$1, %rdi
	jne	.LBB206_32
###SPA### trampoline_fmt_64
.LBB206_33:
###SPA## trampoline_fmt_64
	cmpq	%r8, %r9
	je	.LBB206_24
###SPA### trampoline_fmt_64
# %bb.34:
	leaq	(%rcx,%r8,8), %rcx
	leaq	(%rax,%r8,8), %rsi
	jmp	.LBB206_35
.LBB206_42:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB206_43:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB206_44:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB206_45:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end206:
	.size	_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end206-_ZN7mozilla6VectorIPN2js4wasm8InstanceELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE,"axG",@progbits,_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE,comdat
	.hidden	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE # -- Begin function _ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	.weak	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	.p2align	4, 0x90
	.type	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE,@function
_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE: # @_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	cmpq	%rsi, (%rdi)
	je	.LBB207_1
###SPA### trampoline_fmt_64
# %bb.2:
	movq	%rsi, %rbx
	movq	%rdi, %rbp
	movq	40(%rsi), %rdi
	callq	_ZNK2js4wasm4Code10stableTierEv
	movl	%eax, %r14d
	movq	(%rbp), %rax
	movq	40(%rax), %rdi
	callq	_ZNK2js4wasm4Code10stableTierEv
	movl	%eax, %r15d
	movq	40(%rbx), %rdi
	movl	%r14d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	16(%rax), %rax
	movq	(%rax), %r12
	movq	(%rbp), %rax
	movq	40(%rax), %rdi
	movl	%r15d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	16(%rax), %rcx
	movq	(%rbp), %rax
	cmpq	(%rcx), %r12
	je	.LBB207_3
###SPA### trampoline_fmt_64
# %bb.4:
	movq	40(%rax), %rdi
	movl	%r15d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	16(%rax), %rax
	movq	(%rax), %rbp
	movq	40(%rbx), %rdi
	movl	%r14d, %esi
	callq	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	movq	16(%rax), %rax
	xorl	%ecx, %ecx
	cmpq	(%rax), %rbp
	setae	%cl
	jmp	.LBB207_5
.LBB207_1:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	jmp	.LBB207_6
.LBB207_3:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
	cmpq	%rbx, %rax
	setbe	%cl
.LBB207_5:
###SPA## trampoline_fmt_64
	leal	(%rcx,%rcx), %eax
	addl	$-1, %eax
.LBB207_6:
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end207:
	.size	_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE, .Lfunc_end207-_ZNK18InstanceComparatorclEPKN2js4wasm8InstanceE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,"axG",@progbits,_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,comdat
	.hidden	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm # -- Begin function _ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.weak	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.p2align	4, 0x90
	.type	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm,@function
_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm: # @_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	cmpq	$1, %rsi
	jne	.LBB208_16
###SPA### trampoline_fmt_64
# %bb.1:
	movq	(%r14), %rsi
	cmpq	$28, %rsi
	je	.LBB208_2
###SPA### trampoline_fmt_64
# %bb.7:
	movq	8(%r14), %r15
	testq	%r15, %r15
	je	.LBB208_8
###SPA### trampoline_fmt_64
# %bb.11:
	movq	%r15, %rax
	shrq	$57, %rax
	jne	.LBB208_24
###SPA### trampoline_fmt_64
# %bb.12:
	imulq	$56, %r15, %rax
	addq	%r15, %r15
	testq	%rax, %rax
	je	.LBB208_13
###SPA### trampoline_fmt_64
# %bb.14:
	leaq	-1(%rax), %rcx
	bsrq	%rcx, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB208_15
.LBB208_16:
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
	addq	8(%r14), %rsi
	jb	.LBB208_25
###SPA### trampoline_fmt_64
# %bb.17:
	movq	%rsi, %rcx
	shrq	$58, %rcx
	jne	.LBB208_25
###SPA### trampoline_fmt_64
# %bb.18:
	leaq	(%rsi,%rsi,8), %rax
	leaq	(%rax,%rax,2), %rax
	addq	%rsi, %rax
	je	.LBB208_19
###SPA### trampoline_fmt_64
# %bb.20:
	addq	$-1, %rax
	bsrq	%rax, %rcx
	xorq	$-64, %rcx
	addq	$65, %rcx
	jmp	.LBB208_21
.LBB208_2:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB208_3
.LBB208_19:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB208_21:
###SPA## trampoline_fmt_64
	movl	$1, %eax
	shlq	%cl, %rax
	shrq	$2, %rax
	movabsq	$5270498306774157605, %rdx # imm = 0x4924924924924925
	mulq	%rdx
	movq	%rdx, %r15
	shrq	%r15
	movq	(%r14), %rsi
	cmpq	$28, %rsi
	je	.LBB208_22
###SPA### trampoline_fmt_64
# %bb.23:
	cmpq	$63, %rcx
	jbe	.LBB208_9
###SPA### trampoline_fmt_64
	jmp	.LBB208_24
.LBB208_22:
###SPA## trampoline_fmt_64
	cmpq	$63, %rcx
	ja	.LBB208_24
###SPA### trampoline_fmt_64
.LBB208_3:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(%r15,%r15,8), %rax
	leaq	(%rax,%rax,2), %rsi
	addq	%r15, %rsi
	callq	moz_arena_malloc@PLT
	testq	%rax, %rax
	je	.LBB208_24
###SPA### trampoline_fmt_64
# %bb.4:
	movq	8(%r14), %rsi
	testq	%rsi, %rsi
	jle	.LBB208_10
###SPA### trampoline_fmt_64
# %bb.5:
	movq	(%r14), %rcx
	leaq	(%rsi,%rsi,8), %rdx
	leaq	(%rdx,%rdx,2), %rdx
	addq	%rsi, %rdx
	addq	%rcx, %rdx
	movq	%rax, %rsi
	.p2align	4, 0x90
.LBB208_6:                              # =>This Inner Loop Header: Depth=1
###SPA## trampoline_fmt_64
	movups	(%rcx), %xmm0
	movq	16(%rcx), %rdi
	movzbl	24(%rcx), %ebx
	movb	%bl, 24(%rsi)
	movq	%rdi, 16(%rsi)
	movups	%xmm0, (%rsi)
	addq	$28, %rcx
	addq	$28, %rsi
	cmpq	%rdx, %rcx
	jb	.LBB208_6
###SPA### trampoline_fmt_64
	jmp	.LBB208_10
.LBB208_8:
###SPA## trampoline_fmt_64
	movl	$1, %r15d
	jmp	.LBB208_9
.LBB208_13:
###SPA## trampoline_fmt_64
	xorl	%ecx, %ecx
.LBB208_15:
###SPA## trampoline_fmt_64
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	subq	%rax, %rdx
	xorl	%eax, %eax
	cmpq	$27, %rdx
	seta	%al
	orq	%rax, %r15
	movq	%r15, %rax
	shrq	$59, %rax
	jne	.LBB208_24
###SPA### trampoline_fmt_64
.LBB208_9:
###SPA## trampoline_fmt_64
	movq	_ZN2js11MallocArenaE(%rip), %rdi
	leaq	(%r15,%r15,8), %rax
	leaq	(%rax,%rax,2), %rdx
	addq	%r15, %rdx
	callq	moz_arena_realloc@PLT
	testq	%rax, %rax
	je	.LBB208_24
###SPA### trampoline_fmt_64
.LBB208_10:
###SPA## trampoline_fmt_64
	movq	%rax, (%r14)
	movq	%r15, 16(%r14)
	movb	$1, %al
.LBB208_25:
                                        # kill: def $al killed $al killed $eax
###SPA## trampoline_fmt_64
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB208_24:
	.cfi_def_cfa_offset 32
###SPA## trampoline_fmt_64
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.Lfunc_end208:
	.size	_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm, .Lfunc_end208-_ZN7mozilla6VectorIN2js4wasm9CodeRangeELm0ENS1_17SystemAllocPolicyEE13growStorageByEm
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _GLOBAL__sub_I_Unified_cpp_js_src_wasm2.cpp
	.type	_GLOBAL__sub_I_Unified_cpp_js_src_wasm2.cpp,@function
_GLOBAL__sub_I_Unified_cpp_js_src_wasm2.cpp: # @_GLOBAL__sub_I_Unified_cpp_js_src_wasm2.cpp
	.cfi_startproc
	movq	(%rsp), %r10
	addq	%gs:(16), %r10
	movq	%gs:(8), %r11
	movq	%r10, (%rsp, %r11, 1)
# %bb.0:
###SPA## trampoline_fmt_64
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%fs:40, %rax
	movq	%rax, 8(%rsp)
	leaq	sHugeMemoryEnabled(%rip), %rbx
	movq	%rbx, %rdi
	callq	_ZN7mozilla6detail9MutexImplC2Ev@PLT
	movw	$0, sHugeMemoryEnabled+40(%rip)
	leaq	_ZN2js13ExclusiveDataI12ReadLockFlagED2Ev(%rip), %rdi
	leaq	__dso_handle(%rip), %r14
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__cxa_atexit@PLT
	leaq	_ZL18sEagerInstallState(%rip), %rbx
	movq	%rbx, %rdi
	callq	_ZN7mozilla6detail9MutexImplC2Ev@PLT
	movw	$0, _ZL18sEagerInstallState+40(%rip)
	leaq	_ZN2js13ExclusiveDataI12InstallStateED2Ev(%rip), %r15
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__cxa_atexit@PLT
	leaq	_ZL17sLazyInstallState(%rip), %rbx
	movq	%rbx, %rdi
	callq	_ZN7mozilla6detail9MutexImplC2Ev@PLT
	movw	$0, _ZL17sLazyInstallState+40(%rip)
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	__cxa_atexit@PLT
	movq	$0, (%rsp)
	movq	%rsp, %rdi
	callq	_ZN2js3jit13FloatRegister18GetPushSizeInBytesERKNS0_16TypedRegisterSetIS1_EE
                                        # kill: def $eax killed $eax def $rax
	leal	48(%rax), %ecx
	movl	%ecx, _ZL23NonVolatileRegsPushSize(%rip)
	addl	$64, %eax
	movl	%eax, _ZL22FramePushedBeforeAlign(%rip)
	movq	%fs:40, %rax
	cmpq	8(%rsp), %rax
	jne	.LBB209_2
###SPA### trampoline_fmt_64
# %bb.1:
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	movq	%gs:(8), %r11
	movq	(%rsp, %r11, 1), %r11
	subq	%gs:(16), %r11
	addq	$8, %rsp
	jmpq	*%r11
.LBB209_2:
	.cfi_def_cfa_offset 48
###SPA## trampoline_fmt_64
	callq	__stack_chk_fail@PLT
.Lfunc_end209:
	.size	_GLOBAL__sub_I_Unified_cpp_js_src_wasm2.cpp, .Lfunc_end209-_GLOBAL__sub_I_Unified_cpp_js_src_wasm2.cpp
	.cfi_endproc
                                        # -- End function
	.hidden	_ZTVN2js4wasm6ModuleE   # @_ZTVN2js4wasm6ModuleE
	.type	_ZTVN2js4wasm6ModuleE,@object
	.section	.data.rel.ro._ZTVN2js4wasm6ModuleE,"aw",@progbits
	.globl	_ZTVN2js4wasm6ModuleE
	.p2align	3
_ZTVN2js4wasm6ModuleE:
	.quad	0
	.quad	0
	.quad	_ZN2js4wasm6ModuleD2Ev
	.quad	_ZN2js4wasm6ModuleD0Ev
	.quad	_ZNK2js4wasm6Module12createObjectEP9JSContext
	.quad	_ZNK2js4wasm6Module20createObjectForAsmJSEP9JSContext
	.size	_ZTVN2js4wasm6ModuleE, 48

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"getting build id"
	.size	.L.str, 17

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"MOZ_RELEASE_ASSERT(!metadata().debugEnabled)"
	.size	.L.str.1, 45

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"MOZ_RELEASE_ASSERT(code_->hasTier(Tier::Serialized))"
	.size	.L.str.2, 53

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"MOZ_RELEASE_ASSERT(cursor == begin + size)"
	.size	.L.str.3, 43

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"MOZ_RELEASE_ASSERT(EqualContainers(currentBuildId, deserializedBuildId))"
	.size	.L.str.4, 73

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"MOZ_RELEASE_ASSERT(!!maybeMetadata == code->metadata().isAsmJS())"
	.size	.L.str.5, 66

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"MOZ_RELEASE_ASSERT(!metadata->moduleName)"
	.size	.L.str.6, 42

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"MOZ_RELEASE_ASSERT(metadata->funcNames.empty())"
	.size	.L.str.7, 48

	.hidden	_ZN2js10GetBuildIdE
	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"code"
	.size	.L.str.8, 5

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"begin"
	.size	.L.str.9, 6

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"end"
	.size	.L.str.10, 4

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"kind"
	.size	.L.str.11, 5

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"funcIndex"
	.size	.L.str.12, 10

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"funcBodyBegin"
	.size	.L.str.13, 14

	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"funcBodyEnd"
	.size	.L.str.14, 12

	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"segments"
	.size	.L.str.15, 9

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"Memory"
	.size	.L.str.16, 7

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"MOZ_RELEASE_ASSERT(memory->isHuge() == metadata().omitsBoundsChecks)"
	.size	.L.str.17, 69

	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"Table"
	.size	.L.str.18, 6

	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"MOZ_CRASH(Should not have seen any struct types)"
	.size	.L.str.19, 49

	.type	.L.str.20,@object       # @.str.20
.L.str.20:
	.asciz	"MOZ_RELEASE_ASSERT(cx->wasmHaveSignalHandlers)"
	.size	.L.str.20, 47

	.hidden	_ZN2js4wasm10CodeExistsE # @_ZN2js4wasm10CodeExistsE
	.type	_ZN2js4wasm10CodeExistsE,@object
	.section	.bss._ZN2js4wasm10CodeExistsE,"aw",@nobits
	.globl	_ZN2js4wasm10CodeExistsE
	.p2align	2
_ZN2js4wasm10CodeExistsE:
	.zero	4
	.size	_ZN2js4wasm10CodeExistsE, 4

	.type	.L.str.21,@object       # @.str.21
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.21:
	.asciz	"MOZ_RELEASE_ASSERT(map)"
	.size	.L.str.21, 24

	.hidden	sHugeMemoryEnabled      # @sHugeMemoryEnabled
	.type	sHugeMemoryEnabled,@object
	.section	.bss.sHugeMemoryEnabled,"aw",@nobits
	.globl	sHugeMemoryEnabled
	.p2align	3
sHugeMemoryEnabled:
	.zero	48
	.size	sHugeMemoryEnabled, 48

	.hidden	__dso_handle
	.type	_ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled,@object # @_ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled
	.section	.bss._ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled,"aw",@nobits
_ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled:
	.byte	0                       # 0x0
	.size	_ZZN2js4wasm19IsHugeMemoryEnabledEvE7enabled, 1

	.type	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled,@object # @_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled
	.section	.bss._ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled,"aw",@nobits
	.p2align	3
_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled:
	.quad	0                       # 0x0
	.size	_ZGVZN2js4wasm19IsHugeMemoryEnabledEvE7enabled, 8

	.type	.L.str.22,@object       # @.str.22
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.22:
	.asciz	"MOZ_RELEASE_ASSERT(set)"
	.size	.L.str.22, 24

	.type	.L.str.23,@object       # @.str.23
.L.str.23:
	.asciz	"MOZ_RELEASE_ASSERT(!sProcessCodeSegmentMap)"
	.size	.L.str.23, 44

	.type	.L.str.24,@object       # @.str.24
.L.str.24:
	.asciz	"js::wasm::Init"
	.size	.L.str.24, 15

	.type	_ZL18sEagerInstallState,@object # @_ZL18sEagerInstallState
	.section	.bss._ZL18sEagerInstallState,"aw",@nobits
	.p2align	3
_ZL18sEagerInstallState:
	.zero	48
	.size	_ZL18sEagerInstallState, 48

	.type	.L.str.26,@object       # @.str.26
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.26:
	.asciz	"MOZ_RELEASE_ASSERT(eagerInstallState->success == false)"
	.size	.L.str.26, 56

	.type	_ZL16sPrevSEGVHandler,@object # @_ZL16sPrevSEGVHandler
	.section	.bss._ZL16sPrevSEGVHandler,"aw",@nobits
	.p2align	3
_ZL16sPrevSEGVHandler:
	.zero	152
	.size	_ZL16sPrevSEGVHandler, 152

	.type	.L.str.27,@object       # @.str.27
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.27:
	.asciz	"MOZ_CRASH(unable to install segv handler)"
	.size	.L.str.27, 42

	.type	_ZL20sPrevWasmTrapHandler,@object # @_ZL20sPrevWasmTrapHandler
	.section	.bss._ZL20sPrevWasmTrapHandler,"aw",@nobits
	.p2align	3
_ZL20sPrevWasmTrapHandler:
	.zero	152
	.size	_ZL20sPrevWasmTrapHandler, 152

	.type	.L.str.28,@object       # @.str.28
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.28:
	.asciz	"MOZ_CRASH(unable to install wasm trap handler)"
	.size	.L.str.28, 47

	.type	_ZL17sLazyInstallState,@object # @_ZL17sLazyInstallState
	.section	.bss._ZL17sLazyInstallState,"aw",@nobits
	.p2align	3
_ZL17sLazyInstallState:
	.zero	48
	.size	_ZL17sLazyInstallState, 48

	.type	.L.str.30,@object       # @.str.30
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.30:
	.asciz	"MOZ_RELEASE_ASSERT(!cx->wasmHaveSignalHandlers)"
	.size	.L.str.30, 48

	.type	.L.str.31,@object       # @.str.31
.L.str.31:
	.asciz	"MOZ_RELEASE_ASSERT(eagerInstallState->tried)"
	.size	.L.str.31, 45

	.hidden	_ZN2js10TlsContextE
	.type	.L.str.32,@object       # @.str.32
.L.str.32:
	.asciz	"MOZ_CRASH(Unexpected result type)"
	.size	.L.str.32, 34

	.type	_ZL23NonVolatileRegsPushSize,@object # @_ZL23NonVolatileRegsPushSize
	.section	.bss._ZL23NonVolatileRegsPushSize,"aw",@nobits
	.p2align	2
_ZL23NonVolatileRegsPushSize:
	.long	0                       # 0x0
	.size	_ZL23NonVolatileRegsPushSize, 4

	.type	.L.str.35,@object       # @.str.35
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.35:
	.asciz	"MOZ_CRASH(ion to wasm fast path can only handle i32/f32/f64)"
	.size	.L.str.35, 61

	.type	.L.str.37,@object       # @.str.37
.L.str.37:
	.asciz	"MOZ_CRASH(unexpected MIR type for a float register in wasm fast call)"
	.size	.L.str.37, 70

	.type	.L.str.38,@object       # @.str.38
.L.str.38:
	.asciz	"MOZ_CRASH(multi-value in ion to wasm fast path unimplemented)"
	.size	.L.str.38, 62

	.type	.L.str.39,@object       # @.str.39
.L.str.39:
	.asciz	"MOZ_CRASH(unexpected MIR type for a stack slot in wasm fast call)"
	.size	.L.str.39, 66

	.type	.L.str.40,@object       # @.str.40
.L.str.40:
	.asciz	"MOZ_CRASH(can't happen because of arg.kind() check)"
	.size	.L.str.40, 52

	.type	_ZN2js3jitL15JSReturnOperandE,@object # @_ZN2js3jitL15JSReturnOperandE
	.section	.rodata._ZN2js3jitL15JSReturnOperandE,"a",@progbits
_ZN2js3jitL15JSReturnOperandE:
	.byte	1                       # 0x1
	.size	_ZN2js3jitL15JSReturnOperandE, 1

	.hidden	_ZN2js3jit10JitOptionsE
	.type	.L.str.44,@object       # @.str.44
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.44:
	.asciz	"MOZ_CRASH(unexpected return type when calling from ion to wasm)"
	.size	.L.str.44, 64

	.type	.L.str.48,@object       # @.str.48
.L.str.48:
	.asciz	"MOZ_CRASH(bad initializer expression)"
	.size	.L.str.48, 38

	.hidden	_ZN2js17ArrayBufferObject6class_E
	.type	.L.str.49,@object       # @.str.49
.L.str.49:
	.asciz	"MOZ_CRASH(ran out of imports)"
	.size	.L.str.49, 30

	.hidden	_ZTVN2js15RootedTraceableINS_4wasm3ValEEE # @_ZTVN2js15RootedTraceableINS_4wasm3ValEEE
	.type	_ZTVN2js15RootedTraceableINS_4wasm3ValEEE,@object
	.section	.data.rel.ro._ZTVN2js15RootedTraceableINS_4wasm3ValEEE,"aGw",@progbits,_ZTVN2js15RootedTraceableINS_4wasm3ValEEE,comdat
	.weak	_ZTVN2js15RootedTraceableINS_4wasm3ValEEE
	.p2align	3
_ZTVN2js15RootedTraceableINS_4wasm3ValEEE:
	.quad	0
	.quad	0
	.quad	_ZN2js16VirtualTraceableD2Ev
	.quad	_ZN2js15RootedTraceableINS_4wasm3ValEED0Ev
	.quad	_ZN2js15RootedTraceableINS_4wasm3ValEE5traceEP8JSTracerPKc
	.size	_ZTVN2js15RootedTraceableINS_4wasm3ValEEE, 40

	.type	.L.str.50,@object       # @.str.50
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.50:
	.asciz	"MOZ_CRASH(unexpected global kind)"
	.size	.L.str.50, 34

	.type	.L.str.51,@object       # @.str.51
.L.str.51:
	.asciz	"MOZ_CRASH(unexpected initExpr type)"
	.size	.L.str.51, 36

	.hidden	_ZN2js11MallocArenaE
	.type	.L.str.52,@object       # @.str.52
.L.str.52:
	.asciz	"MOZ_CRASH()"
	.size	.L.str.52, 12

	.type	_ZL22sProcessCodeSegmentMap,@object # @_ZL22sProcessCodeSegmentMap
	.section	.bss._ZL22sProcessCodeSegmentMap,"aw",@nobits
	.p2align	3
_ZL22sProcessCodeSegmentMap:
	.zero	8
	.size	_ZL22sProcessCodeSegmentMap, 8

	.type	.L.str.54,@object       # @.str.54
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.54:
	.asciz	"when inserting a CodeSegment in the process-wide map"
	.size	.L.str.54, 53

	.type	_ZL17sNumActiveLookups,@object # @_ZL17sNumActiveLookups
	.section	.bss._ZL17sNumActiveLookups,"aw",@nobits
	.p2align	3
_ZL17sNumActiveLookups:
	.zero	8
	.size	_ZL17sNumActiveLookups, 8

	.hidden	_ZN9JSRuntime17liveRuntimesCountE
	.type	.L.str.58,@object       # @.str.58
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.58:
	.asciz	"MOZ_RELEASE_ASSERT(signum == 11 || signum == 7 || signum == kWasmTrapSignal)"
	.size	.L.str.58, 77

	.type	_ZL18sPrevSIGBUSHandler,@object # @_ZL18sPrevSIGBUSHandler
	.section	.bss._ZL18sPrevSIGBUSHandler,"aw",@nobits
	.p2align	3
_ZL18sPrevSIGBUSHandler:
	.zero	152
	.size	_ZL18sPrevSIGBUSHandler, 152

	.type	.L.str.59,@object       # @.str.59
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.59:
	.asciz	"MOZ_RELEASE_ASSERT(&instance->code() == &segment.code() || trap == Trap::IndirectCallBadSig)"
	.size	.L.str.59, 93

	.type	.L.str.60,@object       # @.str.60
.L.str.60:
	.asciz	"MOZ_RELEASE_ASSERT(!assertCx || cx == assertCx)"
	.size	.L.str.60, 48

	.type	.L.str.61,@object       # @.str.61
.L.str.61:
	.asciz	"MOZ_RELEASE_ASSERT(lazyInstallState->success == false)"
	.size	.L.str.61, 55

	.type	.L.str.62,@object       # @.str.62
.L.str.62:
	.asciz	"vmovsd"
	.size	.L.str.62, 7

	.type	.L.str.103,@object      # @.str.103
.L.str.103:
	.asciz	"vmovss"
	.size	.L.str.103, 7

	.type	.L.str.106,@object      # @.str.106
.L.str.106:
	.asciz	"MOZ_CRASH(bad resulttype)"
	.size	.L.str.106, 26

	.type	.L.str.109,@object      # @.str.109
.L.str.109:
	.asciz	"MOZ_CRASH(unexpected operand kind)"
	.size	.L.str.109, 35

	.type	.L.str.164,@object      # @.str.164
.L.str.164:
	.asciz	"MOZ_RELEASE_ASSERT(to.offset() == -1 || size_t(to.offset()) <= size())"
	.size	.L.str.164, 71

	.type	.L.str.165,@object      # @.str.165
.L.str.165:
	.asciz	"MOZ_RELEASE_ASSERT(src.offset() > int32_t(sizeof(int32_t)))"
	.size	.L.str.165, 60

	.type	.L.str.166,@object      # @.str.166
.L.str.166:
	.asciz	"MOZ_RELEASE_ASSERT(size_t(src.offset()) <= size())"
	.size	.L.str.166, 51

	.type	.L.str.168,@object      # @.str.168
.L.str.168:
	.asciz	"vucomiss"
	.size	.L.str.168, 9

	.type	.L.str.170,@object      # @.str.170
.L.str.170:
	.asciz	"MOZ_CRASH(nextJump bogus offset)"
	.size	.L.str.170, 33

	.type	.L.str.171,@object      # @.str.171
.L.str.171:
	.asciz	"MOZ_RELEASE_ASSERT(size_t(to.offset()) <= size())"
	.size	.L.str.171, 50

	.type	.L.str.173,@object      # @.str.173
.L.str.173:
	.asciz	"MOZ_CRASH(offset is too great for a 32-bit relocation)"
	.size	.L.str.173, 55

	.type	.L.str.174,@object      # @.str.174
.L.str.174:
	.asciz	"vucomisd"
	.size	.L.str.174, 9

	.type	.L.str.184,@object      # @.str.184
.L.str.184:
	.asciz	"MOZ_CRASH(StackCopy: unexpected type)"
	.size	.L.str.184, 38

	.type	_ZL22FramePushedBeforeAlign,@object # @_ZL22FramePushedBeforeAlign
	.section	.bss._ZL22FramePushedBeforeAlign,"aw",@nobits
	.p2align	2
_ZL22FramePushedBeforeAlign:
	.long	0                       # 0x0
	.size	_ZL22FramePushedBeforeAlign, 4

	.type	.L.str.196,@object      # @.str.196
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.196:
	.asciz	"MOZ_CRASH(unknown GPR type)"
	.size	.L.str.196, 28

	.type	.L.str.197,@object      # @.str.197
.L.str.197:
	.asciz	"MOZ_CRASH(V128 not supported in SetupABIArguments)"
	.size	.L.str.197, 51

	.type	.L.str.198,@object      # @.str.198
.L.str.198:
	.asciz	"MOZ_CRASH(Uninitialized ABIArg kind)"
	.size	.L.str.198, 37

	.type	.L.str.201,@object      # @.str.201
.L.str.201:
	.asciz	"MOZ_CRASH(V128 not supported in StoreABIReturn)"
	.size	.L.str.201, 48

	.type	.L.str.203,@object      # @.str.203
.L.str.203:
	.asciz	"MOZ_CRASH(unexpected argument type when calling from the jit)"
	.size	.L.str.203, 62

	.type	.L.str.204,@object      # @.str.204
.L.str.204:
	.asciz	"MOZ_CRASH(unexpected input argument when calling from jit)"
	.size	.L.str.204, 59

	.type	.L.str.205,@object      # @.str.205
.L.str.205:
	.asciz	"MOZ_CRASH(returning reference in jitentry NYI)"
	.size	.L.str.205, 47

	.type	.L.str.210,@object      # @.str.210
.L.str.210:
	.asciz	"vmovq"
	.size	.L.str.210, 6

	.type	.L.str.212,@object      # @.str.212
.L.str.212:
	.asciz	"vcvttsd2si"
	.size	.L.str.212, 11

	.type	.L.str.219,@object      # @.str.219
.L.str.219:
	.asciz	"MOZ_CRASH(Unhandled alignment)"
	.size	.L.str.219, 31

	.type	.L.str.224,@object      # @.str.224
.L.str.224:
	.asciz	"vcvtsd2ss"
	.size	.L.str.224, 10

	.type	.L.str.226,@object      # @.str.226
.L.str.226:
	.asciz	"vcvtss2sd"
	.size	.L.str.226, 10

	.type	.L.str.227,@object      # @.str.227
.L.str.227:
	.asciz	"MOZ_CRASH(unexepcted operand kind)"
	.size	.L.str.227, 35

	.type	.L.str.234,@object      # @.str.234
.L.str.234:
	.asciz	"MOZ_CRASH(No Ref support here yet)"
	.size	.L.str.234, 35

	.type	.L.str.236,@object      # @.str.236
.L.str.236:
	.asciz	"MOZ_CRASH(FillArgumentArrayForExit, ABIArg::GPR: unexpected type)"
	.size	.L.str.236, 66

	.type	.L.str.237,@object      # @.str.237
.L.str.237:
	.asciz	"MOZ_CRASH(Unknown MIRType in wasm exit stub)"
	.size	.L.str.237, 45

	.type	.L.str.238,@object      # @.str.238
.L.str.238:
	.asciz	"MOZ_CRASH(FillArgumentArrayForExit, ABIArg::Stack: unexpected type)"
	.size	.L.str.238, 68

	.type	.L.str.239,@object      # @.str.239
.L.str.239:
	.asciz	"vmovapd"
	.size	.L.str.239, 8

	.type	.L.str.240,@object      # @.str.240
.L.str.240:
	.asciz	"MOZ_CRASH(typed reference returned by import (jit exit) NYI)"
	.size	.L.str.240, 61

	.type	.L.str.241,@object      # @.str.241
.L.str.241:
	.asciz	"MOZ_CRASH(Unsupported convert type)"
	.size	.L.str.241, 36

	.hidden	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue # @_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue
	.type	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue,@object
	.section	.rodata._ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue,"aG",@progbits,_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue,comdat
	.weak	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue
	.p2align	3
_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue:
	.quad	0
	.size	_ZZN2JS6HandleIP8JSObjectEC1EDnE14ConstNullValue, 8

	.hidden	_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE # @_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE
	.type	_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE,@object
	.section	.data.rel.ro._ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE,"aGw",@progbits,_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE,comdat
	.weak	_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE
	.p2align	3
_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE:
	.quad	0
	.quad	0
	.quad	_ZN2js16VirtualTraceableD2Ev
	.quad	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEED0Ev
	.quad	_ZN2js15RootedTraceableIN2JS10ValueArrayILm2EEEE5traceEP8JSTracerPKc
	.size	_ZTVN2js15RootedTraceableIN2JS10ValueArrayILm2EEEEE, 40

	.hidden	_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE # @_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE
	.type	_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE,@object
	.section	.data.rel.ro._ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE,"aGw",@progbits,_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE,comdat
	.weak	_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE
	.p2align	3
_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE:
	.quad	0
	.quad	0
	.quad	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl10threadTypeEv
	.quad	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl7runTaskEv
	.quad	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD2Ev
	.quad	_ZN2js4wasm6Module22Tier2GeneratorTaskImplD0Ev
	.quad	_ZN2js4wasm6Module22Tier2GeneratorTaskImpl6cancelEv
	.size	_ZTVN2js4wasm6Module22Tier2GeneratorTaskImplE, 56

	.hidden	_ZTVN2js4wasm8MetadataE
	.hidden	_ZN2js11PlainObject6class_E
	.hidden	_ZN2js16FunctionClassPtrE
	.hidden	_ZN2js2gc16slotsToThingKindE
	.type	.L.str.290,@object      # @.str.290
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.290:
	.asciz	"pre barrier"
	.size	.L.str.290, 12

	.type	.L.str.291,@object      # @.str.291
.L.str.291:
	.asciz	"Failed to allocate for MonoTypeBuffer::put."
	.size	.L.str.291, 44

	.hidden	_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE # @_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE
	.type	_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE,@object
	.section	.data.rel.ro._ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE,"aGw",@progbits,_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE,comdat
	.weak	_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE
	.p2align	3
_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE:
	.quad	0
	.quad	0
	.quad	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED2Ev
	.quad	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEED0Ev
	.quad	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE5sweepEPNS2_2gc11StoreBufferE
	.quad	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE10needsSweepEv
	.quad	_ZN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE26setNeedsIncrementalBarrierEb
	.quad	_ZNK2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEE23needsIncrementalBarrierEv
	.size	_ZTVN2JS9WeakCacheINS_9GCHashSetIN2js11WeakHeapPtrIPNS2_18WasmInstanceObjectEEENS2_17MovableCellHasherIS6_EENS2_17SystemAllocPolicyEEEEE, 64

	.hidden	_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue # @_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue
	.type	_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue,@object
	.section	.rodata._ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue,"aG",@progbits,_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue,comdat
	.weak	_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue
	.p2align	3
_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue:
	.quad	0
	.size	_ZZN2JS6HandleIPN2js15WasmTableObjectEEC1EDnE14ConstNullValue, 8

	.hidden	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE # @_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE
	.type	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE,@object
	.section	.data.rel.ro._ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE,"aGw",@progbits,_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE,comdat
	.weak	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE
	.p2align	3
_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE:
	.quad	0
	.quad	0
	.quad	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED2Ev
	.quad	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEED0Ev
	.quad	_ZN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.size	_ZTVN2js15RootedTraceableIN2JS8GCVectorIPNS_15WasmTableObjectELm0ENS_17SystemAllocPolicyEEEEE, 40

	.type	.L.str.295,@object      # @.str.295
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.295:
	.asciz	"vector element"
	.size	.L.str.295, 15

	.hidden	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE # @_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE
	.type	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE,@object
	.section	.data.rel.ro._ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE,"aGw",@progbits,_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE,comdat
	.weak	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE
	.p2align	3
_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE:
	.quad	0
	.quad	0
	.quad	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED2Ev
	.quad	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEED0Ev
	.quad	_ZN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEE5traceEP8JSTracerPKc
	.size	_ZTVN2js15RootedTraceableIN2JS8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ENS_17SystemAllocPolicyEEEEE, 40

	.type	.L.str.297,@object      # @.str.297
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.297:
	.asciz	"MOZ_RELEASE_ASSERT(sNumActiveLookups == 0)"
	.size	.L.str.297, 43

	.type	.L.str.299,@object      # @.str.299
.L.str.299:
	.asciz	"MOZ_CRASH(unexpected argType)"
	.size	.L.str.299, 30

	.section	.init_array,"aw",@init_array
	.p2align	3
	.quad	_GLOBAL__sub_I_Unified_cpp_js_src_wasm2.cpp
	.type	_ZL20sAlreadyHandlingTrap.0.0,@object # @_ZL20sAlreadyHandlingTrap.0.0
	.section	.tbss._ZL20sAlreadyHandlingTrap.0.0,"awT",@nobits
_ZL20sAlreadyHandlingTrap.0.0:
	.byte	0                       # 0x0
	.size	_ZL20sAlreadyHandlingTrap.0.0, 1

	.hidden	_ZN2js32StartOffThreadWasmTier2GeneratorEN7mozilla9UniquePtrINS_4wasm18Tier2GeneratorTaskEN2JS12DeletePolicyIS3_EEEE
	.hidden	_ZNK2js4wasm4Code8setTier2EN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS4_EEEERKNS0_8LinkDataE
	.hidden	_ZNK2js4wasm4Code8codeTierENS0_4TierE
	.hidden	_ZNK2js4wasm12LazyStubTier7hasStubEj
	.hidden	_ZN2js4wasm12LazyStubTier11createTier2ERKN7mozilla6VectorIjLm8ENS_17SystemAllocPolicyEEERKNS0_8CodeTierEPNS2_5MaybeImEE
	.hidden	_ZNK2js4wasm4Code11commitTier2Ev
	.hidden	_ZN2js4wasm12LazyStubTier13setJitEntriesERKN7mozilla5MaybeImEERKNS0_4CodeE
	.hidden	_ZN2js24AutoEnterOOMUnsafeRegion5crashEPKc
	.hidden	_ZNK2js4wasm8LinkData14serializedSizeEv
	.hidden	_ZNK2js4wasm4Code14serializedSizeEv
	.hidden	_ZNK2js4wasm4Code7hasTierENS0_4TierE
	.hidden	_ZNK2js4wasm8LinkData9serializeEPh
	.hidden	_ZNK2js4wasm4Code9serializeEPhRKNS0_8LinkDataE
	.hidden	_ZN2js4wasm8LinkData11deserializeEPKh
	.hidden	_ZN2js4wasm4Code11deserializeEPKhRKNS0_8LinkDataERNS0_8MetadataEP6RefPtrIKS1_E
	.hidden	_ZN2js16WasmModuleObject6createEP9JSContextRKNS_4wasm6ModuleEN2JS6HandleIP8JSObjectEE
	.hidden	_ZN2js4wasm19ObservedCPUFeaturesEv
	.hidden	_ZNK2js4wasm4Code22addSizeOfMiscIfNotSeenEPFmPKvEPN7mozilla7HashSetIPKNS0_8MetadataENS6_13DefaultHasherISA_vEENS_17SystemAllocPolicyEEEPNS7_IPKS1_NSB_ISH_vEESD_EEPmSL_
	.hidden	_Z16JS_NewUint8ArrayP9JSContextj
	.hidden	_Z17JS_DefinePropertyP9JSContextN2JS6HandleIP8JSObjectEEPKcNS2_INS1_5ValueEEEj
	.hidden	_ZN2js18NewDenseEmptyArrayEP9JSContextN2JS6HandleIP8JSObjectEE
	.hidden	_ZN2js16NewbornArrayPushEP9JSContextN2JS6HandleIP8JSObjectEERKNS2_5ValueE
	.hidden	_ZNK2js18WasmInstanceObject8instanceEv
	.hidden	_Z24JS_ReportErrorNumberUTF8P9JSContextPFPK19JSErrorFormatStringPvjES4_jz
	.hidden	_ZN2js15GetErrorMessageEPvj
	.hidden	_ZN2js4wasm8Instance9initElemsEjRKNS0_11ElemSegmentEjjj
	.hidden	_ZNK2js16WasmMemoryObject20volatileMemoryLengthEv
	.hidden	_ZNK2js16WasmMemoryObject6bufferEv
	.hidden	_ZNK2js4wasm4Code10stableTierEv
	.hidden	_ZN2js4wasm22IsWasmExportedFunctionEP10JSFunction
	.hidden	_ZN2js4wasm27ExportedFunctionToFuncIndexEP10JSFunction
	.hidden	_ZN2js4wasm26ExportedFunctionToInstanceEP10JSFunction
	.hidden	_ZNK2js4wasm12MetadataTier16lookupFuncExportEjPm
	.hidden	_ZNK2js16WasmMemoryObject8isSharedEv
	.hidden	_ZN2js16CreateWasmBufferEP9JSContextRKNS_4wasm6LimitsEN2JS13MutableHandleIPNS_28ArrayBufferObjectMaybeSharedEEE
	.hidden	_ZN2js16WasmMemoryObject6createEP9JSContextN2JS6HandleIPNS_28ArrayBufferObjectMaybeSharedEEENS4_IP8JSObjectEE
	.hidden	_ZNK2js16WasmMemoryObject6isHugeEv
	.hidden	_ZNK2js15WasmTableObject5tableEv
	.hidden	_ZN2js17ReportOutOfMemoryEP9JSContext
	.hidden	_ZN2js15WasmTableObject6createEP9JSContextjN7mozilla5MaybeIjEENS_4wasm9TableKindEN2JS6HandleIP8JSObjectEE
	.hidden	_ZN2js4wasm5Table6createEP9JSContextRKNS0_9TableDescEN2JS6HandleIPNS_15WasmTableObjectEEE
	.hidden	_ZNK2js4wasm6Export11globalIndexEv
	.hidden	_ZN2js4wasm13ModuleSegment6createENS0_4TierERKN7mozilla6VectorIhLm0ENS_17SystemAllocPolicyEEERKNS0_8LinkDataE
	.hidden	_ZN2js4wasm12MetadataTier5cloneERKS1_
	.hidden	_ZN2js4wasm10JumpTables4initENS0_11CompileModeERKNS0_13ModuleSegmentERKN7mozilla6VectorINS0_9CodeRangeELm0ENS_17SystemAllocPolicyEEE
	.hidden	_ZN2js4wasm4Code10initializeERKNS0_8LinkDataE
	.hidden	_ZN2js4wasm13CreateTlsDataEj
	.hidden	_ZN2js18WasmInstanceObject6createEP9JSContext6RefPtrIKNS_4wasm4CodeEERKN7mozilla6VectorINS4_18SerializableRefPtrIKNS4_11DataSegmentEEELm0ENS_17SystemAllocPolicyEEERKNS9_INSA_IKNS4_11ElemSegmentEEELm0ESE_EENS8_9UniquePtrINS4_7TlsDataENS4_14TlsDataDeleterEEEN2JS6HandleIPNS_16WasmMemoryObjectEEEONS9_IS3_INS4_5TableEELm0ESE_EEONSS_8GCVectorINS_7HeapPtrIPNS_15StructTypeDescrEEELm0ESE_EERKNS11_IP10JSFunctionLm0ESE_EERKNS9_INS4_10GlobalDescELm0ESE_EERKNS11_INS4_3ValELm0ESE_EERKNS11_IPNS_16WasmGlobalObjectELm0ESE_EENST_IP8JSObjectEENSO_INS4_10DebugStateENSS_12DeletePolicyIS1T_EEEE
	.hidden	_ZN2js4wasm8Instance10callExportEP9JSContextjN2JS8CallArgsE
	.hidden	_ZN9JSRuntime13setUseCounterEP8JSObject12JSUseCounter
	.hidden	_ZNK2js4wasm13ModuleSegment11lookupRangeEPKv
	.hidden	_ZNK2js4wasm15LazyStubSegment11lookupRangeEPKv
	.hidden	_ZNK2js4wasm11CodeSegment4codeEv
	.hidden	_ZN2js4wasm18LookupBuiltinThunkEPvPPKNS0_9CodeRangeEPPh
	.hidden	_ZN2js2gc17SystemAddressBitsEv
	.hidden	_ZN2js2gc18VirtualMemoryLimitEv
	.hidden	_ZN2js4wasm20ReleaseBuiltinThunksEv
	.hidden	_ZNK2js4wasm8Instance21ensureProfilingLabelsEb
	.hidden	_ZN2js4wasm10DebugState26ensureEnterFrameTrapsStateEP9JSContextb
	.hidden	_ZN2js4wasm7TlsData12setInterruptEv
	.hidden	_ZN2js4wasm7TlsData14resetInterruptEP9JSContext
	.hidden	_ZNK2js4wasm4Code10lookupTrapEPvPNS0_4TrapEPNS0_14BytecodeOffsetE
	.hidden	_ZNK2js4wasm8Instance25memoryAccessInGuardRegionEPhj
	.hidden	_ZN2js3jit13JitActivation13startWasmTrapENS_4wasm4TrapEjRKN2JS22ProfilingFrameIterator13RegisterStateE
	.hidden	_ZN2js3jit14MacroAssembler4PushENS0_8RegisterE
	.hidden	_ZN2js3jit14MacroAssembler13loadJSContextENS0_8RegisterE
	.hidden	_ZN2js4wasm13ArgTypeVectorC1ERKNS0_8FuncTypeE
	.hidden	_ZNK2js4wasm4Code8bestTierEv
	.hidden	_ZN2js3jit14MacroAssembler9moveValueERKN2JS5ValueERKNS0_12ValueOperandE
	.hidden	_ZN2js3jit14MacroAssembler3PopENS0_8RegisterE
	.hidden	_ZN2js3jit14MacroAssembler6finishEv
	.hidden	_ZN2js4wasm12CompiledCode4swapERNS_3jit14MacroAssemblerE
	.hidden	_ZN2js4wasm20GenerateExitPrologueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	.hidden	_ZN2js3jit14MacroAssembler4callENS0_6ImmPtrE
	.hidden	_ZN2js4wasm20GenerateExitEpilogueERNS_3jit14MacroAssemblerEjNS0_10ExitReasonEPNS0_15CallableOffsetsE
	.hidden	_ZN2js12GlobalObject18resolveConstructorEP9JSContextN2JS6HandleIPS0_EE10JSProtoKeyNS0_17IfClassIsDisabledE
	.hidden	_ZNK2js17ArrayBufferObject17dataPointerSharedEv
	.hidden	_ZNK2js23SharedArrayBufferObject15rawBufferObjectEv
	.hidden	_ZN2js22WasmArrayBufferMaxSizeEPKNS_28ArrayBufferObjectMaybeSharedE
	.hidden	_ZNK2JS20RealmCreationOptions32getSharedMemoryAndAtomicsEnabledEv
	.hidden	_Z25JS_ReportErrorNumberASCIIP9JSContextPFPK19JSErrorFormatStringPvjES4_jz
	.hidden	_ZN2js16WasmGlobalObject6createEP9JSContextN2JS6HandleINS_4wasm3ValEEEbNS4_IP8JSObjectEE
	.hidden	_ZN2js4wasm3Val5traceEP8JSTracer
	.hidden	_ZNK2js4wasm6Export9funcIndexEv
	.hidden	_ZN2js18WasmInstanceObject14initExportsObjER8JSObject
	.hidden	_ZN2js16AtomizeUTF8CharsEP9JSContextPKcm
	.hidden	_ZNK2js4wasm6Export10tableIndexEv
	.hidden	_Z21JS_DefinePropertyByIdP9JSContextN2JS6HandleIP8JSObjectEENS2_INS1_11PropertyKeyEEENS2_INS1_5ValueEEEj
	.hidden	_ZN2js17PreventExtensionsEP9JSContextN2JS6HandleIP8JSObjectEE
	.hidden	_ZN2js18WasmInstanceObject19getExportedFunctionEP9JSContextN2JS6HandleIPS0_EEjNS3_13MutableHandleIP10JSFunctionEE
	.hidden	_ZN14JSLinearString11isIndexSlowIhEEbPKT_mPj
	.hidden	_ZN14JSLinearString11isIndexSlowIDsEEbPKT_mPj
	.hidden	_ZN2js4wasm3ValC1ERKNS0_6LitValE
	.hidden	_ZN2js16WasmGlobalObject6setValEP9JSContextN2JS6HandleINS_4wasm3ValEEE
	.hidden	_ZN2js8DebugAPI25slowPathOnNewWasmInstanceEP9JSContextN2JS6HandleIPNS_18WasmInstanceObjectEEE
	.hidden	_ZN2js3jit14MacroAssembler21pushFakeReturnAddressENS0_8RegisterE
	.hidden	_ZN2js3jit14MacroAssembler4PushENS0_5Imm32E
	.hidden	_ZN2js3jit14MacroAssembler13linkExitFrameENS0_8RegisterES2_
	.hidden	_ZN2js3jit14MacroAssembler15subFromStackPtrENS0_5Imm32E
	.hidden	_ZN2js3jit14MacroAssembler31AutoProfilerCallInstrumentationC1ERS1_
	.hidden	_ZN2js3jit17MacroAssemblerX6419loadConstantFloat32EfNS0_13FloatRegisterE
	.hidden	_ZN2js3jit17MacroAssemblerX6418loadConstantDoubleEdNS0_13FloatRegisterE
	.hidden	_ZN2js3jit14MacroAssembler9moveValueERKNS0_20TypedOrValueRegisterERKNS0_12ValueOperandE
	.hidden	_ZN2js3jit14MacroAssembler9freeStackEj
	.hidden	_ZN2js9LifoAlloc5resetEm
	.hidden	_ZN2js9LifoAlloc4markEv
	.hidden	_ZN2js3jit14MacroAssemblerC2ENS1_9WasmTokenERNS0_13TempAllocatorE
	.hidden	_ZN2js4wasm24GenerateFunctionPrologueERNS_3jit14MacroAssemblerERKNS0_14FuncTypeIdDescERKN7mozilla5MaybeIjEEPNS0_11FuncOffsetsE
	.hidden	_ZN2js3jit14MacroAssembler23wasmReserveStackCheckedEjNS_4wasm14BytecodeOffsetE
	.hidden	_ZN2js3jit14MacroAssembler14wasmCallImportERKNS_4wasm12CallSiteDescERKNS2_10CalleeDescE
	.hidden	_ZN2js3jit14MacroAssembler20switchToWasmTlsRealmENS0_8RegisterES2_
	.hidden	_ZN2js4wasm24GenerateFunctionEpilogueERNS_3jit14MacroAssemblerEjPNS0_11FuncOffsetsE
	.hidden	_ZN2js3jit10JitContextD1Ev
	.hidden	_ZN2js9LifoAlloc7releaseENS0_4MarkE
	.hidden	_ZN2js9LifoAlloc7freeAllEv
	.hidden	_ZN2js3jit14MacroAssembler14PushRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	.hidden	_ZN2js3jit15ABIArgGeneratorC1Ev
	.hidden	_ZN2js3jit15ABIArgGenerator4nextENS0_7MIRTypeE
	.hidden	_ZN2js3jit14MacroAssembler11PopStackPtrEv
	.hidden	_ZN2js3jit14MacroAssembler13PopRegsInMaskENS0_7LiveSetINS0_11RegisterSetEEE
	.hidden	_ZN2js3jit14MacroAssembler13callWithPatchEv
	.hidden	_ZN2js4wasm24GenerateJitEntryPrologueERNS_3jit14MacroAssemblerEPNS0_7OffsetsE
	.hidden	_ZN2js3jit14MacroAssembler12loadBigInt64ENS0_8RegisterENS0_10Register64E
	.hidden	_ZN2js3jit17MacroAssemblerX646asMasmEv
	.hidden	_ZN2js3jit17MacroAssemblerX648boxValueE11JSValueTypeNS0_8RegisterES3_
	.hidden	_ZN2js3jit14MacroAssembler4callENS_4wasm15SymbolicAddressE
	.hidden	_ZN2js3jit14MacroAssembler19PopRegsInMaskIgnoreENS0_7LiveSetINS0_11RegisterSetEEES4_
	.hidden	_ZN2js3jit14MacroAssembler18initializeBigInt64ENS_6Scalar4TypeENS0_8RegisterENS0_10Register64E
	.hidden	_ZN2js4wasm21SymbolicAddressTargetENS0_15SymbolicAddressE
	.hidden	_ZN2js3jit14MacroAssembler25enterFakeExitFrameForWasmENS0_8RegisterES2_NS0_13ExitFrameTypeE
	.hidden	_ZN2js4wasm23GenerateJitExitPrologueERNS_3jit14MacroAssemblerEjPNS0_15CallableOffsetsE
	.hidden	_ZN2js3jit14MacroAssembler14loadJitCodeRawENS0_8RegisterES2_
	.hidden	_ZN2js4wasm23GenerateJitExitEpilogueERNS_3jit14MacroAssemblerEjPNS0_15CallableOffsetsE
	.hidden	_ZN2js4wasm9SetExitFPERNS_3jit14MacroAssemblerENS0_10ExitReasonENS1_8RegisterE
	.hidden	_ZN2js4wasm11ClearExitFPERNS_3jit14MacroAssemblerENS1_8RegisterE
	.hidden	_ZN2js3jit14MacroAssembler24callAndPushReturnAddressENS0_8RegisterE
	.hidden	_ZN2js3jit14MacroAssembler17convertValueToIntENS0_12ValueOperandEPNS0_11MDefinitionEPNS0_5LabelES6_S6_NS0_8RegisterENS0_13FloatRegisterES7_S6_NS0_21IntConversionBehaviorENS0_22IntConversionInputKindE
	.hidden	_ZN2js3jit14MacroAssembler27convertValueToFloatingPointENS0_12ValueOperandENS0_13FloatRegisterEPNS0_5LabelENS0_7MIRTypeE
	.hidden	_ZN2js3jit14MacroAssembler4PushENS0_7ImmWordE
	.hidden	_ZN2js15TraceValueArrayEP8JSTracermPN2JS5ValueE
	.hidden	_ZN2js4wasm11CodeSegmentD2Ev
	.hidden	_ZN2js4wasm12CompileTier2ERKNS0_11CompileArgsERKN7mozilla6VectorIhLm0ENS_17SystemAllocPolicyEEERKNS0_6ModuleEPNS4_6AtomicIbLNS4_14MemoryOrderingE2EvEE
	.hidden	_ZNK2js4wasm6Import14serializedSizeEv
	.hidden	_ZNK2js4wasm6Export14serializedSizeEv
	.hidden	_ZNK2js4wasm11DataSegment14serializedSizeEv
	.hidden	_ZNK2js4wasm11ElemSegment14serializedSizeEv
	.hidden	_ZNK2js4wasm13CustomSection14serializedSizeEv
	.hidden	_ZNK2js4wasm6Import9serializeEPh
	.hidden	_ZNK2js4wasm6Export9serializeEPh
	.hidden	_ZNK2js4wasm11DataSegment9serializeEPh
	.hidden	_ZNK2js4wasm11ElemSegment9serializeEPh
	.hidden	_ZNK2js4wasm13CustomSection9serializeEPh
	.hidden	_ZN2js4wasm6Import11deserializeEPKh
	.hidden	_ZN2js4wasm6Export11deserializeEPKh
	.hidden	_ZN2js4wasm11DataSegment11deserializeEPKh
	.hidden	_ZN2js4wasm11ElemSegment11deserializeEPKh
	.hidden	_ZN2js4wasm13CustomSection11deserializeEPKh
	.hidden	_ZNK2js4wasm6Import19sizeOfExcludingThisEPFmPKvE
	.hidden	_ZNK2js4wasm6Export19sizeOfExcludingThisEPFmPKvE
	.hidden	_ZNK2js4wasm11DataSegment19sizeOfExcludingThisEPFmPKvE
	.hidden	_ZNK2js4wasm11ElemSegment19sizeOfExcludingThisEPFmPKvE
	.hidden	_ZNK2js4wasm13CustomSection19sizeOfExcludingThisEPFmPKvE
	.hidden	_ZN2js23NewObjectWithClassProtoEP9JSContextPK7JSClassN2JS6HandleIP8JSObjectEENS_2gc9AllocKindENS_13NewObjectKindE
	.hidden	_ZN2js29NewObjectWithGivenTaggedProtoEP9JSContextPK7JSClassN2JS6HandleINS_11TaggedProtoEEENS_2gc9AllocKindENS_13NewObjectKindEj
	.hidden	_ZN2js40TraceManuallyBarrieredGenericPointerEdgeEP8JSTracerPPNS_2gc4CellEPKc
	.hidden	_ZN2js2gc11StoreBuffer18setAboutToOverflowEN2JS8GCReasonE
	.hidden	_ZN2js2gc28IsAboutToBeFinalizedInternalI8JSObjectEEbPPT_
	.hidden	_ZN2js2gc15LockStoreBufferEPNS0_11StoreBufferE
	.hidden	_ZN2js2gc17UnlockStoreBufferEPNS0_11StoreBufferE
	.hidden	_ZN2js4wasm4CodeC1EN7mozilla9UniquePtrINS0_8CodeTierEN2JS12DeletePolicyIS4_EEEERKNS0_8MetadataEONS0_10JumpTablesEONS2_6VectorINS0_10StructTypeELm0ENS_17SystemAllocPolicyEEE
	.hidden	_ZN2js2gc17TraceEdgeInternalIP8JSObjectEEbP8JSTracerPT_PKc
	.hidden	_ZN2js4wasm10DebugStateC1ERKNS0_4CodeERKNS0_6ModuleE
	.hidden	_ZN9JSContext21addPendingOutOfMemoryEv
	.hidden	_ZN9JSRuntime13onOutOfMemoryEN2js13AllocFunctionEmmPvP9JSContext
	.hidden	_ZN2js3jit13FloatRegister18GetPushSizeInBytesERKNS0_16TypedRegisterSetIS1_EE
	.hidden	_ZN2js4wasm9CodeRangeC1EjjNS0_11FuncOffsetsE
	.hidden	_ZN2js4wasm9CodeRangeC1ENS1_4KindEjNS0_7OffsetsE
	.hidden	_ZN2js4wasm9CodeRangeC1ENS1_4KindEjNS0_15CallableOffsetsE
	.hidden	_ZN2js4wasm9CodeRangeC1EjNS0_14JitExitOffsetsE
	.hidden	_ZN2js4wasm9CodeRangeC1ENS1_4KindENS0_7OffsetsE
	.hidden	_ZN2js4wasm9CodeRangeC1ENS1_4KindENS0_15CallableOffsetsE
	.weak	moz_arena_malloc
	.weak	moz_arena_realloc
	.weak	_ZN7mozilla6detail9MutexImpl4lockEv
	.weak	_ZN7mozilla6detail9MutexImpl6unlockEv
	.weak	_ZN7mozilla6detail9MutexImplD2Ev
	.weak	_ZN7mozilla6detail9MutexImplC2Ev
	.weak	gMozCrashReason

	.globl	_ZN2js4wasm6ModuleD1Ev
	.type	_ZN2js4wasm6ModuleD1Ev,@function
	.hidden	_ZN2js4wasm6ModuleD1Ev
.set _ZN2js4wasm6ModuleD1Ev, _ZN2js4wasm6ModuleD2Ev
	.globl	_ZN2js4wasm5RealmC1EP9JSRuntime
	.type	_ZN2js4wasm5RealmC1EP9JSRuntime,@function
	.hidden	_ZN2js4wasm5RealmC1EP9JSRuntime
.set _ZN2js4wasm5RealmC1EP9JSRuntime, _ZN2js4wasm5RealmC2EP9JSRuntime
	.globl	_ZN2js4wasm5RealmD1Ev
	.type	_ZN2js4wasm5RealmD1Ev,@function
	.hidden	_ZN2js4wasm5RealmD1Ev
.set _ZN2js4wasm5RealmD1Ev, _ZN2js4wasm5RealmD2Ev
	.ident	"clang version 7.0.0 (tags/RELEASE_700/final)"
	.section	".note.GNU-stack","",@progbits
###SPA### main_payload_64
###SPA### /tmp/Unified_cpp_js_src_wasm2-92214e.s:  cfi_startproc = 210, cfi_endproc = 210, pass_thru = 0 
